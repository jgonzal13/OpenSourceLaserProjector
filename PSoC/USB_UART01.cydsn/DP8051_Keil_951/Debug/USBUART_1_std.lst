C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 1   


C51 COMPILER V9.51, COMPILATION OF MODULE USBUART_1_STD
OBJECT MODULE PLACED IN .\DP8051_Keil_951\Debug\USBUART_1_std.obj
COMPILER INVOKED BY: C:\Program Files (x86)\Cypress\PSoC Creator\3.0\PSoC Creator\import\keil\pk51\9.51\C51\BIN\c51.exe 
                    -.\Generated_Source\PSoC3\USBUART_1_std.c NOIV LARGE MODDP2 OMF2 VB(1) PR(.\DP8051_Keil_951\Debug\USBUART_1_std.lst) CD D
                    -B NOIP OT(2,SIZE) INCDIR(.,.\Generated_Source\PSoC3) OJ(.\DP8051_Keil_951\Debug\USBUART_1_std.obj)

line level    source

   1          /*******************************************************************************
   2          * File Name: USBUART_1_std.c
   3          * Version 2.60
   4          *
   5          * Description:
   6          *  USB Standard request handler.
   7          *
   8          * Note:
   9          *
  10          ********************************************************************************
  11          * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  12          * You may use this file only in accordance with the license, terms, conditions,
  13          * disclaimers, and limitations in the end user license agreement accompanying
  14          * the software package with which this file was provided.
  15          *******************************************************************************/
  16          
  17          #include "USBUART_1.h"
  18          #include "USBUART_1_cdc.h"
  19          #include "USBUART_1_pvt.h"
  20          #if defined(USBUART_1_ENABLE_MIDI_STREAMING) 
                  #include "USBUART_1_midi.h"
              #endif /* End USBUART_1_ENABLE_MIDI_STREAMING*/
  23          
  24          
  25          /***************************************
  26          *   Static data allocation
  27          ***************************************/
  28          
  29          #if defined(USBUART_1_ENABLE_FWSN_STRING)
                  static volatile uint8 *USBUART_1_fwSerialNumberStringDescriptor;
                  static volatile uint8 USBUART_1_snStringConfirm = USBUART_1_FALSE;
              #endif  /* USBUART_1_ENABLE_FWSN_STRING */
  33          
  34          #if defined(USBUART_1_ENABLE_FWSN_STRING)
              
              
                  /*******************************************************************************
                  * Function Name: USBUART_1_SerialNumString
                  ********************************************************************************
                  *
                  * Summary:
                  *  Application firmware may supply the source of the USB device descriptors
                  *  serial number string during runtime.
                  *
                  * Parameters:
                  *  snString:  pointer to string.
                  *
                  * Return:
                  *  None.
                  *
                  * Reentrant:
                  *  No.
                  *
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 2   

                  *******************************************************************************/
                  void  USBUART_1_SerialNumString(uint8 snString[]) 
                  {
                      USBUART_1_snStringConfirm = USBUART_1_FALSE;
                      if(snString != NULL)
                      {
                          USBUART_1_fwSerialNumberStringDescriptor = snString;
                          /* Check descriptor validation */
                          if( (snString[0u] > 1u ) && (snString[1u] == USBUART_1_DESCR_STRING) )
                          {
                              USBUART_1_snStringConfirm = USBUART_1_TRUE;
                          }
                      }
                  }
              
              #endif  /* USBUART_1_ENABLE_FWSN_STRING */
  70          
  71          
  72          /*******************************************************************************
  73          * Function Name: USBUART_1_HandleStandardRqst
  74          ********************************************************************************
  75          *
  76          * Summary:
  77          *  This Routine dispatches standard requests
  78          *
  79          * Parameters:
  80          *  None.
  81          *
  82          * Return:
  83          *  TRUE if request handled.
  84          *
  85          * Reentrant:
  86          *  No.
  87          *
  88          *******************************************************************************/
  89          uint8 USBUART_1_HandleStandardRqst(void) 
  90          {
  91   1          uint8 requestHandled = USBUART_1_FALSE;
  92   1          uint8 interfaceNumber;
  93   1          #if defined(USBUART_1_ENABLE_STRINGS)
  94   1              volatile uint8 *pStr = 0u;
  95   1              #if defined(USBUART_1_ENABLE_DESCRIPTOR_STRINGS)
  96   1                  uint8 nStr;
  97   1                  uint8 descrLength;
  98   1              #endif /* USBUART_1_ENABLE_DESCRIPTOR_STRINGS */
  99   1          #endif /* USBUART_1_ENABLE_STRINGS */
 100   1          static volatile uint8 USBUART_1_tBuffer[USBUART_1_STATUS_LENGTH_MAX];
 101   1          const T_USBUART_1_LUT CYCODE *pTmp;
 102   1          USBUART_1_currentTD.count = 0u;
 103   1      
 104   1          if ((CY_GET_REG8(USBUART_1_bmRequestType) & USBUART_1_RQST_DIR_MASK) == USBUART_1_RQST_DIR_D2H)
 105   1          {
 106   2              /* Control Read */
 107   2              switch (CY_GET_REG8(USBUART_1_bRequest))
 108   2              {
 109   3                  case USBUART_1_GET_DESCRIPTOR:
 110   3                      if (CY_GET_REG8(USBUART_1_wValueHi) == USBUART_1_DESCR_DEVICE)
 111   3                      {
 112   4                          pTmp = USBUART_1_GetDeviceTablePtr();
 113   4                          USBUART_1_currentTD.pData = (volatile uint8 *)pTmp->p_list;
 114   4                          USBUART_1_currentTD.count = USBUART_1_DEVICE_DESCR_LENGTH;
 115   4                          requestHandled  = USBUART_1_InitControlRead();
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 3   

 116   4                      }
 117   3                      else if (CY_GET_REG8(USBUART_1_wValueHi) == USBUART_1_DESCR_CONFIG)
 118   3                      {
 119   4                          pTmp = USBUART_1_GetConfigTablePtr(CY_GET_REG8(USBUART_1_wValueLo));
 120   4                          USBUART_1_currentTD.pData = (volatile uint8 *)pTmp->p_list;
 121   4                          USBUART_1_currentTD.count = ((uint16)(USBUART_1_currentTD.pData)[ \
 122   4                                            USBUART_1_CONFIG_DESCR_TOTAL_LENGTH_HI] << 8u) | \
 123   4                                           (USBUART_1_currentTD.pData)[USBUART_1_CONFIG_DESCR_TOTAL_LENGTH_LOW];
 124   4                          requestHandled  = USBUART_1_InitControlRead();
 125   4                      }
 126   3                      #if defined(USBUART_1_ENABLE_STRINGS)
 127   3                      else if (CY_GET_REG8(USBUART_1_wValueHi) == USBUART_1_DESCR_STRING)
 128   3                      {
 129   4                          /* Descriptor Strings*/
 130   4                          #if defined(USBUART_1_ENABLE_DESCRIPTOR_STRINGS)
 131   4                              nStr = 0u;
 132   4                              pStr = (volatile uint8 *)&USBUART_1_STRING_DESCRIPTORS[0u];
 133   4                              while ( (CY_GET_REG8(USBUART_1_wValueLo) > nStr) && (*pStr != 0u) )
 134   4                              {
 135   5                                  /* Read descriptor length from 1st byte */
 136   5                                  descrLength = *pStr;
 137   5                                  /* Move to next string descriptor */
 138   5                                  pStr = &pStr[descrLength];
 139   5                                  nStr++;
 140   5                              }
 141   4                          #endif /* End USBUART_1_ENABLE_DESCRIPTOR_STRINGS */
 142   4                          /* Microsoft OS String*/
 143   4                          #if defined(USBUART_1_ENABLE_MSOS_STRING)
 144   4                              if( CY_GET_REG8(USBUART_1_wValueLo) == USBUART_1_STRING_MSOS )
 145   4                              {
 146   5                                  pStr = (volatile uint8 *)&USBUART_1_MSOS_DESCRIPTOR[0u];
 147   5                              }
 148   4                          #endif /* End USBUART_1_ENABLE_MSOS_STRING*/
 149   4                          /* SN string */
 150   4                          #if defined(USBUART_1_ENABLE_SN_STRING)
 151   4                              if( (CY_GET_REG8(USBUART_1_wValueLo) != 0u) &&
 152   4                                  (CY_GET_REG8(USBUART_1_wValueLo) ==
 153   4                                  USBUART_1_DEVICE0_DESCR[USBUART_1_DEVICE_DESCR_SN_SHIFT]) )
 154   4                              {
 155   5                                  pStr = (volatile uint8 *)&USBUART_1_SN_STRING_DESCRIPTOR[0u];
 156   5                                  #if defined(USBUART_1_ENABLE_FWSN_STRING)
                                              if(USBUART_1_snStringConfirm != USBUART_1_FALSE)
                                              {
                                                  pStr = USBUART_1_fwSerialNumberStringDescriptor;
                                              }
                                          #endif  /* USBUART_1_ENABLE_FWSN_STRING */
 162   5                                  #if defined(USBUART_1_ENABLE_IDSN_STRING)
 163   5                                      /* Read DIE ID and generate string descriptor in RAM */
 164   5                                      USBUART_1_ReadDieID(USBUART_1_idSerialNumberStringDescriptor);
 165   5                                      pStr = USBUART_1_idSerialNumberStringDescriptor;
 166   5                                  #endif    /* End USBUART_1_ENABLE_IDSN_STRING */
 167   5                              }
 168   4                          #endif    /* End USBUART_1_ENABLE_SN_STRING */
 169   4                          if (*pStr != 0u)
 170   4                          {
 171   5                              USBUART_1_currentTD.count = *pStr;
 172   5                              USBUART_1_currentTD.pData = pStr;
 173   5                              requestHandled  = USBUART_1_InitControlRead();
 174   5                          }
 175   4                      }
 176   3                      #endif /* End USBUART_1_ENABLE_STRINGS */
 177   3                      else
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 4   

 178   3                      {
 179   4                          requestHandled = USBUART_1_DispatchClassRqst();
 180   4                      }
 181   3                      break;
 182   3                  case USBUART_1_GET_STATUS:
 183   3                      switch ((CY_GET_REG8(USBUART_1_bmRequestType) & USBUART_1_RQST_RCPT_MASK))
 184   3                      {
 185   4                          case USBUART_1_RQST_RCPT_EP:
 186   4                              USBUART_1_currentTD.count = USBUART_1_EP_STATUS_LENGTH;
 187   4                              USBUART_1_tBuffer[0u] = USBUART_1_EP[ \
 188   4                                              CY_GET_REG8(USBUART_1_wIndexLo) & USBUART_1_DIR_UNUSED].hwEpState;
 189   4                              USBUART_1_tBuffer[1u] = 0u;
 190   4                              USBUART_1_currentTD.pData = &USBUART_1_tBuffer[0u];
 191   4                              requestHandled  = USBUART_1_InitControlRead();
 192   4                              break;
 193   4                          case USBUART_1_RQST_RCPT_DEV:
 194   4                              USBUART_1_currentTD.count = USBUART_1_DEVICE_STATUS_LENGTH;
 195   4                              USBUART_1_tBuffer[0u] = USBUART_1_deviceStatus;
 196   4                              USBUART_1_tBuffer[1u] = 0u;
 197   4                              USBUART_1_currentTD.pData = &USBUART_1_tBuffer[0u];
 198   4                              requestHandled  = USBUART_1_InitControlRead();
 199   4                              break;
 200   4                          default:    /* requestHandled is initialized as FALSE by default */
 201   4                              break;
 202   4                      }
 203   3                      break;
 204   3                  case USBUART_1_GET_CONFIGURATION:
 205   3                      USBUART_1_currentTD.count = 1u;
 206   3                      USBUART_1_currentTD.pData = (volatile uint8 *)&USBUART_1_configuration;
 207   3                      requestHandled  = USBUART_1_InitControlRead();
 208   3                      break;
 209   3                  case USBUART_1_GET_INTERFACE:
 210   3                      USBUART_1_currentTD.count = 1u;
 211   3                      USBUART_1_currentTD.pData = (volatile uint8 *)&USBUART_1_interfaceSetting[ \
 212   3                                                                                  CY_GET_REG8(USBUART_1_wIndexLo
             -)];
 213   3                      requestHandled  = USBUART_1_InitControlRead();
 214   3                      break;
 215   3                  default: /* requestHandled is initialized as FALSE by default */
 216   3                      break;
 217   3              }
 218   2          }
 219   1          else {
 220   2              /* Control Write */
 221   2              switch (CY_GET_REG8(USBUART_1_bRequest))
 222   2              {
 223   3                  case USBUART_1_SET_ADDRESS:
 224   3                      USBUART_1_deviceAddress = CY_GET_REG8(USBUART_1_wValueLo);
 225   3                      requestHandled = USBUART_1_InitNoDataControlTransfer();
 226   3                      break;
 227   3                  case USBUART_1_SET_CONFIGURATION:
 228   3                      USBUART_1_configuration = CY_GET_REG8(USBUART_1_wValueLo);
 229   3                      USBUART_1_configurationChanged = USBUART_1_TRUE;
 230   3                      USBUART_1_Config(USBUART_1_TRUE);
 231   3                      requestHandled = USBUART_1_InitNoDataControlTransfer();
 232   3                      break;
 233   3                  case USBUART_1_SET_INTERFACE:
 234   3                      if (USBUART_1_ValidateAlternateSetting() != 0u)
 235   3                      {
 236   4                          interfaceNumber = CY_GET_REG8(USBUART_1_wIndexLo);
 237   4                          USBUART_1_interfaceNumber = interfaceNumber;
 238   4                          USBUART_1_configurationChanged = USBUART_1_TRUE;
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 5   

 239   4                          #if ((USBUART_1_EP_MA == USBUART_1__MA_DYNAMIC) && \
 240   4                               (USBUART_1_EP_MM == USBUART_1__EP_MANUAL) )
                                      USBUART_1_Config(USBUART_1_FALSE);
                                  #else
 243   4                              USBUART_1_ConfigAltChanged();
 244   4                          #endif /* End (USBUART_1_EP_MA == USBUART_1__MA_DYNAMIC) */
 245   4                          /* Update handled Alt setting changes status */
 246   4                          USBUART_1_interfaceSetting_last[interfaceNumber] =
 247   4                               USBUART_1_interfaceSetting[interfaceNumber];
 248   4                          requestHandled = USBUART_1_InitNoDataControlTransfer();
 249   4                      }
 250   3                      break;
 251   3                  case USBUART_1_CLEAR_FEATURE:
 252   3                      switch (CY_GET_REG8(USBUART_1_bmRequestType) & USBUART_1_RQST_RCPT_MASK)
 253   3                      {
 254   4                          case USBUART_1_RQST_RCPT_EP:
 255   4                              if (CY_GET_REG8(USBUART_1_wValueLo) == USBUART_1_ENDPOINT_HALT)
 256   4                              {
 257   5                                  requestHandled = USBUART_1_ClearEndpointHalt();
 258   5                              }
 259   4                              break;
 260   4                          case USBUART_1_RQST_RCPT_DEV:
 261   4                              /* Clear device REMOTE_WAKEUP */
 262   4                              if (CY_GET_REG8(USBUART_1_wValueLo) == USBUART_1_DEVICE_REMOTE_WAKEUP)
 263   4                              {
 264   5                                  USBUART_1_deviceStatus &= (uint8)~USBUART_1_DEVICE_STATUS_REMOTE_WAKEUP;
 265   5                                  requestHandled = USBUART_1_InitNoDataControlTransfer();
 266   5                              }
 267   4                              break;
 268   4                          case USBUART_1_RQST_RCPT_IFC:
 269   4                              /* Validate interfaceNumber */
 270   4                              if (CY_GET_REG8(USBUART_1_wIndexLo) < USBUART_1_MAX_INTERFACES_NUMBER)
 271   4                              {
 272   5                                  USBUART_1_interfaceStatus[CY_GET_REG8(USBUART_1_wIndexLo)] &=
 273   5                                                                      (uint8)~(CY_GET_REG8(USBUART_1_wValueLo));
 274   5                                  requestHandled = USBUART_1_InitNoDataControlTransfer();
 275   5                              }
 276   4                              break;
 277   4                          default:    /* requestHandled is initialized as FALSE by default */
 278   4                              break;
 279   4                      }
 280   3                      break;
 281   3                  case USBUART_1_SET_FEATURE:
 282   3                      switch (CY_GET_REG8(USBUART_1_bmRequestType) & USBUART_1_RQST_RCPT_MASK)
 283   3                      {
 284   4                          case USBUART_1_RQST_RCPT_EP:
 285   4                              if (CY_GET_REG8(USBUART_1_wValueLo) == USBUART_1_ENDPOINT_HALT)
 286   4                              {
 287   5                                  requestHandled = USBUART_1_SetEndpointHalt();
 288   5                              }
 289   4                              break;
 290   4                          case USBUART_1_RQST_RCPT_DEV:
 291   4                              /* Set device REMOTE_WAKEUP */
 292   4                              if (CY_GET_REG8(USBUART_1_wValueLo) == USBUART_1_DEVICE_REMOTE_WAKEUP)
 293   4                              {
 294   5                                  USBUART_1_deviceStatus |= USBUART_1_DEVICE_STATUS_REMOTE_WAKEUP;
 295   5                                  requestHandled = USBUART_1_InitNoDataControlTransfer();
 296   5                              }
 297   4                              break;
 298   4                          case USBUART_1_RQST_RCPT_IFC:
 299   4                              /* Validate interfaceNumber */
 300   4                              if (CY_GET_REG8(USBUART_1_wIndexLo) < USBUART_1_MAX_INTERFACES_NUMBER)
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 6   

 301   4                              {
 302   5                                  USBUART_1_interfaceStatus[CY_GET_REG8(USBUART_1_wIndexLo)] &=
 303   5                                                                      (uint8)~(CY_GET_REG8(USBUART_1_wValueLo));
 304   5                                  requestHandled = USBUART_1_InitNoDataControlTransfer();
 305   5                              }
 306   4                              break;
 307   4                          default:    /* requestHandled is initialized as FALSE by default */
 308   4                              break;
 309   4                      }
 310   3                      break;
 311   3                  default:    /* requestHandled is initialized as FALSE by default */
 312   3                      break;
 313   3              }
 314   2          }
 315   1          return(requestHandled);
 316   1      }
 317          
 318          
 319          #if defined(USBUART_1_ENABLE_IDSN_STRING)
 320          
 321              /***************************************************************************
 322              * Function Name: USBUART_1_ReadDieID
 323              ****************************************************************************
 324              *
 325              * Summary:
 326              *  This routine read Die ID and generate Serial Number string descriptor.
 327              *
 328              * Parameters:
 329              *  descr:  pointer on string descriptor.
 330              *
 331              * Return:
 332              *  None.
 333              *
 334              * Reentrant:
 335              *  No.
 336              *
 337              ***************************************************************************/
 338              void USBUART_1_ReadDieID(uint8 descr[]) 
 339              {
 340   1              uint8 i;
 341   1              uint8 j = 0u;
 342   1              uint8 value;
 343   1              const char8 CYCODE hex[16u] = "0123456789ABCDEF";
 344   1      
 345   1      
 346   1              /* Check descriptor validation */
 347   1              if( descr != NULL)
 348   1              {
 349   2                  descr[0u] = USBUART_1_IDSN_DESCR_LENGTH;
 350   2                  descr[1u] = USBUART_1_DESCR_STRING;
 351   2      
 352   2                  /* fill descriptor */
 353   2                  for(i = 2u; i < USBUART_1_IDSN_DESCR_LENGTH; i += 4u)
 354   2                  {
 355   3                      value = CY_GET_XTND_REG8((void CYFAR *)(USBUART_1_DIE_ID + j));
 356   3                      j++;
 357   3                      descr[i] = (uint8)hex[value >> 4u];
 358   3                      descr[i + 2u] = (uint8)hex[value & 0x0Fu];
 359   3                  }
 360   2              }
 361   1          }
 362          
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 7   

 363          #endif /* End USBUART_1_ENABLE_IDSN_STRING */
 364          
 365          
 366          /*******************************************************************************
 367          * Function Name: USBUART_1_ConfigReg
 368          ********************************************************************************
 369          *
 370          * Summary:
 371          *  This routine configures hardware registers from the variables.
 372          *  It is called from USBUART_1_Config() function and from RestoreConfig
 373          *  after Wakeup.
 374          *
 375          * Parameters:
 376          *  None.
 377          *
 378          * Return:
 379          *  None.
 380          *
 381          *******************************************************************************/
 382          void USBUART_1_ConfigReg(void) 
 383          {
 384   1          uint8 ep;
 385   1          uint8 i;
 386   1          #if(USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO)
                      uint8 ep_type = 0u;
                  #endif /* End USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO */
 389   1      
 390   1          /* Set the endpoint buffer addresses */
 391   1          ep = USBUART_1_EP1;
 392   1          for (i = 0u; i < 0x80u; i+= 0x10u)
 393   1          {
 394   2              CY_SET_REG8((reg8 *)(USBUART_1_ARB_EP1_CFG_IND + i), USBUART_1_ARB_EPX_CFG_CRC_BYPASS |
 395   2                                                                USBUART_1_ARB_EPX_CFG_RESET);
 396   2      
 397   2              #if(USBUART_1_EP_MM != USBUART_1__EP_MANUAL)
                          /* Enable all Arbiter EP Interrupts : err, buf under, buf over, dma gnt(mode2 only), in buf fu
             -ll */
                          CY_SET_REG8((reg8 *)(USBUART_1_ARB_EP1_INT_EN_IND + i), USBUART_1_ARB_EPX_INT_MASK);
                      #endif   /* End USBUART_1_EP_MM != USBUART_1__EP_MANUAL */
 401   2      
 402   2              if(USBUART_1_EP[ep].epMode != USBUART_1_MODE_DISABLE)
 403   2              {
 404   3                  if((USBUART_1_EP[ep].addr & USBUART_1_DIR_IN) != 0u )
 405   3                  {
 406   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + i), USBUART_1_MODE_NAK_IN);
 407   4                  }
 408   3                  else
 409   3                  {
 410   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + i), USBUART_1_MODE_NAK_OUT);
 411   4                      /* Prepare EP type mask for automatic memory allocation */
 412   4                      #if(USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO)
                                  ep_type |= (uint8)(0x01u << (ep - USBUART_1_EP1));
                              #endif /* End USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO */
 415   4                  }
 416   3              }
 417   2              else
 418   2              {
 419   3                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + i), USBUART_1_MODE_STALL_DATA_EP);
 420   3              }
 421   2      
 422   2              #if(USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO)
 423   2                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CNT0_IND + i),   USBUART_1_EP[ep].bufferSize >> 8u);
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 8   

 424   2                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CNT1_IND + i),   USBUART_1_EP[ep].bufferSize & 0xFFu);
 425   2      
 426   2                  CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_RA_IND + i),     USBUART_1_EP[ep].buffOffset & 0xFFu);
 427   2                  CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_RA_MSB_IND + i), USBUART_1_EP[ep].buffOffset >> 8u);
 428   2                  CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_WA_IND + i),     USBUART_1_EP[ep].buffOffset & 0xFFu);
 429   2                  CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_WA_MSB_IND + i), USBUART_1_EP[ep].buffOffset >> 8u);
 430   2              #endif /* End USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO */
 431   2      
 432   2              ep++;
 433   2          }
 434   1      
 435   1          #if(USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO)
                       /* BUF_SIZE depend on DMA_THRESS value: 55-32 bytes  44-16 bytes 33-8 bytes 22-4 bytes 11-2 bytes
             - */
                      USBUART_1_BUF_SIZE_REG = USBUART_1_DMA_BUF_SIZE;
                      USBUART_1_DMA_THRES_REG = USBUART_1_DMA_BYTES_PER_BURST;   /* DMA burst threshold */
                      USBUART_1_DMA_THRES_MSB_REG = 0u;
                      USBUART_1_EP_ACTIVE_REG = USBUART_1_ARB_INT_MASK;
                      USBUART_1_EP_TYPE_REG = ep_type;
                      /* Cfg_cmp bit set to 1 once configuration is complete. */
                      USBUART_1_ARB_CFG_REG = USBUART_1_ARB_CFG_AUTO_DMA | USBUART_1_ARB_CFG_AUTO_MEM |
                                                     USBUART_1_ARB_CFG_CFG_CPM;
                      /* Cfg_cmp bit set to 0 during configuration of PFSUSB Registers. */
                      USBUART_1_ARB_CFG_REG = USBUART_1_ARB_CFG_AUTO_DMA | USBUART_1_ARB_CFG_AUTO_MEM;
                  #endif /* End USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO */
 448   1      
 449   1          CY_SET_REG8(USBUART_1_SIE_EP_INT_EN_PTR, 0xFFu);
 450   1      }
 451          
 452          
 453          /*******************************************************************************
 454          * Function Name: USBUART_1_Config
 455          ********************************************************************************
 456          *
 457          * Summary:
 458          *  This routine configures endpoints for the entire configuration by scanning
 459          *  the configuration descriptor.
 460          *
 461          * Parameters:
 462          *  clearAltSetting: It configures the bAlternateSetting 0 for each interface.
 463          *
 464          * Return:
 465          *  None.
 466          *
 467          * USBUART_1_interfaceClass - Initialized class array for each interface.
 468          *   It is used for handling Class specific requests depend on interface class.
 469          *   Different classes in multiple Alternate settings does not supported.
 470          *
 471          * Reentrant:
 472          *  No.
 473          *
 474          *******************************************************************************/
 475          void USBUART_1_Config(uint8 clearAltSetting) 
 476          {
 477   1          uint8 ep;
 478   1          uint8 cur_ep;
 479   1          uint8 i;
 480   1          uint8 ep_type;
 481   1          const uint8 *pDescr;
 482   1          #if(USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO)
 483   1              uint16 buffCount = 0u;
 484   1          #endif /* End USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO */
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 9   

 485   1      
 486   1          const T_USBUART_1_LUT CYCODE *pTmp;
 487   1          const T_USBUART_1_EP_SETTINGS_BLOCK CYCODE *pEP;
 488   1      
 489   1          /* Clear all of the endpoints */
 490   1          for (ep = 0u; ep < USBUART_1_MAX_EP; ep++)
 491   1          {
 492   2              USBUART_1_EP[ep].attrib = 0u;
 493   2              USBUART_1_EP[ep].hwEpState = 0u;
 494   2              USBUART_1_EP[ep].apiEpState = USBUART_1_NO_EVENT_PENDING;
 495   2              USBUART_1_EP[ep].epToggle = 0u;
 496   2              USBUART_1_EP[ep].epMode = USBUART_1_MODE_DISABLE;
 497   2              USBUART_1_EP[ep].bufferSize = 0u;
 498   2              USBUART_1_EP[ep].interface = 0u;
 499   2      
 500   2          }
 501   1      
 502   1          /* Clear Alternate settings for all interfaces */
 503   1          if(clearAltSetting != 0u)
 504   1          {
 505   2              for (i = 0u; i < USBUART_1_MAX_INTERFACES_NUMBER; i++)
 506   2              {
 507   3                  USBUART_1_interfaceSetting[i] = 0x00u;
 508   3                  USBUART_1_interfaceSetting_last[i] = 0x00u;
 509   3              }
 510   2          }
 511   1      
 512   1          /* Init Endpoints and Device Status if configured */
 513   1          if(USBUART_1_configuration > 0u)
 514   1          {
 515   2              pTmp = USBUART_1_GetConfigTablePtr(USBUART_1_configuration - 1u);
 516   2              /* Set Power status for current configuration */
 517   2              pDescr = (const uint8 *)pTmp->p_list;
 518   2              if((pDescr[USBUART_1_CONFIG_DESCR_ATTRIB] & USBUART_1_CONFIG_DESCR_ATTRIB_SELF_POWERED) != 0u)
 519   2              {
 520   3                  USBUART_1_deviceStatus |=  USBUART_1_DEVICE_STATUS_SELF_POWERED;
 521   3              }
 522   2              else
 523   2              {
 524   3                  USBUART_1_deviceStatus &=  (uint8)~USBUART_1_DEVICE_STATUS_SELF_POWERED;
 525   3              }
 526   2              /* Move to next element */
 527   2              pTmp = &pTmp[1u];
 528   2              ep = pTmp->c;  /* For this table, c is the number of endpoints configurations  */
 529   2      
 530   2              #if ((USBUART_1_EP_MA == USBUART_1__MA_DYNAMIC) && \
 531   2                   (USBUART_1_EP_MM == USBUART_1__EP_MANUAL) )
                          /* Configure for dynamic EP memory allocation */
                          /* p_list points the endpoint setting table. */
                          pEP = (T_USBUART_1_EP_SETTINGS_BLOCK *) pTmp->p_list;
                          for (i = 0u; i < ep; i++)
                          {
                              /* Compare current Alternate setting with EP Alt*/
                              if(USBUART_1_interfaceSetting[pEP->interface] == pEP->altSetting)
                              {
                                  cur_ep = pEP->addr & USBUART_1_DIR_UNUSED;
                                  ep_type = pEP->attributes & USBUART_1_EP_TYPE_MASK;
                                  if (pEP->addr & USBUART_1_DIR_IN)
                                  {
                                      /* IN Endpoint */
                                      USBUART_1_EP[cur_ep].apiEpState = USBUART_1_EVENT_PENDING;
                                      USBUART_1_EP[cur_ep].epMode = (ep_type == USBUART_1_EP_TYPE_ISOC) ?
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 10  

                                                                      USBUART_1_MODE_ISO_IN : USBUART_1_MODE_ACK_IN;
                                      #if defined(USBUART_1_ENABLE_CDC_CLASS)
                                          if(((pEP->bMisc == USBUART_1_CLASS_CDC_DATA) ||
                                              (pEP->bMisc == USBUART_1_CLASS_CDC)) &&
                                              (ep_type != USBUART_1_EP_TYPE_INT))
                                          {
                                              USBUART_1_cdc_data_in_ep = cur_ep;
                                          }
                                      #endif  /* End USBUART_1_ENABLE_CDC_CLASS*/
                                      #if ( defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
                                                           (USBUART_1_MIDI_IN_BUFF_SIZE > 0) )
                                          if((pEP->bMisc == USBUART_1_CLASS_AUDIO) &&
                                             (ep_type == USBUART_1_EP_TYPE_BULK))
                                          {
                                              USBUART_1_midi_in_ep = cur_ep;
                                          }
                                      #endif  /* End USBUART_1_ENABLE_MIDI_STREAMING*/
                                  }
                                  else
                                  {
                                      /* OUT Endpoint */
                                      USBUART_1_EP[cur_ep].apiEpState = USBUART_1_NO_EVENT_PENDING;
                                      USBUART_1_EP[cur_ep].epMode = (ep_type == USBUART_1_EP_TYPE_ISOC) ?
                                                                  USBUART_1_MODE_ISO_OUT : USBUART_1_MODE_ACK_OUT;
                                      #if defined(USBUART_1_ENABLE_CDC_CLASS)
                                          if(((pEP->bMisc == USBUART_1_CLASS_CDC_DATA) ||
                                              (pEP->bMisc == USBUART_1_CLASS_CDC)) &&
                                              (ep_type != USBUART_1_EP_TYPE_INT))
                                          {
                                              USBUART_1_cdc_data_out_ep = cur_ep;
                                          }
                                      #endif  /* End USBUART_1_ENABLE_CDC_CLASS*/
                                      #if ( defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
                                                   (USBUART_1_MIDI_OUT_BUFF_SIZE > 0) )
                                          if((pEP->bMisc == USBUART_1_CLASS_AUDIO) &&
                                             (ep_type == USBUART_1_EP_TYPE_BULK))
                                          {
                                              USBUART_1_midi_out_ep = cur_ep;
                                          }
                                      #endif  /* End USBUART_1_ENABLE_MIDI_STREAMING*/
                                  }
                                  USBUART_1_EP[cur_ep].bufferSize = pEP->bufferSize;
                                  USBUART_1_EP[cur_ep].addr = pEP->addr;
                                  USBUART_1_EP[cur_ep].attrib = pEP->attributes;
                              }
                              pEP = &pEP[1u];
                          }
                      #else /* Config for static EP memory allocation  */
 595   2                  for (i = USBUART_1_EP1; i < USBUART_1_MAX_EP; i++)
 596   2                  {
 597   3                      /* p_list points the endpoint setting table. */
 598   3                      pEP = (const T_USBUART_1_EP_SETTINGS_BLOCK CYCODE *) pTmp->p_list;
 599   3                      /* Find max length for each EP and select it (length could be different in different Alt s
             -ettings) */
 600   3                      /* but other settings should be correct with regards to Interface alt Setting */
 601   3                      for (cur_ep = 0u; cur_ep < ep; cur_ep++)
 602   3                      {
 603   4                          /* EP count is equal to EP # in table and we found larger EP length than have before*/
 604   4                          if(i == (pEP->addr & USBUART_1_DIR_UNUSED))
 605   4                          {
 606   5                              if(USBUART_1_EP[i].bufferSize < pEP->bufferSize)
 607   5                              {
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 11  

 608   6                                  USBUART_1_EP[i].bufferSize = pEP->bufferSize;
 609   6                              }
 610   5                              /* Compare current Alternate setting with EP Alt*/
 611   5                              if(USBUART_1_interfaceSetting[pEP->interface] == pEP->altSetting)
 612   5                              {
 613   6                                  ep_type = pEP->attributes & USBUART_1_EP_TYPE_MASK;
 614   6                                  if ((pEP->addr & USBUART_1_DIR_IN) != 0u)
 615   6                                  {
 616   7                                      /* IN Endpoint */
 617   7                                      USBUART_1_EP[i].apiEpState = USBUART_1_EVENT_PENDING;
 618   7                                      USBUART_1_EP[i].epMode = (ep_type == USBUART_1_EP_TYPE_ISOC) ?
 619   7                                                              USBUART_1_MODE_ISO_IN : USBUART_1_MODE_ACK_IN;
 620   7                                      /* Find and init CDC IN endpoint number */
 621   7                                      #if defined(USBUART_1_ENABLE_CDC_CLASS)
 622   7                                          if(((pEP->bMisc == USBUART_1_CLASS_CDC_DATA) ||
 623   7                                              (pEP->bMisc == USBUART_1_CLASS_CDC)) &&
 624   7                                              (ep_type != USBUART_1_EP_TYPE_INT))
 625   7                                          {
 626   8                                              USBUART_1_cdc_data_in_ep = i;
 627   8                                          }
 628   7                                      #endif  /* End USBUART_1_ENABLE_CDC_CLASS*/
 629   7                                      #if ( defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 630   7                                                   (USBUART_1_MIDI_IN_BUFF_SIZE > 0) )
                                                  if((pEP->bMisc == USBUART_1_CLASS_AUDIO) &&
                                                     (ep_type == USBUART_1_EP_TYPE_BULK))
                                                  {
                                                      USBUART_1_midi_in_ep = i;
                                                  }
                                              #endif  /* End USBUART_1_ENABLE_MIDI_STREAMING*/
 637   7                                  }
 638   6                                  else
 639   6                                  {
 640   7                                      /* OUT Endpoint */
 641   7                                      USBUART_1_EP[i].apiEpState = USBUART_1_NO_EVENT_PENDING;
 642   7                                      USBUART_1_EP[i].epMode = (ep_type == USBUART_1_EP_TYPE_ISOC) ?
 643   7                                                          USBUART_1_MODE_ISO_OUT : USBUART_1_MODE_ACK_OUT;
 644   7                                      /* Find and init CDC IN endpoint number */
 645   7                                      #if defined(USBUART_1_ENABLE_CDC_CLASS)
 646   7                                          if(((pEP->bMisc == USBUART_1_CLASS_CDC_DATA) ||
 647   7                                              (pEP->bMisc == USBUART_1_CLASS_CDC)) &&
 648   7                                              (ep_type != USBUART_1_EP_TYPE_INT))
 649   7                                          {
 650   8                                              USBUART_1_cdc_data_out_ep = i;
 651   8                                          }
 652   7                                      #endif  /* End USBUART_1_ENABLE_CDC_CLASS*/
 653   7                                      #if ( defined(USBUART_1_ENABLE_MIDI_STREAMING) && \
 654   7                                                   (USBUART_1_MIDI_OUT_BUFF_SIZE > 0) )
                                                  if((pEP->bMisc == USBUART_1_CLASS_AUDIO) &&
                                                     (ep_type == USBUART_1_EP_TYPE_BULK))
                                                  {
                                                      USBUART_1_midi_out_ep = i;
                                                  }
                                              #endif  /* End USBUART_1_ENABLE_MIDI_STREAMING*/
 661   7                                  }
 662   6                                  USBUART_1_EP[i].addr = pEP->addr;
 663   6                                  USBUART_1_EP[i].attrib = pEP->attributes;
 664   6      
 665   6                                  #if(USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO)
                                              break;      /* use first EP setting in Auto memory managment */
                                          #endif /* End USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO */
 668   6                              }
 669   5                          }
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 12  

 670   4                          pEP = &pEP[1u];
 671   4                      }
 672   3                  }
 673   2              #endif /* End (USBUART_1_EP_MA == USBUART_1__MA_DYNAMIC) */
 674   2      
 675   2              /* Init class array for each interface and interface number for each EP.
 676   2              *  It is used for handling Class specific requests directed to either an
 677   2              *  interface or the endpoint.
 678   2              */
 679   2              /* p_list points the endpoint setting table. */
 680   2              pEP = (const T_USBUART_1_EP_SETTINGS_BLOCK CYCODE *) pTmp->p_list;
 681   2              for (i = 0u; i < ep; i++)
 682   2              {
 683   3                  /* Configure interface number for each EP*/
 684   3                  USBUART_1_EP[pEP->addr & USBUART_1_DIR_UNUSED].interface = pEP->interface;
 685   3                  pEP = &pEP[1u];
 686   3              }
 687   2              /* Init pointer on interface class table*/
 688   2              USBUART_1_interfaceClass = USBUART_1_GetInterfaceClassTablePtr();
 689   2              /* Set the endpoint buffer addresses */
 690   2      
 691   2              #if(USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO)
 692   2                  for (ep = USBUART_1_EP1; ep < USBUART_1_MAX_EP; ep++)
 693   2                  {
 694   3                      USBUART_1_EP[ep].buffOffset = buffCount;
 695   3                       buffCount += USBUART_1_EP[ep].bufferSize;
 696   3                  }
 697   2              #endif /* End USBUART_1_EP_MM != USBUART_1__EP_DMAAUTO */
 698   2      
 699   2              /* Configure hardware registers */
 700   2              USBUART_1_ConfigReg();
 701   2          } /* USBUART_1_configuration > 0 */
 702   1      }
 703          
 704          
 705          /*******************************************************************************
 706          * Function Name: USBUART_1_ConfigAltChanged
 707          ********************************************************************************
 708          *
 709          * Summary:
 710          *  This routine update configuration for the required endpoints only.
 711          *  It is called after SET_INTERFACE request when Static memory allocation used.
 712          *
 713          * Parameters:
 714          *  None.
 715          *
 716          * Return:
 717          *  None.
 718          *
 719          * Reentrant:
 720          *  No.
 721          *
 722          *******************************************************************************/
 723          void USBUART_1_ConfigAltChanged(void) 
 724          {
 725   1          uint8 ep;
 726   1          uint8 cur_ep;
 727   1          uint8 i;
 728   1          uint8 ep_type;
 729   1          uint8 ri;
 730   1      
 731   1          const T_USBUART_1_LUT CYCODE *pTmp;
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 13  

 732   1          const T_USBUART_1_EP_SETTINGS_BLOCK CYCODE *pEP;
 733   1      
 734   1      
 735   1          /* Init Endpoints and Device Status if configured */
 736   1          if(USBUART_1_configuration > 0u)
 737   1          {
 738   2              pTmp = USBUART_1_GetConfigTablePtr(USBUART_1_configuration - 1u);
 739   2              pTmp = &pTmp[1u];
 740   2              ep = pTmp->c;  /* For this table, c is the number of endpoints configurations  */
 741   2      
 742   2              /* Do not touch EP which doesn't need reconfiguration */
 743   2              /* When Alt setting changed, the only required endpoints need to be reconfigured */
 744   2              /* p_list points the endpoint setting table. */
 745   2              pEP = (const T_USBUART_1_EP_SETTINGS_BLOCK CYCODE *) pTmp->p_list;
 746   2              for (i = 0u; i < ep; i++)
 747   2              {
 748   3                  /*If Alt setting changed and new is same with EP Alt */
 749   3                  if((USBUART_1_interfaceSetting[pEP->interface] !=
 750   3                      USBUART_1_interfaceSetting_last[pEP->interface] ) &&
 751   3                     (USBUART_1_interfaceSetting[pEP->interface] == pEP->altSetting) &&
 752   3                     (pEP->interface == CY_GET_REG8(USBUART_1_wIndexLo)))
 753   3                  {
 754   4                      cur_ep = pEP->addr & USBUART_1_DIR_UNUSED;
 755   4                      ri = ((cur_ep - USBUART_1_EP1) << USBUART_1_EPX_CNTX_ADDR_SHIFT);
 756   4                      ep_type = pEP->attributes & USBUART_1_EP_TYPE_MASK;
 757   4                      if ((pEP->addr & USBUART_1_DIR_IN) != 0u)
 758   4                      {
 759   5                          /* IN Endpoint */
 760   5                          USBUART_1_EP[cur_ep].apiEpState = USBUART_1_EVENT_PENDING;
 761   5                          USBUART_1_EP[cur_ep].epMode = (ep_type == USBUART_1_EP_TYPE_ISOC) ?
 762   5                                                      USBUART_1_MODE_ISO_IN : USBUART_1_MODE_ACK_IN;
 763   5                      }
 764   4                      else
 765   4                      {
 766   5                          /* OUT Endpoint */
 767   5                          USBUART_1_EP[cur_ep].apiEpState = USBUART_1_NO_EVENT_PENDING;
 768   5                          USBUART_1_EP[cur_ep].epMode = (ep_type == USBUART_1_EP_TYPE_ISOC) ?
 769   5                                                      USBUART_1_MODE_ISO_OUT : USBUART_1_MODE_ACK_OUT;
 770   5                      }
 771   4                       /* Change the SIE mode for the selected EP to NAK ALL */
 772   4                       CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_NAK_IN_OUT);
 773   4                      USBUART_1_EP[cur_ep].bufferSize = pEP->bufferSize;
 774   4                      USBUART_1_EP[cur_ep].addr = pEP->addr;
 775   4                      USBUART_1_EP[cur_ep].attrib = pEP->attributes;
 776   4      
 777   4                      /* Clear the data toggle */
 778   4                      USBUART_1_EP[cur_ep].epToggle = 0u;
 779   4      
 780   4                      /* Dynamic reconfiguration for mode 3 transfer */
 781   4                  #if(USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO)
                              /* In_data_rdy for selected EP should be set to 0 */
                              * (reg8 *)(USBUART_1_ARB_EP1_CFG_IND + ri) &= (uint8)~USBUART_1_ARB_EPX_CFG_IN_DATA_RDY;
              
                              /* write the EP number for which reconfiguration is required */
                              USBUART_1_DYN_RECONFIG_REG = (cur_ep - USBUART_1_EP1) <<
                                                                  USBUART_1_DYN_RECONFIG_EP_SHIFT;
                              /* Set the dyn_config_en bit in dynamic reconfiguration register */
                              USBUART_1_DYN_RECONFIG_REG |= USBUART_1_DYN_RECONFIG_ENABLE;
                              /* wait for the dyn_config_rdy bit to set by the block,
                              *  this bit will be set to 1 when block is ready for reconfiguration.
                              */
                              while((USBUART_1_DYN_RECONFIG_REG & USBUART_1_DYN_RECONFIG_RDY_STS) == 0u)
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 14  

                              {
                                  ;
                              }
                              /* Once dyn_config_rdy bit is set, FW can change the EP configuration. */
                              /* Change EP Type with new direction */
                              if((pEP->addr & USBUART_1_DIR_IN) == 0u)
                              {
                                  USBUART_1_EP_TYPE_REG |= (uint8)(0x01u << (cur_ep - USBUART_1_EP1));
                              }
                              else
                              {
                                  USBUART_1_EP_TYPE_REG &= (uint8)~(uint8)(0x01u << (cur_ep - USBUART_1_EP1));
                              }
                              /* dynamic reconfiguration enable bit cleared, pointers and control/status
                              *  signals for the selected EP is cleared/re-initialized on negative edge
                              *  of dynamic reconfiguration enable bit).
                              */
                              USBUART_1_DYN_RECONFIG_REG &= (uint8)~USBUART_1_DYN_RECONFIG_ENABLE;
                              /* The main loop has to re-enable DMA and OUT endpoint*/
                          #else
 814   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CNT0_IND + ri),
 815   4                                                                      USBUART_1_EP[cur_ep].bufferSize >> 8u);
 816   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CNT1_IND + ri),
 817   4                                                                      USBUART_1_EP[cur_ep].bufferSize & 0xFFu);
 818   4                      CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_RA_IND + ri),
 819   4                                                                      USBUART_1_EP[cur_ep].buffOffset & 0xFFu);
 820   4                      CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_RA_MSB_IND + ri),
 821   4                                                                      USBUART_1_EP[cur_ep].buffOffset >> 8u);
 822   4                      CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_WA_IND + ri),
 823   4                                                                      USBUART_1_EP[cur_ep].buffOffset & 0xFFu);
 824   4                      CY_SET_REG8((reg8 *)(USBUART_1_ARB_RW1_WA_MSB_IND + ri),
 825   4                                                                      USBUART_1_EP[cur_ep].buffOffset >> 8u);
 826   4                  #endif /* End USBUART_1_EP_MM == USBUART_1__EP_DMAAUTO */
 827   4                  }
 828   3                  /* Get next EP element */
 829   3                  pEP = &pEP[1u];
 830   3              }
 831   2          }   /* USBUART_1_configuration > 0 */
 832   1      }
 833          
 834          
 835          /*******************************************************************************
 836          * Function Name: USBUART_1_GetConfigTablePtr
 837          ********************************************************************************
 838          *
 839          * Summary:
 840          *  This routine returns a pointer a configuration table entry
 841          *
 842          * Parameters:
 843          *  c:  Configuration Index
 844          *
 845          * Return:
 846          *  Device Descriptor pointer.
 847          *
 848          *******************************************************************************/
 849          const T_USBUART_1_LUT CYCODE *USBUART_1_GetConfigTablePtr(uint8 c)
 850                                                                  
 851          {
 852   1          /* Device Table */
 853   1          const T_USBUART_1_LUT CYCODE *pTmp;
 854   1      
 855   1          pTmp = (const T_USBUART_1_LUT CYCODE *) USBUART_1_TABLE[USBUART_1_device].p_list;
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 15  

 856   1      
 857   1          /* The first entry points to the Device Descriptor,
 858   1          *  the rest configuration entries.
 859   1              */
 860   1          return( (const T_USBUART_1_LUT CYCODE *) pTmp[c + 1u].p_list );
 861   1      }
 862          
 863          
 864          /*******************************************************************************
 865          * Function Name: USBUART_1_GetDeviceTablePtr
 866          ********************************************************************************
 867          *
 868          * Summary:
 869          *  This routine returns a pointer to the Device table
 870          *
 871          * Parameters:
 872          *  None.
 873          *
 874          * Return:
 875          *  Device Table pointer
 876          *
 877          *******************************************************************************/
 878          const T_USBUART_1_LUT CYCODE *USBUART_1_GetDeviceTablePtr(void)
 879                                                                      
 880          {
 881   1          /* Device Table */
 882   1          return( (const T_USBUART_1_LUT CYCODE *) USBUART_1_TABLE[USBUART_1_device].p_list );
 883   1      }
 884          
 885          
 886          /*******************************************************************************
 887          * Function Name: USB_GetInterfaceClassTablePtr
 888          ********************************************************************************
 889          *
 890          * Summary:
 891          *  This routine returns Interface Class table pointer, which contains
 892          *  the relation between interface number and interface class.
 893          *
 894          * Parameters:
 895          *  None.
 896          *
 897          * Return:
 898          *  Interface Class table pointer.
 899          *
 900          *******************************************************************************/
 901          const uint8 CYCODE *USBUART_1_GetInterfaceClassTablePtr(void)
 902                                                                  
 903          {
 904   1          const T_USBUART_1_LUT CYCODE *pTmp;
 905   1          uint8 currentInterfacesNum;
 906   1      
 907   1          pTmp = USBUART_1_GetConfigTablePtr(USBUART_1_configuration - 1u);
 908   1          currentInterfacesNum  = ((const uint8 *) pTmp->p_list)[USBUART_1_CONFIG_DESCR_NUM_INTERFACES];
 909   1          /* Third entry in the LUT starts the Interface Table pointers */
 910   1          /* The INTERFACE_CLASS table is located after all interfaces */
 911   1          pTmp = &pTmp[currentInterfacesNum + 2u];
 912   1          return( (const uint8 CYCODE *) pTmp->p_list );
 913   1      }
 914          
 915          
 916          /*******************************************************************************
 917          * Function Name: USBUART_1_TerminateEP
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 16  

 918          ********************************************************************************
 919          *
 920          * Summary:
 921          *  This function terminates the specified USBFS endpoint.
 922          *  This function should be used before endpoint reconfiguration.
 923          *
 924          * Parameters:
 925          *  Endpoint number.
 926          *
 927          * Return:
 928          *  None.
 929          *
 930          * Reentrant:
 931          *  No.
 932          *
 933          *******************************************************************************/
 934          void USBUART_1_TerminateEP(uint8 ep) 
 935          {
 936   1          uint8 ri;
 937   1      
 938   1          ep &= USBUART_1_DIR_UNUSED;
 939   1          ri = ((ep - USBUART_1_EP1) << USBUART_1_EPX_CNTX_ADDR_SHIFT);
 940   1      
 941   1          if ((ep > USBUART_1_EP0) && (ep < USBUART_1_MAX_EP))
 942   1          {
 943   2              /* Set the endpoint Halt */
 944   2              USBUART_1_EP[ep].hwEpState |= (USBUART_1_ENDPOINT_STATUS_HALT);
 945   2      
 946   2              /* Clear the data toggle */
 947   2              USBUART_1_EP[ep].epToggle = 0u;
 948   2              USBUART_1_EP[ep].apiEpState = USBUART_1_NO_EVENT_ALLOWED;
 949   2      
 950   2              if ((USBUART_1_EP[ep].addr & USBUART_1_DIR_IN) != 0u)
 951   2              {
 952   3                  /* IN Endpoint */
 953   3                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_NAK_IN);
 954   3              }
 955   2              else
 956   2              {
 957   3                  /* OUT Endpoint */
 958   3                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_NAK_OUT);
 959   3              }
 960   2          }
 961   1      }
 962          
 963          
 964          /*******************************************************************************
 965          * Function Name: USBUART_1_SetEndpointHalt
 966          ********************************************************************************
 967          *
 968          * Summary:
 969          *  This routine handles set endpoint halt.
 970          *
 971          * Parameters:
 972          *  None.
 973          *
 974          * Return:
 975          *  requestHandled.
 976          *
 977          * Reentrant:
 978          *  No.
 979          *
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 17  

 980          *******************************************************************************/
 981          uint8 USBUART_1_SetEndpointHalt(void) 
 982          {
 983   1          uint8 ep;
 984   1          uint8 ri;
 985   1          uint8 requestHandled = USBUART_1_FALSE;
 986   1      
 987   1          /* Set endpoint halt */
 988   1          ep = CY_GET_REG8(USBUART_1_wIndexLo) & USBUART_1_DIR_UNUSED;
 989   1          ri = ((ep - USBUART_1_EP1) << USBUART_1_EPX_CNTX_ADDR_SHIFT);
 990   1      
 991   1          if ((ep > USBUART_1_EP0) && (ep < USBUART_1_MAX_EP))
 992   1          {
 993   2              /* Set the endpoint Halt */
 994   2              USBUART_1_EP[ep].hwEpState |= (USBUART_1_ENDPOINT_STATUS_HALT);
 995   2      
 996   2              /* Clear the data toggle */
 997   2              USBUART_1_EP[ep].epToggle = 0u;
 998   2              USBUART_1_EP[ep].apiEpState |= USBUART_1_NO_EVENT_ALLOWED;
 999   2      
1000   2              if ((USBUART_1_EP[ep].addr & USBUART_1_DIR_IN) != 0u)
1001   2              {
1002   3                  /* IN Endpoint */
1003   3                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_STALL_DATA_EP |
1004   3                                                                     USBUART_1_MODE_ACK_IN);
1005   3              }
1006   2              else
1007   2              {
1008   3                  /* OUT Endpoint */
1009   3                  CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_STALL_DATA_EP |
1010   3                                                                     USBUART_1_MODE_ACK_OUT);
1011   3              }
1012   2              requestHandled = USBUART_1_InitNoDataControlTransfer();
1013   2          }
1014   1      
1015   1          return(requestHandled);
1016   1      }
1017          
1018          
1019          /*******************************************************************************
1020          * Function Name: USBUART_1_ClearEndpointHalt
1021          ********************************************************************************
1022          *
1023          * Summary:
1024          *  This routine handles clear endpoint halt.
1025          *
1026          * Parameters:
1027          *  None.
1028          *
1029          * Return:
1030          *  requestHandled.
1031          *
1032          * Reentrant:
1033          *  No.
1034          *
1035          *******************************************************************************/
1036          uint8 USBUART_1_ClearEndpointHalt(void) 
1037          {
1038   1          uint8 ep;
1039   1          uint8 ri;
1040   1          uint8 requestHandled = USBUART_1_FALSE;
1041   1      
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 18  

1042   1          /* Clear endpoint halt */
1043   1          ep = CY_GET_REG8(USBUART_1_wIndexLo) & USBUART_1_DIR_UNUSED;
1044   1          ri = ((ep - USBUART_1_EP1) << USBUART_1_EPX_CNTX_ADDR_SHIFT);
1045   1      
1046   1          if ((ep > USBUART_1_EP0) && (ep < USBUART_1_MAX_EP))
1047   1          {
1048   2              /* Clear the endpoint Halt */
1049   2              USBUART_1_EP[ep].hwEpState &= (uint8)~(USBUART_1_ENDPOINT_STATUS_HALT);
1050   2      
1051   2              /* Clear the data toggle */
1052   2              USBUART_1_EP[ep].epToggle = 0u;
1053   2              /* Clear toggle bit for already armed packet */
1054   2              CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CNT0_IND + ri), CY_GET_REG8(
1055   2                          (reg8 *)(USBUART_1_SIE_EP1_CNT0_IND + ri)) & (uint8)~USBUART_1_EPX_CNT_DATA_TOGGLE);
1056   2              /* Return API State as it was defined before */
1057   2              USBUART_1_EP[ep].apiEpState &= (uint8)~USBUART_1_NO_EVENT_ALLOWED;
1058   2      
1059   2              if ((USBUART_1_EP[ep].addr & USBUART_1_DIR_IN) != 0u)
1060   2              {
1061   3                  /* IN Endpoint */
1062   3                  if(USBUART_1_EP[ep].apiEpState == USBUART_1_IN_BUFFER_EMPTY)
1063   3                  {       /* Wait for next packet from application */
1064   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_NAK_IN);
1065   4                  }
1066   3                  else    /* Continue armed transfer */
1067   3                  {
1068   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_ACK_IN);
1069   4                  }
1070   3              }
1071   2              else
1072   2              {
1073   3                  /* OUT Endpoint */
1074   3                  if(USBUART_1_EP[ep].apiEpState == USBUART_1_OUT_BUFFER_FULL)
1075   3                  {       /* Allow application to read full buffer */
1076   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_NAK_OUT);
1077   4                  }
1078   3                  else    /* Mark endpoint as empty, so it will be reloaded */
1079   3                  {
1080   4                      CY_SET_REG8((reg8 *)(USBUART_1_SIE_EP1_CR0_IND + ri), USBUART_1_MODE_ACK_OUT);
1081   4                  }
1082   3              }
1083   2              requestHandled = USBUART_1_InitNoDataControlTransfer();
1084   2          }
1085   1      
1086   1          return(requestHandled);
1087   1      }
1088          
1089          
1090          /*******************************************************************************
1091          * Function Name: USBUART_1_ValidateAlternateSetting
1092          ********************************************************************************
1093          *
1094          * Summary:
1095          *  Validates (and records) a SET INTERFACE request.
1096          *
1097          * Parameters:
1098          *  None.
1099          *
1100          * Return:
1101          *  requestHandled.
1102          *
1103          * Reentrant:
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 19  

1104          *  No.
1105          *
1106          *******************************************************************************/
1107          uint8 USBUART_1_ValidateAlternateSetting(void) 
1108          {
1109   1          uint8 requestHandled = USBUART_1_TRUE;
1110   1          uint8 interfaceNum;
1111   1          const T_USBUART_1_LUT CYCODE *pTmp;
1112   1          uint8 currentInterfacesNum;
1113   1      
1114   1          interfaceNum = CY_GET_REG8(USBUART_1_wIndexLo);
1115   1          /* Validate interface setting, stall if invalid. */
1116   1          pTmp = USBUART_1_GetConfigTablePtr(USBUART_1_configuration - 1u);
1117   1          currentInterfacesNum  = ((const uint8 *) pTmp->p_list)[USBUART_1_CONFIG_DESCR_NUM_INTERFACES];
1118   1      
1119   1          if((interfaceNum >= currentInterfacesNum) || (interfaceNum >= USBUART_1_MAX_INTERFACES_NUMBER))
1120   1          {   /* Wrong interface number */
1121   2              requestHandled = USBUART_1_FALSE;
1122   2          }
1123   1          else
1124   1          {
1125   2              /* Save current Alt setting to find out the difference in Config() function */
1126   2              USBUART_1_interfaceSetting_last[interfaceNum] = USBUART_1_interfaceSetting[interfaceNum];
1127   2              USBUART_1_interfaceSetting[interfaceNum] = CY_GET_REG8(USBUART_1_wValueLo);
1128   2          }
1129   1      
1130   1          return (requestHandled);
1131   1      }
1132          
1133          
1134          /* [] END OF FILE */
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 20  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION USBUART_1_HandleStandardRqst (BEGIN)
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
                                           ; SOURCE LINE # 91
0000 900000      R     MOV     DPTR,#requestHandled
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 94
0005 7B00              MOV     R3,#00H
0007 7A00              MOV     R2,#00H
0009 7900              MOV     R1,#00H
000B 900000      R     MOV     DPTR,#pStr
000E 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 102
0011 900000      E     MOV     DPTR,#USBUART_1_currentTD
0014 E4                CLR     A
0015 F0                MOVX    @DPTR,A
0016 A3                INC     DPTR
0017 E4                CLR     A
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 104
0019 906000            MOV     DPTR,#06000H
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E EF                MOV     A,R7
001F 5480              ANL     A,#080H
0021 FF                MOV     R7,A
0022 7E00              MOV     R6,#00H
0024 EF                MOV     A,R7
0025 6480              XRL     A,#080H
0027 4E                ORL     A,R6
0028 6003              JZ      $ + 5H
002A 020000      R     LJMP    ?C0001
                                           ; SOURCE LINE # 105
                                           ; SOURCE LINE # 107
002D 906001            MOV     DPTR,#06001H
0030 E0                MOVX    A,@DPTR
0031 FF                MOV     R7,A
0032 EF                MOV     A,R7
0033 120000      E     LCALL   ?C?CCASE
0036 0000        R     DW      ?C0015
0038 00                DB      00H
0039 0000        R     DW      ?C0003
003B 06                DB      06H
003C 0000        R     DW      ?C0020
003E 08                DB      08H
003F 0000        R     DW      ?C0021
0041 0A                DB      0AH
0042 0000              DW      00H
0044 0000        R     DW      ?C0023
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 109
0046         ?C0003:
                                           ; SOURCE LINE # 110
0046 906003            MOV     DPTR,#06003H
0049 E0                MOVX    A,@DPTR
004A FF                MOV     R7,A
004B EF                MOV     A,R7
004C B40135            CJNE    A,#01H,?C0004
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 21  

                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 112
004F 120000      R     LCALL   USBUART_1_GetDeviceTablePtr
0052 900000      R     MOV     DPTR,#pTmp
0055 EE                MOV     A,R6
0056 F0                MOVX    @DPTR,A
0057 A3                INC     DPTR
0058 EF                MOV     A,R7
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 113
005A 900000      R     MOV     DPTR,#pTmp
005D E0                MOVX    A,@DPTR
005E FE                MOV     R6,A
005F A3                INC     DPTR
0060 E0                MOVX    A,@DPTR
0061 FF                MOV     R7,A
0062 8F82              MOV     DPL,R7
0064 8E83              MOV     DPH,R6
0066 A3                INC     DPTR
0067 120000      E     LCALL   ?C?PLDCODE
006A 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
006D 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 114
0070 900000      E     MOV     DPTR,#USBUART_1_currentTD
0073 E4                CLR     A
0074 F0                MOVX    @DPTR,A
0075 A3                INC     DPTR
0076 7412              MOV     A,#012H
0078 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 115
0079 120000      E     LCALL   USBUART_1_InitControlRead
007C 900000      R     MOV     DPTR,#requestHandled
007F EF                MOV     A,R7
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 116
0081 020000      R     LJMP    ?C0023
0084         ?C0004:
                                           ; SOURCE LINE # 117
0084 906003            MOV     DPTR,#06003H
0087 E0                MOVX    A,@DPTR
0088 FF                MOV     R7,A
0089 EF                MOV     A,R7
008A 6402              XRL     A,#02H
008C 706B              JNZ     ?C0006
                                           ; SOURCE LINE # 118
                                           ; SOURCE LINE # 119
008E 906002            MOV     DPTR,#06002H
0091 E0                MOVX    A,@DPTR
0092 FF                MOV     R7,A
0093 120000      R     LCALL   _USBUART_1_GetConfigTablePtr
0096 900000      R     MOV     DPTR,#pTmp
0099 EE                MOV     A,R6
009A F0                MOVX    @DPTR,A
009B A3                INC     DPTR
009C EF                MOV     A,R7
009D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 120
009E 900000      R     MOV     DPTR,#pTmp
00A1 E0                MOVX    A,@DPTR
00A2 FE                MOV     R6,A
00A3 A3                INC     DPTR
00A4 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 22  

00A5 FF                MOV     R7,A
00A6 8F82              MOV     DPL,R7
00A8 8E83              MOV     DPH,R6
00AA A3                INC     DPTR
00AB 120000      E     LCALL   ?C?PLDCODE
00AE 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
00B1 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 121
00B4 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
00B7 120000      E     LCALL   ?C?PLDXDATA
00BA E9                MOV     A,R1
00BB 2403              ADD     A,#03H
00BD F9                MOV     R1,A
00BE EA                MOV     A,R2
00BF 3400              ADDC    A,#00H
00C1 FA                MOV     R2,A
00C2 120000      E     LCALL   ?C?CLDPTR
00C5 FF                MOV     R7,A
00C6 7E00              MOV     R6,#00H
00C8 EF                MOV     A,R7
00C9 7F00              MOV     R7,#00H
00CB FE                MOV     R6,A
00CC 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
00CF 120000      E     LCALL   ?C?PLDXDATA
00D2 E9                MOV     A,R1
00D3 2402              ADD     A,#02H
00D5 F9                MOV     R1,A
00D6 EA                MOV     A,R2
00D7 3400              ADDC    A,#00H
00D9 FA                MOV     R2,A
00DA 120000      E     LCALL   ?C?CLDPTR
00DD FD                MOV     R5,A
00DE 7C00              MOV     R4,#00H
00E0 EE                MOV     A,R6
00E1 4C                ORL     A,R4
00E2 FE                MOV     R6,A
00E3 EF                MOV     A,R7
00E4 4D                ORL     A,R5
00E5 FF                MOV     R7,A
00E6 900000      E     MOV     DPTR,#USBUART_1_currentTD
00E9 EE                MOV     A,R6
00EA F0                MOVX    @DPTR,A
00EB A3                INC     DPTR
00EC EF                MOV     A,R7
00ED F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 124
00EE 120000      E     LCALL   USBUART_1_InitControlRead
00F1 900000      R     MOV     DPTR,#requestHandled
00F4 EF                MOV     A,R7
00F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 125
00F6 020000      R     LJMP    ?C0023
00F9         ?C0006:
                                           ; SOURCE LINE # 127
00F9 906003            MOV     DPTR,#06003H
00FC E0                MOVX    A,@DPTR
00FD FF                MOV     R7,A
00FE EF                MOV     A,R7
00FF 6403              XRL     A,#03H
0101 6003              JZ      $ + 5H
0103 020000      R     LJMP    ?C0008
                                           ; SOURCE LINE # 128
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 23  

                                           ; SOURCE LINE # 131
0106 900000      R     MOV     DPTR,#nStr
0109 E4                CLR     A
010A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 132
010B 7BFF              MOV     R3,#0FFH
010D 7A00        E     MOV     R2,#HIGH USBUART_1_STRING_DESCRIPTORS
010F 7900        E     MOV     R1,#LOW USBUART_1_STRING_DESCRIPTORS
0111 900000      R     MOV     DPTR,#pStr
0114 120000      E     LCALL   ?C?PSTXDATA
0117         ?C0009:
                                           ; SOURCE LINE # 133
0117 900000      R     MOV     DPTR,#nStr
011A E0                MOVX    A,@DPTR
011B FF                MOV     R7,A
011C 906002            MOV     DPTR,#06002H
011F E0                MOVX    A,@DPTR
0120 FE                MOV     R6,A
0121 EE                MOV     A,R6
0122 D3                SETB    C
0123 9F                SUBB    A,R7
0124 403D              JC      ?C0010
0126 900000      R     MOV     DPTR,#pStr
0129 120000      E     LCALL   ?C?PLDXDATA
012C 120000      E     LCALL   ?C?CLDPTR
012F FF                MOV     R7,A
0130 EF                MOV     A,R7
0131 6030              JZ      ?C0010
                                           ; SOURCE LINE # 134
                                           ; SOURCE LINE # 136
0133 900000      R     MOV     DPTR,#pStr
0136 120000      E     LCALL   ?C?PLDXDATA
0139 120000      E     LCALL   ?C?CLDPTR
013C FF                MOV     R7,A
013D 900000      R     MOV     DPTR,#descrLength
0140 EF                MOV     A,R7
0141 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 138
0142 900000      R     MOV     DPTR,#pStr
0145 120000      E     LCALL   ?C?PLDXDATA
0148 900000      R     MOV     DPTR,#descrLength
014B E0                MOVX    A,@DPTR
014C FF                MOV     R7,A
014D 7E00              MOV     R6,#00H
014F E9                MOV     A,R1
0150 2F                ADD     A,R7
0151 F9                MOV     R1,A
0152 EA                MOV     A,R2
0153 3E                ADDC    A,R6
0154 FA                MOV     R2,A
0155 900000      R     MOV     DPTR,#pStr
0158 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 139
015B 900000      R     MOV     DPTR,#nStr
015E E0                MOVX    A,@DPTR
015F 04                INC     A
0160 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 140
0161 80B4              SJMP    ?C0009
0163         ?C0010:
                                           ; SOURCE LINE # 144
0163 906002            MOV     DPTR,#06002H
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 24  

0166 E0                MOVX    A,@DPTR
0167 FF                MOV     R7,A
0168 EF                MOV     A,R7
0169 B4EE0C            CJNE    A,#0EEH,?C0011
                                           ; SOURCE LINE # 145
                                           ; SOURCE LINE # 146
016C 7BFF              MOV     R3,#0FFH
016E 7A00        E     MOV     R2,#HIGH USBUART_1_MSOS_DESCRIPTOR
0170 7900        E     MOV     R1,#LOW USBUART_1_MSOS_DESCRIPTOR
0172 900000      R     MOV     DPTR,#pStr
0175 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 147
0178         ?C0011:
                                           ; SOURCE LINE # 152
0178 906002            MOV     DPTR,#06002H
017B E0                MOVX    A,@DPTR
017C FF                MOV     R7,A
017D EF                MOV     A,R7
017E 6030              JZ      ?C0012
0180 900000      E     MOV     DPTR,#USBUART_1_DEVICE0_DESCR+010H
0183 E4                CLR     A
0184 93                MOVC    A,@A+DPTR
0185 FF                MOV     R7,A
0186 906002            MOV     DPTR,#06002H
0189 E0                MOVX    A,@DPTR
018A FE                MOV     R6,A
018B EE                MOV     A,R6
018C B50721            CJNE    A,AR7,?C0012
                                           ; SOURCE LINE # 154
                                           ; SOURCE LINE # 155
018F 7BFF              MOV     R3,#0FFH
0191 7A00        E     MOV     R2,#HIGH USBUART_1_SN_STRING_DESCRIPTOR
0193 7900        E     MOV     R1,#LOW USBUART_1_SN_STRING_DESCRIPTOR
0195 900000      R     MOV     DPTR,#pStr
0198 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 164
019B 7B01              MOV     R3,#01H
019D 7A00        E     MOV     R2,#HIGH USBUART_1_idSerialNumberStringDescriptor
019F 7900        E     MOV     R1,#LOW USBUART_1_idSerialNumberStringDescriptor
01A1 120000      R     LCALL   _USBUART_1_ReadDieID
                                           ; SOURCE LINE # 165
01A4 7B01              MOV     R3,#01H
01A6 7A00        E     MOV     R2,#HIGH USBUART_1_idSerialNumberStringDescriptor
01A8 7900        E     MOV     R1,#LOW USBUART_1_idSerialNumberStringDescriptor
01AA 900000      R     MOV     DPTR,#pStr
01AD 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 167
01B0         ?C0012:
                                           ; SOURCE LINE # 169
01B0 900000      R     MOV     DPTR,#pStr
01B3 120000      E     LCALL   ?C?PLDXDATA
01B6 120000      E     LCALL   ?C?CLDPTR
01B9 FF                MOV     R7,A
01BA EF                MOV     A,R7
01BB 7003              JNZ     $ + 5H
01BD 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 170
                                           ; SOURCE LINE # 171
01C0 900000      R     MOV     DPTR,#pStr
01C3 120000      E     LCALL   ?C?PLDXDATA
01C6 120000      E     LCALL   ?C?CLDPTR
01C9 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 25  

01CA 7E00              MOV     R6,#00H
01CC 900000      E     MOV     DPTR,#USBUART_1_currentTD
01CF EE                MOV     A,R6
01D0 F0                MOVX    @DPTR,A
01D1 A3                INC     DPTR
01D2 EF                MOV     A,R7
01D3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 172
01D4 900000      R     MOV     DPTR,#pStr
01D7 120000      E     LCALL   ?C?PLDXDATA
01DA 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
01DD 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 173
01E0 120000      E     LCALL   USBUART_1_InitControlRead
01E3 900000      R     MOV     DPTR,#requestHandled
01E6 EF                MOV     A,R7
01E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 174
                                           ; SOURCE LINE # 175
01E8 020000      R     LJMP    ?C0023
01EB         ?C0008:
                                           ; SOURCE LINE # 178
                                           ; SOURCE LINE # 179
01EB 120000      E     LCALL   USBUART_1_DispatchClassRqst
01EE 900000      R     MOV     DPTR,#requestHandled
01F1 EF                MOV     A,R7
01F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 180
                                           ; SOURCE LINE # 181
01F3 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 182
01F6         ?C0015:
                                           ; SOURCE LINE # 183
01F6 906000            MOV     DPTR,#06000H
01F9 E0                MOVX    A,@DPTR
01FA FF                MOV     R7,A
01FB EF                MOV     A,R7
01FC 5403              ANL     A,#03H
01FE FF                MOV     R7,A
01FF EF                MOV     A,R7
0200 120000      E     LCALL   ?C?CCASE
0203 0000        R     DW      ?C0018
0205 00                DB      00H
0206 0000        R     DW      ?C0017
0208 02                DB      02H
0209 0000              DW      00H
020B 0000        R     DW      ?C0023
                                           ; SOURCE LINE # 184
                                           ; SOURCE LINE # 185
020D         ?C0017:
                                           ; SOURCE LINE # 186
020D 900000      E     MOV     DPTR,#USBUART_1_currentTD
0210 E4                CLR     A
0211 F0                MOVX    @DPTR,A
0212 A3                INC     DPTR
0213 7402              MOV     A,#02H
0215 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 187
0216 906004            MOV     DPTR,#06004H
0219 E0                MOVX    A,@DPTR
021A FF                MOV     R7,A
021B EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 26  

021C 547F              ANL     A,#07FH
021E FF                MOV     R7,A
021F EF                MOV     A,R7
0220 75F00B            MOV     B,#0BH
0223 A4                MUL     AB
0224 2400        E     ADD     A,#LOW USBUART_1_EP+02H
0226 F582              MOV     DPL,A
0228 E4                CLR     A
0229 3400        E     ADDC    A,#HIGH USBUART_1_EP+02H
022B F583              MOV     DPH,A
022D E0                MOVX    A,@DPTR
022E FF                MOV     R7,A
022F 900000      R     MOV     DPTR,#USBUART_1_tBuffer
0232 EF                MOV     A,R7
0233 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 189
0234 900000      R     MOV     DPTR,#USBUART_1_tBuffer+01H
0237 E4                CLR     A
0238 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 190
0239 7B01              MOV     R3,#01H
023B 7A00        R     MOV     R2,#HIGH USBUART_1_tBuffer
023D 7900        R     MOV     R1,#LOW USBUART_1_tBuffer
023F 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
0242 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 191
0245 120000      E     LCALL   USBUART_1_InitControlRead
0248 900000      R     MOV     DPTR,#requestHandled
024B EF                MOV     A,R7
024C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 192
024D 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 193
0250         ?C0018:
                                           ; SOURCE LINE # 194
0250 900000      E     MOV     DPTR,#USBUART_1_currentTD
0253 E4                CLR     A
0254 F0                MOVX    @DPTR,A
0255 A3                INC     DPTR
0256 7402              MOV     A,#02H
0258 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 195
0259 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
025C E0                MOVX    A,@DPTR
025D FF                MOV     R7,A
025E 900000      R     MOV     DPTR,#USBUART_1_tBuffer
0261 EF                MOV     A,R7
0262 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 196
0263 900000      R     MOV     DPTR,#USBUART_1_tBuffer+01H
0266 E4                CLR     A
0267 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 197
0268 7B01              MOV     R3,#01H
026A 7A00        R     MOV     R2,#HIGH USBUART_1_tBuffer
026C 7900        R     MOV     R1,#LOW USBUART_1_tBuffer
026E 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
0271 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 198
0274 120000      E     LCALL   USBUART_1_InitControlRead
0277 900000      R     MOV     DPTR,#requestHandled
027A EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 27  

027B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 199
027C 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 200
                                           ; SOURCE LINE # 201
                                           ; SOURCE LINE # 202
                                           ; SOURCE LINE # 203
027F 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 204
0282         ?C0020:
                                           ; SOURCE LINE # 205
0282 900000      E     MOV     DPTR,#USBUART_1_currentTD
0285 E4                CLR     A
0286 F0                MOVX    @DPTR,A
0287 A3                INC     DPTR
0288 7401              MOV     A,#01H
028A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 206
028B 7B01              MOV     R3,#01H
028D 7A00        E     MOV     R2,#HIGH USBUART_1_configuration
028F 7900        E     MOV     R1,#LOW USBUART_1_configuration
0291 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
0294 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 207
0297 120000      E     LCALL   USBUART_1_InitControlRead
029A 900000      R     MOV     DPTR,#requestHandled
029D EF                MOV     A,R7
029E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 208
029F 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 209
02A2         ?C0021:
                                           ; SOURCE LINE # 210
02A2 900000      E     MOV     DPTR,#USBUART_1_currentTD
02A5 E4                CLR     A
02A6 F0                MOVX    @DPTR,A
02A7 A3                INC     DPTR
02A8 7401              MOV     A,#01H
02AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 211
02AB 906004            MOV     DPTR,#06004H
02AE E0                MOVX    A,@DPTR
02AF FF                MOV     R7,A
02B0 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
02B2 2F                ADD     A,R7
02B3 F9                MOV     R1,A
02B4 E4                CLR     A
02B5 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
02B7 FA                MOV     R2,A
02B8 7B01              MOV     R3,#01H
02BA 900000      E     MOV     DPTR,#USBUART_1_currentTD+02H
02BD 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 213
02C0 120000      E     LCALL   USBUART_1_InitControlRead
02C3 900000      R     MOV     DPTR,#requestHandled
02C6 EF                MOV     A,R7
02C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 214
02C8 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 216
                                           ; SOURCE LINE # 217
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 28  

                                           ; SOURCE LINE # 218
02CB 020000      R     LJMP    ?C0023
02CE         ?C0001:
                                           ; SOURCE LINE # 219
                                           ; SOURCE LINE # 221
02CE 906001            MOV     DPTR,#06001H
02D1 E0                MOVX    A,@DPTR
02D2 FF                MOV     R7,A
02D3 EF                MOV     A,R7
02D4 120000      E     LCALL   ?C?CCASE
02D7 0000        R     DW      ?C0029
02D9 01                DB      01H
02DA 0000        R     DW      ?C0038
02DC 03                DB      03H
02DD 0000        R     DW      ?C0025
02DF 05                DB      05H
02E0 0000        R     DW      ?C0026
02E2 09                DB      09H
02E3 0000        R     DW      ?C0027
02E5 0B                DB      0BH
02E6 0000              DW      00H
02E8 0000        R     DW      ?C0023
                                           ; SOURCE LINE # 222
                                           ; SOURCE LINE # 223
02EA         ?C0025:
                                           ; SOURCE LINE # 224
02EA 906002            MOV     DPTR,#06002H
02ED E0                MOVX    A,@DPTR
02EE FF                MOV     R7,A
02EF 900000      E     MOV     DPTR,#USBUART_1_deviceAddress
02F2 EF                MOV     A,R7
02F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 225
02F4 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
02F7 900000      R     MOV     DPTR,#requestHandled
02FA EF                MOV     A,R7
02FB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 226
02FC 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 227
02FF         ?C0026:
                                           ; SOURCE LINE # 228
02FF 906002            MOV     DPTR,#06002H
0302 E0                MOVX    A,@DPTR
0303 FF                MOV     R7,A
0304 900000      E     MOV     DPTR,#USBUART_1_configuration
0307 EF                MOV     A,R7
0308 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 229
0309 900000      E     MOV     DPTR,#USBUART_1_configurationChanged
030C 7401              MOV     A,#01H
030E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 230
030F 7F01              MOV     R7,#01H
0311 120000      R     LCALL   _USBUART_1_Config
                                           ; SOURCE LINE # 231
0314 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
0317 900000      R     MOV     DPTR,#requestHandled
031A EF                MOV     A,R7
031B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 232
031C 020000      R     LJMP    ?C0023
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 29  

                                           ; SOURCE LINE # 233
031F         ?C0027:
                                           ; SOURCE LINE # 234
031F 120000      R     LCALL   USBUART_1_ValidateAlternateSetting
0322 EF                MOV     A,R7
0323 7003              JNZ     $ + 5H
0325 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 235
                                           ; SOURCE LINE # 236
0328 906004            MOV     DPTR,#06004H
032B E0                MOVX    A,@DPTR
032C FF                MOV     R7,A
032D 900000      R     MOV     DPTR,#interfaceNumber
0330 EF                MOV     A,R7
0331 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 237
0332 900000      R     MOV     DPTR,#interfaceNumber
0335 E0                MOVX    A,@DPTR
0336 FF                MOV     R7,A
0337 900000      E     MOV     DPTR,#USBUART_1_interfaceNumber
033A EF                MOV     A,R7
033B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 238
033C 900000      E     MOV     DPTR,#USBUART_1_configurationChanged
033F 7401              MOV     A,#01H
0341 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 243
0342 120000      R     LCALL   USBUART_1_ConfigAltChanged
                                           ; SOURCE LINE # 246
0345 900000      R     MOV     DPTR,#interfaceNumber
0348 E0                MOVX    A,@DPTR
0349 FF                MOV     R7,A
034A 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
034C 2F                ADD     A,R7
034D F582              MOV     DPL,A
034F E4                CLR     A
0350 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
0352 F583              MOV     DPH,A
0354 E0                MOVX    A,@DPTR
0355 FF                MOV     R7,A
0356 900000      R     MOV     DPTR,#interfaceNumber
0359 E0                MOVX    A,@DPTR
035A FE                MOV     R6,A
035B 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting_last
035D 2E                ADD     A,R6
035E F582              MOV     DPL,A
0360 E4                CLR     A
0361 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting_last
0363 F583              MOV     DPH,A
0365 EF                MOV     A,R7
0366 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 248
0367 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
036A 900000      R     MOV     DPTR,#requestHandled
036D EF                MOV     A,R7
036E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 249
                                           ; SOURCE LINE # 250
036F 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 251
0372         ?C0029:
                                           ; SOURCE LINE # 252
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 30  

0372 906000            MOV     DPTR,#06000H
0375 E0                MOVX    A,@DPTR
0376 FF                MOV     R7,A
0377 EF                MOV     A,R7
0378 5403              ANL     A,#03H
037A FF                MOV     R7,A
037B EF                MOV     A,R7
037C 120000      E     LCALL   ?C?CCASE
037F 0000        R     DW      ?C0033
0381 00                DB      00H
0382 0000        R     DW      ?C0035
0384 01                DB      01H
0385 0000        R     DW      ?C0031
0387 02                DB      02H
0388 0000              DW      00H
038A 0000        R     DW      ?C0023
                                           ; SOURCE LINE # 253
                                           ; SOURCE LINE # 254
038C         ?C0031:
                                           ; SOURCE LINE # 255
038C 906002            MOV     DPTR,#06002H
038F E0                MOVX    A,@DPTR
0390 FF                MOV     R7,A
0391 EF                MOV     A,R7
0392 6003              JZ      $ + 5H
0394 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
0397 120000      R     LCALL   USBUART_1_ClearEndpointHalt
039A 900000      R     MOV     DPTR,#requestHandled
039D EF                MOV     A,R7
039E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 258
                                           ; SOURCE LINE # 259
039F 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 260
03A2         ?C0033:
                                           ; SOURCE LINE # 262
03A2 906002            MOV     DPTR,#06002H
03A5 E0                MOVX    A,@DPTR
03A6 FF                MOV     R7,A
03A7 EF                MOV     A,R7
03A8 6401              XRL     A,#01H
03AA 6003              JZ      $ + 5H
03AC 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 263
                                           ; SOURCE LINE # 264
03AF 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
03B2 E0                MOVX    A,@DPTR
03B3 FF                MOV     R7,A
03B4 EF                MOV     A,R7
03B5 54FD              ANL     A,#0FDH
03B7 FF                MOV     R7,A
03B8 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
03BB EF                MOV     A,R7
03BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 265
03BD 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
03C0 900000      R     MOV     DPTR,#requestHandled
03C3 EF                MOV     A,R7
03C4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 266
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 31  

                                           ; SOURCE LINE # 267
03C5 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 268
03C8         ?C0035:
                                           ; SOURCE LINE # 270
03C8 906004            MOV     DPTR,#06004H
03CB E0                MOVX    A,@DPTR
03CC FF                MOV     R7,A
03CD EF                MOV     A,R7
03CE C3                CLR     C
03CF 9402              SUBB    A,#02H
03D1 4003              JC      $ + 5H
03D3 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 273
03D6 906004            MOV     DPTR,#06004H
03D9 E0                MOVX    A,@DPTR
03DA FF                MOV     R7,A
03DB 7400        E     MOV     A,#LOW USBUART_1_interfaceStatus
03DD 2F                ADD     A,R7
03DE F582              MOV     DPL,A
03E0 E4                CLR     A
03E1 3400        E     ADDC    A,#HIGH USBUART_1_interfaceStatus
03E3 F583              MOV     DPH,A
03E5 C083              PUSH    DPH
03E7 C082              PUSH    DPL
03E9 E0                MOVX    A,@DPTR
03EA FF                MOV     R7,A
03EB 906002            MOV     DPTR,#06002H
03EE E0                MOVX    A,@DPTR
03EF FE                MOV     R6,A
03F0 EE                MOV     A,R6
03F1 F4                CPL     A
03F2 FE                MOV     R6,A
03F3 EF                MOV     A,R7
03F4 5E                ANL     A,R6
03F5 FF                MOV     R7,A
03F6 D082              POP     DPL
03F8 D083              POP     DPH
03FA EF                MOV     A,R7
03FB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 274
03FC 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
03FF 900000      R     MOV     DPTR,#requestHandled
0402 EF                MOV     A,R7
0403 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 275
                                           ; SOURCE LINE # 276
0404 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 277
                                           ; SOURCE LINE # 278
                                           ; SOURCE LINE # 279
                                           ; SOURCE LINE # 280
0407 020000      R     LJMP    ?C0023
                                           ; SOURCE LINE # 281
040A         ?C0038:
                                           ; SOURCE LINE # 282
040A 906000            MOV     DPTR,#06000H
040D E0                MOVX    A,@DPTR
040E FF                MOV     R7,A
040F EF                MOV     A,R7
0410 5403              ANL     A,#03H
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 32  

0412 FF                MOV     R7,A
0413 EF                MOV     A,R7
0414 120000      E     LCALL   ?C?CCASE
0417 0000        R     DW      ?C0042
0419 00                DB      00H
041A 0000        R     DW      ?C0044
041C 01                DB      01H
041D 0000        R     DW      ?C0040
041F 02                DB      02H
0420 0000              DW      00H
0422 0000        R     DW      ?C0023
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
0424         ?C0040:
                                           ; SOURCE LINE # 285
0424 906002            MOV     DPTR,#06002H
0427 E0                MOVX    A,@DPTR
0428 FF                MOV     R7,A
0429 EF                MOV     A,R7
042A 7065              JNZ     ?C0023
                                           ; SOURCE LINE # 286
                                           ; SOURCE LINE # 287
042C 120000      R     LCALL   USBUART_1_SetEndpointHalt
042F 900000      R     MOV     DPTR,#requestHandled
0432 EF                MOV     A,R7
0433 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 288
                                           ; SOURCE LINE # 289
0434 805B              SJMP    ?C0023
                                           ; SOURCE LINE # 290
0436         ?C0042:
                                           ; SOURCE LINE # 292
0436 906002            MOV     DPTR,#06002H
0439 E0                MOVX    A,@DPTR
043A FF                MOV     R7,A
043B EF                MOV     A,R7
043C 6401              XRL     A,#01H
043E 7051              JNZ     ?C0023
                                           ; SOURCE LINE # 293
                                           ; SOURCE LINE # 294
0440 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
0443 E0                MOVX    A,@DPTR
0444 FF                MOV     R7,A
0445 EF                MOV     A,R7
0446 4402              ORL     A,#02H
0448 FF                MOV     R7,A
0449 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
044C EF                MOV     A,R7
044D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 295
044E 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
0451 900000      R     MOV     DPTR,#requestHandled
0454 EF                MOV     A,R7
0455 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 296
                                           ; SOURCE LINE # 297
0456 8039              SJMP    ?C0023
                                           ; SOURCE LINE # 298
0458         ?C0044:
                                           ; SOURCE LINE # 300
0458 906004            MOV     DPTR,#06004H
045B E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 33  

045C FF                MOV     R7,A
045D EF                MOV     A,R7
045E C3                CLR     C
045F 9402              SUBB    A,#02H
0461 502E              JNC     ?C0023
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 303
0463 906004            MOV     DPTR,#06004H
0466 E0                MOVX    A,@DPTR
0467 FF                MOV     R7,A
0468 7400        E     MOV     A,#LOW USBUART_1_interfaceStatus
046A 2F                ADD     A,R7
046B F582              MOV     DPL,A
046D E4                CLR     A
046E 3400        E     ADDC    A,#HIGH USBUART_1_interfaceStatus
0470 F583              MOV     DPH,A
0472 C083              PUSH    DPH
0474 C082              PUSH    DPL
0476 E0                MOVX    A,@DPTR
0477 FF                MOV     R7,A
0478 906002            MOV     DPTR,#06002H
047B E0                MOVX    A,@DPTR
047C FE                MOV     R6,A
047D EE                MOV     A,R6
047E F4                CPL     A
047F FE                MOV     R6,A
0480 EF                MOV     A,R7
0481 5E                ANL     A,R6
0482 FF                MOV     R7,A
0483 D082              POP     DPL
0485 D083              POP     DPH
0487 EF                MOV     A,R7
0488 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 304
0489 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
048C 900000      R     MOV     DPTR,#requestHandled
048F EF                MOV     A,R7
0490 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 305
                                           ; SOURCE LINE # 306
                                           ; SOURCE LINE # 307
                                           ; SOURCE LINE # 308
                                           ; SOURCE LINE # 309
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 311
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 313
                                           ; SOURCE LINE # 314
0491         ?C0023:
                                           ; SOURCE LINE # 315
0491 900000      R     MOV     DPTR,#requestHandled
0494 E0                MOVX    A,@DPTR
0495 FF                MOV     R7,A
                                           ; SOURCE LINE # 316
0496         ?C0048:
0496 22                RET     
             ; FUNCTION USBUART_1_HandleStandardRqst (END)

             ; FUNCTION _USBUART_1_ReadDieID (BEGIN)
                                           ; SOURCE LINE # 338
0000 900000      R     MOV     DPTR,#descr
0003 120000      E     LCALL   ?C?PSTXDATA
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 34  

                                           ; SOURCE LINE # 339
                                           ; SOURCE LINE # 341
0006 900000      R     MOV     DPTR,#j
0009 E4                CLR     A
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 347
000B 7B00              MOV     R3,#00H
000D 7A00              MOV     R2,#00H
000F 7900              MOV     R1,#00H
0011 C003              PUSH    AR3
0013 C002              PUSH    AR2
0015 C001              PUSH    AR1
0017 900000      R     MOV     DPTR,#descr
001A 120000      E     LCALL   ?C?PLDXDATA
001D D082              POP     DPL
001F D083              POP     DPH
0021 D0E0              POP     ACC
0023 6B                XRL     A,R3
0024 7008              JNZ     ?C0133
0026 E9                MOV     A,R1
0027 6582              XRL     A,DPL
0029 7003              JNZ     ?C0133
002B EA                MOV     A,R2
002C 6583              XRL     A,DPH
002E         ?C0133:
002E 7003              JNZ     $ + 5H
0030 020000      R     LJMP    ?C0053
                                           ; SOURCE LINE # 348
                                           ; SOURCE LINE # 349
0033 900000      R     MOV     DPTR,#descr
0036 120000      E     LCALL   ?C?PLDXDATA
0039 7422              MOV     A,#022H
003B 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 350
003E 900000      R     MOV     DPTR,#descr
0041 120000      E     LCALL   ?C?PLDXDATA
0044 E9                MOV     A,R1
0045 2401              ADD     A,#01H
0047 F9                MOV     R1,A
0048 EA                MOV     A,R2
0049 3400              ADDC    A,#00H
004B FA                MOV     R2,A
004C 7403              MOV     A,#03H
004E 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 353
0051 900000      R     MOV     DPTR,#i
0054 7402              MOV     A,#02H
0056 F0                MOVX    @DPTR,A
0057         ?C0050:
0057 900000      R     MOV     DPTR,#i
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C EF                MOV     A,R7
005D C3                CLR     C
005E 9422              SUBB    A,#022H
0060 4003              JC      $ + 5H
0062 020000      R     LJMP    ?C0053
                                           ; SOURCE LINE # 354
                                           ; SOURCE LINE # 355
0065 900000      R     MOV     DPTR,#j
0068 E0                MOVX    A,@DPTR
0069 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 35  

006A E4                CLR     A
006B FC                MOV     R4,A
006C FD                MOV     R5,A
006D FE                MOV     R6,A
006E EF                MOV     A,R7
006F 2400              ADD     A,#00H
0071 FF                MOV     R7,A
0072 EE                MOV     A,R6
0073 3401              ADDC    A,#01H
0075 FE                MOV     R6,A
0076 ED                MOV     A,R5
0077 340C              ADDC    A,#0CH
0079 FD                MOV     R5,A
007A EC                MOV     A,R4
007B 3400              ADDC    A,#00H
007D FC                MOV     R4,A
007E A907              MOV     R1,AR7
0080 AA06              MOV     R2,AR6
0082 AB05              MOV     R3,AR5
0084 120000      E     LCALL   _cyread8
0087 900000      R     MOV     DPTR,#value
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 356
008C 900000      R     MOV     DPTR,#j
008F E0                MOVX    A,@DPTR
0090 04                INC     A
0091 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 357
0092 900000      R     MOV     DPTR,#value
0095 E0                MOVX    A,@DPTR
0096 FF                MOV     R7,A
0097 EF                MOV     A,R7
0098 C4                SWAP    A
0099 540F              ANL     A,#0FH
009B FF                MOV     R7,A
009C EF                MOV     A,R7
009D 900000      R     MOV     DPTR,#hex
00A0 93                MOVC    A,@A+DPTR
00A1 FF                MOV     R7,A
00A2 900000      R     MOV     DPTR,#descr
00A5 120000      E     LCALL   ?C?PLDXDATA
00A8 900000      R     MOV     DPTR,#i
00AB E0                MOVX    A,@DPTR
00AC FE                MOV     R6,A
00AD E9                MOV     A,R1
00AE 2E                ADD     A,R6
00AF F9                MOV     R1,A
00B0 E4                CLR     A
00B1 3A                ADDC    A,R2
00B2 FA                MOV     R2,A
00B3 EF                MOV     A,R7
00B4 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 358
00B7 900000      R     MOV     DPTR,#value
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC EF                MOV     A,R7
00BD 540F              ANL     A,#0FH
00BF FF                MOV     R7,A
00C0 EF                MOV     A,R7
00C1 900000      R     MOV     DPTR,#hex
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 36  

00C4 93                MOVC    A,@A+DPTR
00C5 FF                MOV     R7,A
00C6 900000      R     MOV     DPTR,#i
00C9 E0                MOVX    A,@DPTR
00CA FE                MOV     R6,A
00CB EE                MOV     A,R6
00CC FD                MOV     R5,A
00CD 7C00              MOV     R4,#00H
00CF ED                MOV     A,R5
00D0 2402              ADD     A,#02H
00D2 FD                MOV     R5,A
00D3 EC                MOV     A,R4
00D4 3400              ADDC    A,#00H
00D6 FC                MOV     R4,A
00D7 900000      R     MOV     DPTR,#descr
00DA 120000      E     LCALL   ?C?PLDXDATA
00DD E9                MOV     A,R1
00DE 2D                ADD     A,R5
00DF F9                MOV     R1,A
00E0 EA                MOV     A,R2
00E1 3C                ADDC    A,R4
00E2 FA                MOV     R2,A
00E3 EF                MOV     A,R7
00E4 120000      E     LCALL   ?C?CSTPTR
                                           ; SOURCE LINE # 359
00E7 900000      R     MOV     DPTR,#i
00EA E0                MOVX    A,@DPTR
00EB 2404              ADD     A,#04H
00ED F0                MOVX    @DPTR,A
00EE 020000      R     LJMP    ?C0050
                                           ; SOURCE LINE # 360
                                           ; SOURCE LINE # 361
00F1         ?C0053:
00F1 22                RET     
             ; FUNCTION _USBUART_1_ReadDieID (END)

             ; FUNCTION USBUART_1_ConfigReg (BEGIN)
                                           ; SOURCE LINE # 382
                                           ; SOURCE LINE # 383
                                           ; SOURCE LINE # 391
0000 900000      R     MOV     DPTR,#ep
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 392
0006 900000      R     MOV     DPTR,#i
0009 E4                CLR     A
000A F0                MOVX    @DPTR,A
000B         ?C0054:
000B 900000      R     MOV     DPTR,#i
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 EF                MOV     A,R7
0011 C3                CLR     C
0012 9480              SUBB    A,#080H
0014 4003              JC      $ + 5H
0016 020000      R     LJMP    ?C0055
                                           ; SOURCE LINE # 393
                                           ; SOURCE LINE # 395
0019 900000      R     MOV     DPTR,#i
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
001E 7E00              MOV     R6,#00H
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 37  

0020 EF                MOV     A,R7
0021 2480              ADD     A,#080H
0023 FF                MOV     R7,A
0024 EE                MOV     A,R6
0025 3460              ADDC    A,#060H
0027 FE                MOV     R6,A
0028 8F82              MOV     DPL,R7
002A 8E83              MOV     DPH,R6
002C 740C              MOV     A,#0CH
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 402
002F 900000      R     MOV     DPTR,#ep
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 EF                MOV     A,R7
0035 75F00B            MOV     B,#0BH
0038 A4                MUL     AB
0039 2400        E     ADD     A,#LOW USBUART_1_EP+05H
003B F582              MOV     DPL,A
003D E4                CLR     A
003E 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
0040 F583              MOV     DPH,A
0042 E0                MOVX    A,@DPTR
0043 FF                MOV     R7,A
0044 EF                MOV     A,R7
0045 604F              JZ      ?C0057
                                           ; SOURCE LINE # 403
                                           ; SOURCE LINE # 404
0047 900000      R     MOV     DPTR,#ep
004A E0                MOVX    A,@DPTR
004B FF                MOV     R7,A
004C EF                MOV     A,R7
004D 75F00B            MOV     B,#0BH
0050 A4                MUL     AB
0051 2400        E     ADD     A,#LOW USBUART_1_EP+04H
0053 F582              MOV     DPL,A
0055 E4                CLR     A
0056 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
0058 F583              MOV     DPH,A
005A E0                MOVX    A,@DPTR
005B FF                MOV     R7,A
005C EF                MOV     A,R7
005D 5480              ANL     A,#080H
005F FF                MOV     R7,A
0060 7E00              MOV     R6,#00H
0062 EF                MOV     A,R7
0063 4E                ORL     A,R6
0064 6018              JZ      ?C0058
                                           ; SOURCE LINE # 405
                                           ; SOURCE LINE # 406
0066 900000      R     MOV     DPTR,#i
0069 E0                MOVX    A,@DPTR
006A FF                MOV     R7,A
006B 7E00              MOV     R6,#00H
006D EF                MOV     A,R7
006E 240E              ADD     A,#0EH
0070 FF                MOV     R7,A
0071 EE                MOV     A,R6
0072 3460              ADDC    A,#060H
0074 FE                MOV     R6,A
0075 8F82              MOV     DPL,R7
0077 8E83              MOV     DPH,R6
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 38  

0079 740C              MOV     A,#0CH
007B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 407
007C 802E              SJMP    ?C0060
007E         ?C0058:
                                           ; SOURCE LINE # 409
                                           ; SOURCE LINE # 410
007E 900000      R     MOV     DPTR,#i
0081 E0                MOVX    A,@DPTR
0082 FF                MOV     R7,A
0083 7E00              MOV     R6,#00H
0085 EF                MOV     A,R7
0086 240E              ADD     A,#0EH
0088 FF                MOV     R7,A
0089 EE                MOV     A,R6
008A 3460              ADDC    A,#060H
008C FE                MOV     R6,A
008D 8F82              MOV     DPL,R7
008F 8E83              MOV     DPH,R6
0091 7408              MOV     A,#08H
0093 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 415
                                           ; SOURCE LINE # 416
0094 8016              SJMP    ?C0060
0096         ?C0057:
                                           ; SOURCE LINE # 418
                                           ; SOURCE LINE # 419
0096 900000      R     MOV     DPTR,#i
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 7E00              MOV     R6,#00H
009D EF                MOV     A,R7
009E 240E              ADD     A,#0EH
00A0 FF                MOV     R7,A
00A1 EE                MOV     A,R6
00A2 3460              ADDC    A,#060H
00A4 FE                MOV     R6,A
00A5 8F82              MOV     DPL,R7
00A7 8E83              MOV     DPH,R6
00A9 7480              MOV     A,#080H
00AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 420
00AC         ?C0060:
                                           ; SOURCE LINE # 423
00AC 900000      R     MOV     DPTR,#ep
00AF E0                MOVX    A,@DPTR
00B0 FF                MOV     R7,A
00B1 EF                MOV     A,R7
00B2 75F00B            MOV     B,#0BH
00B5 A4                MUL     AB
00B6 2400        E     ADD     A,#LOW USBUART_1_EP+08H
00B8 F582              MOV     DPL,A
00BA E4                CLR     A
00BB 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
00BD F583              MOV     DPH,A
00BF E0                MOVX    A,@DPTR
00C0 FE                MOV     R6,A
00C1 A3                INC     DPTR
00C2 E0                MOVX    A,@DPTR
00C3 FF                MOV     R7,A
00C4 EE                MOV     A,R6
00C5 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 39  

00C6 7E00              MOV     R6,#00H
00C8 900000      R     MOV     DPTR,#i
00CB E0                MOVX    A,@DPTR
00CC FE                MOV     R6,A
00CD EE                MOV     A,R6
00CE FD                MOV     R5,A
00CF 7C00              MOV     R4,#00H
00D1 ED                MOV     A,R5
00D2 240C              ADD     A,#0CH
00D4 FD                MOV     R5,A
00D5 EC                MOV     A,R4
00D6 3460              ADDC    A,#060H
00D8 FC                MOV     R4,A
00D9 8D82              MOV     DPL,R5
00DB 8C83              MOV     DPH,R4
00DD EF                MOV     A,R7
00DE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 424
00DF 900000      R     MOV     DPTR,#ep
00E2 E0                MOVX    A,@DPTR
00E3 FF                MOV     R7,A
00E4 EF                MOV     A,R7
00E5 75F00B            MOV     B,#0BH
00E8 A4                MUL     AB
00E9 2400        E     ADD     A,#LOW USBUART_1_EP+08H
00EB F582              MOV     DPL,A
00ED E4                CLR     A
00EE 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
00F0 F583              MOV     DPH,A
00F2 E0                MOVX    A,@DPTR
00F3 FE                MOV     R6,A
00F4 A3                INC     DPTR
00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 EF                MOV     A,R7
00F8 54FF              ANL     A,#0FFH
00FA FF                MOV     R7,A
00FB 900000      R     MOV     DPTR,#i
00FE E0                MOVX    A,@DPTR
00FF FE                MOV     R6,A
0100 EE                MOV     A,R6
0101 FD                MOV     R5,A
0102 7C00              MOV     R4,#00H
0104 ED                MOV     A,R5
0105 240D              ADD     A,#0DH
0107 FD                MOV     R5,A
0108 EC                MOV     A,R4
0109 3460              ADDC    A,#060H
010B FC                MOV     R4,A
010C 8D82              MOV     DPL,R5
010E 8C83              MOV     DPH,R4
0110 EF                MOV     A,R7
0111 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 426
0112 900000      R     MOV     DPTR,#ep
0115 E0                MOVX    A,@DPTR
0116 FF                MOV     R7,A
0117 EF                MOV     A,R7
0118 75F00B            MOV     B,#0BH
011B A4                MUL     AB
011C 2400        E     ADD     A,#LOW USBUART_1_EP+06H
011E F582              MOV     DPL,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 40  

0120 E4                CLR     A
0121 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
0123 F583              MOV     DPH,A
0125 E0                MOVX    A,@DPTR
0126 FE                MOV     R6,A
0127 A3                INC     DPTR
0128 E0                MOVX    A,@DPTR
0129 FF                MOV     R7,A
012A EF                MOV     A,R7
012B 54FF              ANL     A,#0FFH
012D FF                MOV     R7,A
012E 900000      R     MOV     DPTR,#i
0131 E0                MOVX    A,@DPTR
0132 FE                MOV     R6,A
0133 EE                MOV     A,R6
0134 FD                MOV     R5,A
0135 7C00              MOV     R4,#00H
0137 ED                MOV     A,R5
0138 2486              ADD     A,#086H
013A FD                MOV     R5,A
013B EC                MOV     A,R4
013C 3460              ADDC    A,#060H
013E FC                MOV     R4,A
013F 8D82              MOV     DPL,R5
0141 8C83              MOV     DPH,R4
0143 EF                MOV     A,R7
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 427
0145 900000      R     MOV     DPTR,#ep
0148 E0                MOVX    A,@DPTR
0149 FF                MOV     R7,A
014A EF                MOV     A,R7
014B 75F00B            MOV     B,#0BH
014E A4                MUL     AB
014F 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0151 F582              MOV     DPL,A
0153 E4                CLR     A
0154 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
0156 F583              MOV     DPH,A
0158 E0                MOVX    A,@DPTR
0159 FE                MOV     R6,A
015A A3                INC     DPTR
015B E0                MOVX    A,@DPTR
015C FF                MOV     R7,A
015D EE                MOV     A,R6
015E FF                MOV     R7,A
015F 7E00              MOV     R6,#00H
0161 900000      R     MOV     DPTR,#i
0164 E0                MOVX    A,@DPTR
0165 FE                MOV     R6,A
0166 EE                MOV     A,R6
0167 FD                MOV     R5,A
0168 7C00              MOV     R4,#00H
016A ED                MOV     A,R5
016B 2487              ADD     A,#087H
016D FD                MOV     R5,A
016E EC                MOV     A,R4
016F 3460              ADDC    A,#060H
0171 FC                MOV     R4,A
0172 8D82              MOV     DPL,R5
0174 8C83              MOV     DPH,R4
0176 EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 41  

0177 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 428
0178 900000      R     MOV     DPTR,#ep
017B E0                MOVX    A,@DPTR
017C FF                MOV     R7,A
017D EF                MOV     A,R7
017E 75F00B            MOV     B,#0BH
0181 A4                MUL     AB
0182 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0184 F582              MOV     DPL,A
0186 E4                CLR     A
0187 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
0189 F583              MOV     DPH,A
018B E0                MOVX    A,@DPTR
018C FE                MOV     R6,A
018D A3                INC     DPTR
018E E0                MOVX    A,@DPTR
018F FF                MOV     R7,A
0190 EF                MOV     A,R7
0191 54FF              ANL     A,#0FFH
0193 FF                MOV     R7,A
0194 900000      R     MOV     DPTR,#i
0197 E0                MOVX    A,@DPTR
0198 FE                MOV     R6,A
0199 EE                MOV     A,R6
019A FD                MOV     R5,A
019B 7C00              MOV     R4,#00H
019D ED                MOV     A,R5
019E 2484              ADD     A,#084H
01A0 FD                MOV     R5,A
01A1 EC                MOV     A,R4
01A2 3460              ADDC    A,#060H
01A4 FC                MOV     R4,A
01A5 8D82              MOV     DPL,R5
01A7 8C83              MOV     DPH,R4
01A9 EF                MOV     A,R7
01AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 429
01AB 900000      R     MOV     DPTR,#ep
01AE E0                MOVX    A,@DPTR
01AF FF                MOV     R7,A
01B0 EF                MOV     A,R7
01B1 75F00B            MOV     B,#0BH
01B4 A4                MUL     AB
01B5 2400        E     ADD     A,#LOW USBUART_1_EP+06H
01B7 F582              MOV     DPL,A
01B9 E4                CLR     A
01BA 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
01BC F583              MOV     DPH,A
01BE E0                MOVX    A,@DPTR
01BF FE                MOV     R6,A
01C0 A3                INC     DPTR
01C1 E0                MOVX    A,@DPTR
01C2 FF                MOV     R7,A
01C3 EE                MOV     A,R6
01C4 FF                MOV     R7,A
01C5 7E00              MOV     R6,#00H
01C7 900000      R     MOV     DPTR,#i
01CA E0                MOVX    A,@DPTR
01CB FE                MOV     R6,A
01CC EE                MOV     A,R6
01CD FD                MOV     R5,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 42  

01CE 7C00              MOV     R4,#00H
01D0 ED                MOV     A,R5
01D1 2485              ADD     A,#085H
01D3 FD                MOV     R5,A
01D4 EC                MOV     A,R4
01D5 3460              ADDC    A,#060H
01D7 FC                MOV     R4,A
01D8 8D82              MOV     DPL,R5
01DA 8C83              MOV     DPH,R4
01DC EF                MOV     A,R7
01DD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 432
01DE 900000      R     MOV     DPTR,#ep
01E1 E0                MOVX    A,@DPTR
01E2 04                INC     A
01E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 433
01E4 900000      R     MOV     DPTR,#i
01E7 E0                MOVX    A,@DPTR
01E8 2410              ADD     A,#010H
01EA F0                MOVX    @DPTR,A
01EB 020000      R     LJMP    ?C0054
01EE         ?C0055:
                                           ; SOURCE LINE # 449
01EE 90600A            MOV     DPTR,#0600AH
01F1 74FF              MOV     A,#0FFH
01F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 450
01F4 22                RET     
             ; FUNCTION USBUART_1_ConfigReg (END)

             ; FUNCTION _USBUART_1_Config (BEGIN)
                                           ; SOURCE LINE # 475
0000 900000      R     MOV     DPTR,#clearAltSetting
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 476
                                           ; SOURCE LINE # 483
0005 900000      R     MOV     DPTR,#buffCount
0008 E4                CLR     A
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B E4                CLR     A
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 490
000D 900000      R     MOV     DPTR,#ep
0010 E4                CLR     A
0011 F0                MOVX    @DPTR,A
0012         ?C0062:
0012 900000      R     MOV     DPTR,#ep
0015 E0                MOVX    A,@DPTR
0016 FF                MOV     R7,A
0017 EF                MOV     A,R7
0018 C3                CLR     C
0019 9409              SUBB    A,#09H
001B 4003              JC      $ + 5H
001D 020000      R     LJMP    ?C0063
                                           ; SOURCE LINE # 491
                                           ; SOURCE LINE # 492
0020 900000      R     MOV     DPTR,#ep
0023 E0                MOVX    A,@DPTR
0024 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 43  

0025 EF                MOV     A,R7
0026 75F00B            MOV     B,#0BH
0029 A4                MUL     AB
002A 2400        E     ADD     A,#LOW USBUART_1_EP
002C F582              MOV     DPL,A
002E E4                CLR     A
002F 3400        E     ADDC    A,#HIGH USBUART_1_EP
0031 F583              MOV     DPH,A
0033 E4                CLR     A
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 493
0035 900000      R     MOV     DPTR,#ep
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B 75F00B            MOV     B,#0BH
003E A4                MUL     AB
003F 2400        E     ADD     A,#LOW USBUART_1_EP+02H
0041 F582              MOV     DPL,A
0043 E4                CLR     A
0044 3400        E     ADDC    A,#HIGH USBUART_1_EP+02H
0046 F583              MOV     DPH,A
0048 E4                CLR     A
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 494
004A 900000      R     MOV     DPTR,#ep
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F EF                MOV     A,R7
0050 75F00B            MOV     B,#0BH
0053 A4                MUL     AB
0054 2400        E     ADD     A,#LOW USBUART_1_EP+01H
0056 F582              MOV     DPL,A
0058 E4                CLR     A
0059 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
005B F583              MOV     DPH,A
005D E4                CLR     A
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 495
005F 900000      R     MOV     DPTR,#ep
0062 E0                MOVX    A,@DPTR
0063 FF                MOV     R7,A
0064 EF                MOV     A,R7
0065 75F00B            MOV     B,#0BH
0068 A4                MUL     AB
0069 2400        E     ADD     A,#LOW USBUART_1_EP+03H
006B F582              MOV     DPL,A
006D E4                CLR     A
006E 3400        E     ADDC    A,#HIGH USBUART_1_EP+03H
0070 F583              MOV     DPH,A
0072 E4                CLR     A
0073 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 496
0074 900000      R     MOV     DPTR,#ep
0077 E0                MOVX    A,@DPTR
0078 FF                MOV     R7,A
0079 EF                MOV     A,R7
007A 75F00B            MOV     B,#0BH
007D A4                MUL     AB
007E 2400        E     ADD     A,#LOW USBUART_1_EP+05H
0080 F582              MOV     DPL,A
0082 E4                CLR     A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 44  

0083 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
0085 F583              MOV     DPH,A
0087 E4                CLR     A
0088 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 497
0089 900000      R     MOV     DPTR,#ep
008C E0                MOVX    A,@DPTR
008D FF                MOV     R7,A
008E EF                MOV     A,R7
008F 75F00B            MOV     B,#0BH
0092 A4                MUL     AB
0093 2400        E     ADD     A,#LOW USBUART_1_EP+08H
0095 F582              MOV     DPL,A
0097 E4                CLR     A
0098 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
009A F583              MOV     DPH,A
009C E4                CLR     A
009D F0                MOVX    @DPTR,A
009E A3                INC     DPTR
009F E4                CLR     A
00A0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 498
00A1 900000      R     MOV     DPTR,#ep
00A4 E0                MOVX    A,@DPTR
00A5 FF                MOV     R7,A
00A6 EF                MOV     A,R7
00A7 75F00B            MOV     B,#0BH
00AA A4                MUL     AB
00AB 2400        E     ADD     A,#LOW USBUART_1_EP+0AH
00AD F582              MOV     DPL,A
00AF E4                CLR     A
00B0 3400        E     ADDC    A,#HIGH USBUART_1_EP+0AH
00B2 F583              MOV     DPH,A
00B4 E4                CLR     A
00B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 500
00B6 900000      R     MOV     DPTR,#ep
00B9 E0                MOVX    A,@DPTR
00BA 04                INC     A
00BB F0                MOVX    @DPTR,A
00BC 020000      R     LJMP    ?C0062
00BF         ?C0063:
                                           ; SOURCE LINE # 503
00BF 900000      R     MOV     DPTR,#clearAltSetting
00C2 E0                MOVX    A,@DPTR
00C3 FF                MOV     R7,A
00C4 EF                MOV     A,R7
00C5 603A              JZ      ?C0065
                                           ; SOURCE LINE # 504
                                           ; SOURCE LINE # 505
00C7 900000      R     MOV     DPTR,#i
00CA E4                CLR     A
00CB F0                MOVX    @DPTR,A
00CC         ?C0066:
00CC 900000      R     MOV     DPTR,#i
00CF E0                MOVX    A,@DPTR
00D0 FF                MOV     R7,A
00D1 EF                MOV     A,R7
00D2 C3                CLR     C
00D3 9402              SUBB    A,#02H
00D5 502A              JNC     ?C0065
                                           ; SOURCE LINE # 506
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 45  

                                           ; SOURCE LINE # 507
00D7 900000      R     MOV     DPTR,#i
00DA E0                MOVX    A,@DPTR
00DB FF                MOV     R7,A
00DC 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
00DE 2F                ADD     A,R7
00DF F582              MOV     DPL,A
00E1 E4                CLR     A
00E2 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
00E4 F583              MOV     DPH,A
00E6 E4                CLR     A
00E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 508
00E8 900000      R     MOV     DPTR,#i
00EB E0                MOVX    A,@DPTR
00EC FF                MOV     R7,A
00ED 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting_last
00EF 2F                ADD     A,R7
00F0 F582              MOV     DPL,A
00F2 E4                CLR     A
00F3 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting_last
00F5 F583              MOV     DPH,A
00F7 E4                CLR     A
00F8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 509
00F9 900000      R     MOV     DPTR,#i
00FC E0                MOVX    A,@DPTR
00FD 04                INC     A
00FE F0                MOVX    @DPTR,A
00FF 80CB              SJMP    ?C0066
                                           ; SOURCE LINE # 510
0101         ?C0065:
                                           ; SOURCE LINE # 513
0101 900000      E     MOV     DPTR,#USBUART_1_configuration
0104 E0                MOVX    A,@DPTR
0105 FF                MOV     R7,A
0106 EF                MOV     A,R7
0107 D3                SETB    C
0108 9400              SUBB    A,#00H
010A 5003              JNC     $ + 5H
010C 020000      R     LJMP    ?C0097
                                           ; SOURCE LINE # 514
                                           ; SOURCE LINE # 515
010F 900000      E     MOV     DPTR,#USBUART_1_configuration
0112 E0                MOVX    A,@DPTR
0113 FF                MOV     R7,A
0114 EF                MOV     A,R7
0115 14                DEC     A
0116 FF                MOV     R7,A
0117 120000      R     LCALL   _USBUART_1_GetConfigTablePtr
011A 900000      R     MOV     DPTR,#pTmp
011D EE                MOV     A,R6
011E F0                MOVX    @DPTR,A
011F A3                INC     DPTR
0120 EF                MOV     A,R7
0121 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 517
0122 900000      R     MOV     DPTR,#pTmp
0125 E0                MOVX    A,@DPTR
0126 FE                MOV     R6,A
0127 A3                INC     DPTR
0128 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 46  

0129 FF                MOV     R7,A
012A 8F82              MOV     DPL,R7
012C 8E83              MOV     DPH,R6
012E A3                INC     DPTR
012F 120000      E     LCALL   ?C?PLDCODE
0132 900000      R     MOV     DPTR,#pDescr
0135 120000      E     LCALL   ?C?PSTXDATA
                                           ; SOURCE LINE # 518
0138 900000      R     MOV     DPTR,#pDescr
013B 120000      E     LCALL   ?C?PLDXDATA
013E E9                MOV     A,R1
013F 2407              ADD     A,#07H
0141 F9                MOV     R1,A
0142 EA                MOV     A,R2
0143 3400              ADDC    A,#00H
0145 FA                MOV     R2,A
0146 120000      E     LCALL   ?C?CLDPTR
0149 FF                MOV     R7,A
014A EF                MOV     A,R7
014B 5440              ANL     A,#040H
014D FF                MOV     R7,A
014E 7E00              MOV     R6,#00H
0150 EF                MOV     A,R7
0151 4E                ORL     A,R6
0152 6010              JZ      ?C0070
                                           ; SOURCE LINE # 519
                                           ; SOURCE LINE # 520
0154 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
0157 E0                MOVX    A,@DPTR
0158 FF                MOV     R7,A
0159 EF                MOV     A,R7
015A 4401              ORL     A,#01H
015C FF                MOV     R7,A
015D 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
0160 EF                MOV     A,R7
0161 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 521
0162 800E              SJMP    ?C0071
0164         ?C0070:
                                           ; SOURCE LINE # 523
                                           ; SOURCE LINE # 524
0164 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
0167 E0                MOVX    A,@DPTR
0168 FF                MOV     R7,A
0169 EF                MOV     A,R7
016A 54FE              ANL     A,#0FEH
016C FF                MOV     R7,A
016D 900000      E     MOV     DPTR,#USBUART_1_deviceStatus
0170 EF                MOV     A,R7
0171 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 525
0172         ?C0071:
                                           ; SOURCE LINE # 527
0172 900000      R     MOV     DPTR,#pTmp
0175 E0                MOVX    A,@DPTR
0176 FE                MOV     R6,A
0177 A3                INC     DPTR
0178 E0                MOVX    A,@DPTR
0179 FF                MOV     R7,A
017A EF                MOV     A,R7
017B 2404              ADD     A,#04H
017D FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 47  

017E EE                MOV     A,R6
017F 3400              ADDC    A,#00H
0181 FE                MOV     R6,A
0182 900000      R     MOV     DPTR,#pTmp
0185 EE                MOV     A,R6
0186 F0                MOVX    @DPTR,A
0187 A3                INC     DPTR
0188 EF                MOV     A,R7
0189 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 528
018A 900000      R     MOV     DPTR,#pTmp
018D E0                MOVX    A,@DPTR
018E FE                MOV     R6,A
018F A3                INC     DPTR
0190 E0                MOVX    A,@DPTR
0191 FF                MOV     R7,A
0192 8F82              MOV     DPL,R7
0194 8E83              MOV     DPH,R6
0196 E4                CLR     A
0197 93                MOVC    A,@A+DPTR
0198 FF                MOV     R7,A
0199 900000      R     MOV     DPTR,#ep
019C EF                MOV     A,R7
019D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 595
019E 900000      R     MOV     DPTR,#i
01A1 7401              MOV     A,#01H
01A3 F0                MOVX    @DPTR,A
01A4         ?C0072:
01A4 900000      R     MOV     DPTR,#i
01A7 E0                MOVX    A,@DPTR
01A8 FF                MOV     R7,A
01A9 EF                MOV     A,R7
01AA C3                CLR     C
01AB 9409              SUBB    A,#09H
01AD 4003              JC      $ + 5H
01AF 020000      R     LJMP    ?C0073
                                           ; SOURCE LINE # 596
                                           ; SOURCE LINE # 598
01B2 900000      R     MOV     DPTR,#pTmp
01B5 E0                MOVX    A,@DPTR
01B6 FE                MOV     R6,A
01B7 A3                INC     DPTR
01B8 E0                MOVX    A,@DPTR
01B9 FF                MOV     R7,A
01BA 8F82              MOV     DPL,R7
01BC 8E83              MOV     DPH,R6
01BE A3                INC     DPTR
01BF 120000      E     LCALL   ?C?PLDCODE
01C2 AE02              MOV     R6,AR2
01C4 AF01              MOV     R7,AR1
01C6 900000      R     MOV     DPTR,#pEP
01C9 EE                MOV     A,R6
01CA F0                MOVX    @DPTR,A
01CB A3                INC     DPTR
01CC EF                MOV     A,R7
01CD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 601
01CE 900000      R     MOV     DPTR,#cur_ep
01D1 E4                CLR     A
01D2 F0                MOVX    @DPTR,A
01D3         ?C0075:
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 48  

01D3 900000      R     MOV     DPTR,#ep
01D6 E0                MOVX    A,@DPTR
01D7 FF                MOV     R7,A
01D8 900000      R     MOV     DPTR,#cur_ep
01DB E0                MOVX    A,@DPTR
01DC FE                MOV     R6,A
01DD EE                MOV     A,R6
01DE C3                CLR     C
01DF 9F                SUBB    A,R7
01E0 4003              JC      $ + 5H
01E2 020000      R     LJMP    ?C0074
                                           ; SOURCE LINE # 602
                                           ; SOURCE LINE # 604
01E5 900000      R     MOV     DPTR,#pEP
01E8 E0                MOVX    A,@DPTR
01E9 FE                MOV     R6,A
01EA A3                INC     DPTR
01EB E0                MOVX    A,@DPTR
01EC FF                MOV     R7,A
01ED 8F82              MOV     DPL,R7
01EF 8E83              MOV     DPH,R6
01F1 7402              MOV     A,#02H
01F3 93                MOVC    A,@A+DPTR
01F4 FF                MOV     R7,A
01F5 EF                MOV     A,R7
01F6 547F              ANL     A,#07FH
01F8 FF                MOV     R7,A
01F9 7E00              MOV     R6,#00H
01FB 900000      R     MOV     DPTR,#i
01FE E0                MOVX    A,@DPTR
01FF FD                MOV     R5,A
0200 7C00              MOV     R4,#00H
0202 ED                MOV     A,R5
0203 6F                XRL     A,R7
0204 7002              JNZ     ?C0134
0206 EC                MOV     A,R4
0207 6E                XRL     A,R6
0208         ?C0134:
0208 6003              JZ      $ + 5H
020A 020000      R     LJMP    ?C0078
                                           ; SOURCE LINE # 605
                                           ; SOURCE LINE # 606
020D 900000      R     MOV     DPTR,#pEP
0210 E0                MOVX    A,@DPTR
0211 FE                MOV     R6,A
0212 A3                INC     DPTR
0213 E0                MOVX    A,@DPTR
0214 FF                MOV     R7,A
0215 8F82              MOV     DPL,R7
0217 8E83              MOV     DPH,R6
0219 7404              MOV     A,#04H
021B 93                MOVC    A,@A+DPTR
021C FE                MOV     R6,A
021D 7405              MOV     A,#05H
021F 93                MOVC    A,@A+DPTR
0220 FF                MOV     R7,A
0221 900000      R     MOV     DPTR,#i
0224 E0                MOVX    A,@DPTR
0225 FD                MOV     R5,A
0226 ED                MOV     A,R5
0227 75F00B            MOV     B,#0BH
022A A4                MUL     AB
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 49  

022B 2400        E     ADD     A,#LOW USBUART_1_EP+08H
022D F582              MOV     DPL,A
022F E4                CLR     A
0230 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
0232 F583              MOV     DPH,A
0234 E0                MOVX    A,@DPTR
0235 FC                MOV     R4,A
0236 A3                INC     DPTR
0237 E0                MOVX    A,@DPTR
0238 FD                MOV     R5,A
0239 C3                CLR     C
023A ED                MOV     A,R5
023B 9F                SUBB    A,R7
023C EC                MOV     A,R4
023D 9E                SUBB    A,R6
023E 502C              JNC     ?C0079
                                           ; SOURCE LINE # 607
                                           ; SOURCE LINE # 608
0240 900000      R     MOV     DPTR,#pEP
0243 E0                MOVX    A,@DPTR
0244 FE                MOV     R6,A
0245 A3                INC     DPTR
0246 E0                MOVX    A,@DPTR
0247 FF                MOV     R7,A
0248 8F82              MOV     DPL,R7
024A 8E83              MOV     DPH,R6
024C 7404              MOV     A,#04H
024E 93                MOVC    A,@A+DPTR
024F FE                MOV     R6,A
0250 7405              MOV     A,#05H
0252 93                MOVC    A,@A+DPTR
0253 FF                MOV     R7,A
0254 900000      R     MOV     DPTR,#i
0257 E0                MOVX    A,@DPTR
0258 FD                MOV     R5,A
0259 ED                MOV     A,R5
025A 75F00B            MOV     B,#0BH
025D A4                MUL     AB
025E 2400        E     ADD     A,#LOW USBUART_1_EP+08H
0260 F582              MOV     DPL,A
0262 E4                CLR     A
0263 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
0265 F583              MOV     DPH,A
0267 EE                MOV     A,R6
0268 F0                MOVX    @DPTR,A
0269 A3                INC     DPTR
026A EF                MOV     A,R7
026B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 609
026C         ?C0079:
                                           ; SOURCE LINE # 611
026C 900000      R     MOV     DPTR,#pEP
026F E0                MOVX    A,@DPTR
0270 FE                MOV     R6,A
0271 A3                INC     DPTR
0272 E0                MOVX    A,@DPTR
0273 FF                MOV     R7,A
0274 8F82              MOV     DPL,R7
0276 8E83              MOV     DPH,R6
0278 E4                CLR     A
0279 93                MOVC    A,@A+DPTR
027A FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 50  

027B 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
027D 2F                ADD     A,R7
027E F582              MOV     DPL,A
0280 E4                CLR     A
0281 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
0283 F583              MOV     DPH,A
0285 E0                MOVX    A,@DPTR
0286 FF                MOV     R7,A
0287 900000      R     MOV     DPTR,#pEP
028A E0                MOVX    A,@DPTR
028B FC                MOV     R4,A
028C A3                INC     DPTR
028D E0                MOVX    A,@DPTR
028E FD                MOV     R5,A
028F 8D82              MOV     DPL,R5
0291 8C83              MOV     DPH,R4
0293 7401              MOV     A,#01H
0295 93                MOVC    A,@A+DPTR
0296 FE                MOV     R6,A
0297 EF                MOV     A,R7
0298 6E                XRL     A,R6
0299 6003              JZ      $ + 5H
029B 020000      R     LJMP    ?C0078
                                           ; SOURCE LINE # 612
                                           ; SOURCE LINE # 613
029E 900000      R     MOV     DPTR,#pEP
02A1 E0                MOVX    A,@DPTR
02A2 FE                MOV     R6,A
02A3 A3                INC     DPTR
02A4 E0                MOVX    A,@DPTR
02A5 FF                MOV     R7,A
02A6 8F82              MOV     DPL,R7
02A8 8E83              MOV     DPH,R6
02AA 7403              MOV     A,#03H
02AC 93                MOVC    A,@A+DPTR
02AD FF                MOV     R7,A
02AE EF                MOV     A,R7
02AF 5403              ANL     A,#03H
02B1 FF                MOV     R7,A
02B2 900000      R     MOV     DPTR,#ep_type
02B5 EF                MOV     A,R7
02B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 614
02B7 900000      R     MOV     DPTR,#pEP
02BA E0                MOVX    A,@DPTR
02BB FE                MOV     R6,A
02BC A3                INC     DPTR
02BD E0                MOVX    A,@DPTR
02BE FF                MOV     R7,A
02BF 8F82              MOV     DPL,R7
02C1 8E83              MOV     DPH,R6
02C3 7402              MOV     A,#02H
02C5 93                MOVC    A,@A+DPTR
02C6 FF                MOV     R7,A
02C7 EF                MOV     A,R7
02C8 5480              ANL     A,#080H
02CA FF                MOV     R7,A
02CB 7E00              MOV     R6,#00H
02CD EF                MOV     A,R7
02CE 4E                ORL     A,R6
02CF 7003              JNZ     $ + 5H
02D1 020000      R     LJMP    ?C0081
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 51  

                                           ; SOURCE LINE # 615
                                           ; SOURCE LINE # 617
02D4 900000      R     MOV     DPTR,#i
02D7 E0                MOVX    A,@DPTR
02D8 FF                MOV     R7,A
02D9 EF                MOV     A,R7
02DA 75F00B            MOV     B,#0BH
02DD A4                MUL     AB
02DE 2400        E     ADD     A,#LOW USBUART_1_EP+01H
02E0 F582              MOV     DPL,A
02E2 E4                CLR     A
02E3 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
02E5 F583              MOV     DPH,A
02E7 7401              MOV     A,#01H
02E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 618
02EA 900000      R     MOV     DPTR,#ep_type
02ED E0                MOVX    A,@DPTR
02EE FF                MOV     R7,A
02EF EF                MOV     A,R7
02F0 B40104            CJNE    A,#01H,?C0082
02F3 7F07              MOV     R7,#07H
02F5 8002              SJMP    ?C0083
02F7         ?C0082:
02F7 7F0D              MOV     R7,#0DH
02F9         ?C0083:
02F9 900000      R     MOV     DPTR,#i
02FC E0                MOVX    A,@DPTR
02FD FE                MOV     R6,A
02FE EE                MOV     A,R6
02FF 75F00B            MOV     B,#0BH
0302 A4                MUL     AB
0303 2400        E     ADD     A,#LOW USBUART_1_EP+05H
0305 F582              MOV     DPL,A
0307 E4                CLR     A
0308 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
030A F583              MOV     DPH,A
030C EF                MOV     A,R7
030D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 622
030E 900000      R     MOV     DPTR,#pEP
0311 E0                MOVX    A,@DPTR
0312 FE                MOV     R6,A
0313 A3                INC     DPTR
0314 E0                MOVX    A,@DPTR
0315 FF                MOV     R7,A
0316 8F82              MOV     DPL,R7
0318 8E83              MOV     DPH,R6
031A 7406              MOV     A,#06H
031C 93                MOVC    A,@A+DPTR
031D FF                MOV     R7,A
031E EF                MOV     A,R7
031F 640A              XRL     A,#0AH
0321 6018              JZ      ?C0085
0323 900000      R     MOV     DPTR,#pEP
0326 E0                MOVX    A,@DPTR
0327 FE                MOV     R6,A
0328 A3                INC     DPTR
0329 E0                MOVX    A,@DPTR
032A FF                MOV     R7,A
032B 8F82              MOV     DPL,R7
032D 8E83              MOV     DPH,R6
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 52  

032F 7406              MOV     A,#06H
0331 93                MOVC    A,@A+DPTR
0332 FF                MOV     R7,A
0333 EF                MOV     A,R7
0334 6402              XRL     A,#02H
0336 6003              JZ      $ + 5H
0338 020000      R     LJMP    ?C0086
033B         ?C0085:
033B 900000      R     MOV     DPTR,#ep_type
033E E0                MOVX    A,@DPTR
033F FF                MOV     R7,A
0340 EF                MOV     A,R7
0341 6403              XRL     A,#03H
0343 7003              JNZ     $ + 5H
0345 020000      R     LJMP    ?C0086
                                           ; SOURCE LINE # 625
                                           ; SOURCE LINE # 626
0348 900000      R     MOV     DPTR,#i
034B E0                MOVX    A,@DPTR
034C FF                MOV     R7,A
034D 900000      E     MOV     DPTR,#USBUART_1_cdc_data_in_ep
0350 EF                MOV     A,R7
0351 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 627
                                           ; SOURCE LINE # 637
0352 8076              SJMP    ?C0086
0354         ?C0081:
                                           ; SOURCE LINE # 639
                                           ; SOURCE LINE # 641
0354 900000      R     MOV     DPTR,#i
0357 E0                MOVX    A,@DPTR
0358 FF                MOV     R7,A
0359 EF                MOV     A,R7
035A 75F00B            MOV     B,#0BH
035D A4                MUL     AB
035E 2400        E     ADD     A,#LOW USBUART_1_EP+01H
0360 F582              MOV     DPL,A
0362 E4                CLR     A
0363 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
0365 F583              MOV     DPH,A
0367 E4                CLR     A
0368 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 642
0369 900000      R     MOV     DPTR,#ep_type
036C E0                MOVX    A,@DPTR
036D FF                MOV     R7,A
036E EF                MOV     A,R7
036F B40104            CJNE    A,#01H,?C0087
0372 7F05              MOV     R7,#05H
0374 8002              SJMP    ?C0088
0376         ?C0087:
0376 7F09              MOV     R7,#09H
0378         ?C0088:
0378 900000      R     MOV     DPTR,#i
037B E0                MOVX    A,@DPTR
037C FE                MOV     R6,A
037D EE                MOV     A,R6
037E 75F00B            MOV     B,#0BH
0381 A4                MUL     AB
0382 2400        E     ADD     A,#LOW USBUART_1_EP+05H
0384 F582              MOV     DPL,A
0386 E4                CLR     A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 53  

0387 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
0389 F583              MOV     DPH,A
038B EF                MOV     A,R7
038C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 646
038D 900000      R     MOV     DPTR,#pEP
0390 E0                MOVX    A,@DPTR
0391 FE                MOV     R6,A
0392 A3                INC     DPTR
0393 E0                MOVX    A,@DPTR
0394 FF                MOV     R7,A
0395 8F82              MOV     DPL,R7
0397 8E83              MOV     DPH,R6
0399 7406              MOV     A,#06H
039B 93                MOVC    A,@A+DPTR
039C FF                MOV     R7,A
039D EF                MOV     A,R7
039E 640A              XRL     A,#0AH
03A0 6014              JZ      ?C0090
03A2 900000      R     MOV     DPTR,#pEP
03A5 E0                MOVX    A,@DPTR
03A6 FE                MOV     R6,A
03A7 A3                INC     DPTR
03A8 E0                MOVX    A,@DPTR
03A9 FF                MOV     R7,A
03AA 8F82              MOV     DPL,R7
03AC 8E83              MOV     DPH,R6
03AE 7406              MOV     A,#06H
03B0 93                MOVC    A,@A+DPTR
03B1 FF                MOV     R7,A
03B2 EF                MOV     A,R7
03B3 B40214            CJNE    A,#02H,?C0086
03B6         ?C0090:
03B6 900000      R     MOV     DPTR,#ep_type
03B9 E0                MOVX    A,@DPTR
03BA FF                MOV     R7,A
03BB EF                MOV     A,R7
03BC 6403              XRL     A,#03H
03BE 600A              JZ      ?C0086
                                           ; SOURCE LINE # 649
                                           ; SOURCE LINE # 650
03C0 900000      R     MOV     DPTR,#i
03C3 E0                MOVX    A,@DPTR
03C4 FF                MOV     R7,A
03C5 900000      E     MOV     DPTR,#USBUART_1_cdc_data_out_ep
03C8 EF                MOV     A,R7
03C9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 651
                                           ; SOURCE LINE # 661
03CA         ?C0086:
                                           ; SOURCE LINE # 662
03CA 900000      R     MOV     DPTR,#pEP
03CD E0                MOVX    A,@DPTR
03CE FE                MOV     R6,A
03CF A3                INC     DPTR
03D0 E0                MOVX    A,@DPTR
03D1 FF                MOV     R7,A
03D2 8F82              MOV     DPL,R7
03D4 8E83              MOV     DPH,R6
03D6 7402              MOV     A,#02H
03D8 93                MOVC    A,@A+DPTR
03D9 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 54  

03DA 900000      R     MOV     DPTR,#i
03DD E0                MOVX    A,@DPTR
03DE FE                MOV     R6,A
03DF EE                MOV     A,R6
03E0 75F00B            MOV     B,#0BH
03E3 A4                MUL     AB
03E4 2400        E     ADD     A,#LOW USBUART_1_EP+04H
03E6 F582              MOV     DPL,A
03E8 E4                CLR     A
03E9 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
03EB F583              MOV     DPH,A
03ED EF                MOV     A,R7
03EE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 663
03EF 900000      R     MOV     DPTR,#pEP
03F2 E0                MOVX    A,@DPTR
03F3 FE                MOV     R6,A
03F4 A3                INC     DPTR
03F5 E0                MOVX    A,@DPTR
03F6 FF                MOV     R7,A
03F7 8F82              MOV     DPL,R7
03F9 8E83              MOV     DPH,R6
03FB 7403              MOV     A,#03H
03FD 93                MOVC    A,@A+DPTR
03FE FF                MOV     R7,A
03FF 900000      R     MOV     DPTR,#i
0402 E0                MOVX    A,@DPTR
0403 FE                MOV     R6,A
0404 EE                MOV     A,R6
0405 75F00B            MOV     B,#0BH
0408 A4                MUL     AB
0409 2400        E     ADD     A,#LOW USBUART_1_EP
040B F582              MOV     DPL,A
040D E4                CLR     A
040E 3400        E     ADDC    A,#HIGH USBUART_1_EP
0410 F583              MOV     DPH,A
0412 EF                MOV     A,R7
0413 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 668
                                           ; SOURCE LINE # 669
0414         ?C0078:
                                           ; SOURCE LINE # 670
0414 900000      R     MOV     DPTR,#pEP
0417 E0                MOVX    A,@DPTR
0418 FE                MOV     R6,A
0419 A3                INC     DPTR
041A E0                MOVX    A,@DPTR
041B FF                MOV     R7,A
041C EF                MOV     A,R7
041D 2407              ADD     A,#07H
041F FF                MOV     R7,A
0420 EE                MOV     A,R6
0421 3400              ADDC    A,#00H
0423 FE                MOV     R6,A
0424 900000      R     MOV     DPTR,#pEP
0427 EE                MOV     A,R6
0428 F0                MOVX    @DPTR,A
0429 A3                INC     DPTR
042A EF                MOV     A,R7
042B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 671
042C 900000      R     MOV     DPTR,#cur_ep
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 55  

042F E0                MOVX    A,@DPTR
0430 04                INC     A
0431 F0                MOVX    @DPTR,A
0432 020000      R     LJMP    ?C0075
                                           ; SOURCE LINE # 672
0435         ?C0074:
0435 900000      R     MOV     DPTR,#i
0438 E0                MOVX    A,@DPTR
0439 04                INC     A
043A F0                MOVX    @DPTR,A
043B 020000      R     LJMP    ?C0072
043E         ?C0073:
                                           ; SOURCE LINE # 680
043E 900000      R     MOV     DPTR,#pTmp
0441 E0                MOVX    A,@DPTR
0442 FE                MOV     R6,A
0443 A3                INC     DPTR
0444 E0                MOVX    A,@DPTR
0445 FF                MOV     R7,A
0446 8F82              MOV     DPL,R7
0448 8E83              MOV     DPH,R6
044A A3                INC     DPTR
044B 120000      E     LCALL   ?C?PLDCODE
044E AE02              MOV     R6,AR2
0450 AF01              MOV     R7,AR1
0452 900000      R     MOV     DPTR,#pEP
0455 EE                MOV     A,R6
0456 F0                MOVX    @DPTR,A
0457 A3                INC     DPTR
0458 EF                MOV     A,R7
0459 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 681
045A 900000      R     MOV     DPTR,#i
045D E4                CLR     A
045E F0                MOVX    @DPTR,A
045F         ?C0091:
045F 900000      R     MOV     DPTR,#ep
0462 E0                MOVX    A,@DPTR
0463 FF                MOV     R7,A
0464 900000      R     MOV     DPTR,#i
0467 E0                MOVX    A,@DPTR
0468 FE                MOV     R6,A
0469 EE                MOV     A,R6
046A C3                CLR     C
046B 9F                SUBB    A,R7
046C 5053              JNC     ?C0092
                                           ; SOURCE LINE # 682
                                           ; SOURCE LINE # 684
046E 900000      R     MOV     DPTR,#pEP
0471 E0                MOVX    A,@DPTR
0472 FE                MOV     R6,A
0473 A3                INC     DPTR
0474 E0                MOVX    A,@DPTR
0475 FF                MOV     R7,A
0476 8F82              MOV     DPL,R7
0478 8E83              MOV     DPH,R6
047A E4                CLR     A
047B 93                MOVC    A,@A+DPTR
047C FF                MOV     R7,A
047D 900000      R     MOV     DPTR,#pEP
0480 E0                MOVX    A,@DPTR
0481 FC                MOV     R4,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 56  

0482 A3                INC     DPTR
0483 E0                MOVX    A,@DPTR
0484 FD                MOV     R5,A
0485 8D82              MOV     DPL,R5
0487 8C83              MOV     DPH,R4
0489 7402              MOV     A,#02H
048B 93                MOVC    A,@A+DPTR
048C FE                MOV     R6,A
048D EE                MOV     A,R6
048E 547F              ANL     A,#07FH
0490 FE                MOV     R6,A
0491 EE                MOV     A,R6
0492 75F00B            MOV     B,#0BH
0495 A4                MUL     AB
0496 2400        E     ADD     A,#LOW USBUART_1_EP+0AH
0498 F582              MOV     DPL,A
049A E4                CLR     A
049B 3400        E     ADDC    A,#HIGH USBUART_1_EP+0AH
049D F583              MOV     DPH,A
049F EF                MOV     A,R7
04A0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 685
04A1 900000      R     MOV     DPTR,#pEP
04A4 E0                MOVX    A,@DPTR
04A5 FE                MOV     R6,A
04A6 A3                INC     DPTR
04A7 E0                MOVX    A,@DPTR
04A8 FF                MOV     R7,A
04A9 EF                MOV     A,R7
04AA 2407              ADD     A,#07H
04AC FF                MOV     R7,A
04AD EE                MOV     A,R6
04AE 3400              ADDC    A,#00H
04B0 FE                MOV     R6,A
04B1 900000      R     MOV     DPTR,#pEP
04B4 EE                MOV     A,R6
04B5 F0                MOVX    @DPTR,A
04B6 A3                INC     DPTR
04B7 EF                MOV     A,R7
04B8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 686
04B9 900000      R     MOV     DPTR,#i
04BC E0                MOVX    A,@DPTR
04BD 04                INC     A
04BE F0                MOVX    @DPTR,A
04BF 809E              SJMP    ?C0091
04C1         ?C0092:
                                           ; SOURCE LINE # 688
04C1 120000      R     LCALL   USBUART_1_GetInterfaceClassTablePtr
04C4 900000      E     MOV     DPTR,#USBUART_1_interfaceClass
04C7 EE                MOV     A,R6
04C8 F0                MOVX    @DPTR,A
04C9 A3                INC     DPTR
04CA EF                MOV     A,R7
04CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 692
04CC 900000      R     MOV     DPTR,#ep
04CF 7401              MOV     A,#01H
04D1 F0                MOVX    @DPTR,A
04D2         ?C0094:
04D2 900000      R     MOV     DPTR,#ep
04D5 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 57  

04D6 FF                MOV     R7,A
04D7 EF                MOV     A,R7
04D8 C3                CLR     C
04D9 9409              SUBB    A,#09H
04DB 5049              JNC     ?C0095
                                           ; SOURCE LINE # 693
                                           ; SOURCE LINE # 694
04DD 900000      R     MOV     DPTR,#buffCount
04E0 E0                MOVX    A,@DPTR
04E1 FE                MOV     R6,A
04E2 A3                INC     DPTR
04E3 E0                MOVX    A,@DPTR
04E4 FF                MOV     R7,A
04E5 900000      R     MOV     DPTR,#ep
04E8 E0                MOVX    A,@DPTR
04E9 FD                MOV     R5,A
04EA ED                MOV     A,R5
04EB 75F00B            MOV     B,#0BH
04EE A4                MUL     AB
04EF 2400        E     ADD     A,#LOW USBUART_1_EP+06H
04F1 F582              MOV     DPL,A
04F3 E4                CLR     A
04F4 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
04F6 F583              MOV     DPH,A
04F8 EE                MOV     A,R6
04F9 F0                MOVX    @DPTR,A
04FA A3                INC     DPTR
04FB EF                MOV     A,R7
04FC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 695
04FD 900000      R     MOV     DPTR,#ep
0500 E0                MOVX    A,@DPTR
0501 FF                MOV     R7,A
0502 EF                MOV     A,R7
0503 75F00B            MOV     B,#0BH
0506 A4                MUL     AB
0507 2400        E     ADD     A,#LOW USBUART_1_EP+08H
0509 F582              MOV     DPL,A
050B E4                CLR     A
050C 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
050E F583              MOV     DPH,A
0510 E0                MOVX    A,@DPTR
0511 FE                MOV     R6,A
0512 A3                INC     DPTR
0513 E0                MOVX    A,@DPTR
0514 FF                MOV     R7,A
0515 900000      R     MOV     DPTR,#buffCount
0518 EE                MOV     A,R6
0519 8FF0              MOV     B,R7
051B 120000      E     LCALL   ?C?IILDX
                                           ; SOURCE LINE # 696
051E 900000      R     MOV     DPTR,#ep
0521 E0                MOVX    A,@DPTR
0522 04                INC     A
0523 F0                MOVX    @DPTR,A
0524 80AC              SJMP    ?C0094
0526         ?C0095:
                                           ; SOURCE LINE # 700
0526 120000      R     LCALL   USBUART_1_ConfigReg
                                           ; SOURCE LINE # 701
                                           ; SOURCE LINE # 702
0529         ?C0097:
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 58  

0529 22                RET     
             ; FUNCTION _USBUART_1_Config (END)

             ; FUNCTION USBUART_1_ConfigAltChanged (BEGIN)
                                           ; SOURCE LINE # 723
                                           ; SOURCE LINE # 724
                                           ; SOURCE LINE # 736
0000 900000      E     MOV     DPTR,#USBUART_1_configuration
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 D3                SETB    C
0007 9400              SUBB    A,#00H
0009 5003              JNC     $ + 5H
000B 020000      R     LJMP    ?C0109
                                           ; SOURCE LINE # 737
                                           ; SOURCE LINE # 738
000E 900000      E     MOV     DPTR,#USBUART_1_configuration
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 EF                MOV     A,R7
0014 14                DEC     A
0015 FF                MOV     R7,A
0016 120000      R     LCALL   _USBUART_1_GetConfigTablePtr
0019 900000      R     MOV     DPTR,#pTmp
001C EE                MOV     A,R6
001D F0                MOVX    @DPTR,A
001E A3                INC     DPTR
001F EF                MOV     A,R7
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 739
0021 900000      R     MOV     DPTR,#pTmp
0024 E0                MOVX    A,@DPTR
0025 FE                MOV     R6,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 EF                MOV     A,R7
002A 2404              ADD     A,#04H
002C FF                MOV     R7,A
002D EE                MOV     A,R6
002E 3400              ADDC    A,#00H
0030 FE                MOV     R6,A
0031 900000      R     MOV     DPTR,#pTmp
0034 EE                MOV     A,R6
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 EF                MOV     A,R7
0038 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 740
0039 900000      R     MOV     DPTR,#pTmp
003C E0                MOVX    A,@DPTR
003D FE                MOV     R6,A
003E A3                INC     DPTR
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 8F82              MOV     DPL,R7
0043 8E83              MOV     DPH,R6
0045 E4                CLR     A
0046 93                MOVC    A,@A+DPTR
0047 FF                MOV     R7,A
0048 900000      R     MOV     DPTR,#ep
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 59  

004B EF                MOV     A,R7
004C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 745
004D 900000      R     MOV     DPTR,#pTmp
0050 E0                MOVX    A,@DPTR
0051 FE                MOV     R6,A
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 8F82              MOV     DPL,R7
0057 8E83              MOV     DPH,R6
0059 A3                INC     DPTR
005A 120000      E     LCALL   ?C?PLDCODE
005D AE02              MOV     R6,AR2
005F AF01              MOV     R7,AR1
0061 900000      R     MOV     DPTR,#pEP
0064 EE                MOV     A,R6
0065 F0                MOVX    @DPTR,A
0066 A3                INC     DPTR
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 746
0069 900000      R     MOV     DPTR,#i
006C E4                CLR     A
006D F0                MOVX    @DPTR,A
006E         ?C0099:
006E 900000      R     MOV     DPTR,#ep
0071 E0                MOVX    A,@DPTR
0072 FF                MOV     R7,A
0073 900000      R     MOV     DPTR,#i
0076 E0                MOVX    A,@DPTR
0077 FE                MOV     R6,A
0078 EE                MOV     A,R6
0079 C3                CLR     C
007A 9F                SUBB    A,R7
007B 4003              JC      $ + 5H
007D 020000      R     LJMP    ?C0109
                                           ; SOURCE LINE # 747
                                           ; SOURCE LINE # 752
0080 900000      R     MOV     DPTR,#pEP
0083 E0                MOVX    A,@DPTR
0084 FE                MOV     R6,A
0085 A3                INC     DPTR
0086 E0                MOVX    A,@DPTR
0087 FF                MOV     R7,A
0088 8F82              MOV     DPL,R7
008A 8E83              MOV     DPH,R6
008C E4                CLR     A
008D 93                MOVC    A,@A+DPTR
008E FF                MOV     R7,A
008F 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting_last
0091 2F                ADD     A,R7
0092 F582              MOV     DPL,A
0094 E4                CLR     A
0095 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting_last
0097 F583              MOV     DPH,A
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B 900000      R     MOV     DPTR,#pEP
009E E0                MOVX    A,@DPTR
009F FC                MOV     R4,A
00A0 A3                INC     DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 60  

00A1 E0                MOVX    A,@DPTR
00A2 FD                MOV     R5,A
00A3 8D82              MOV     DPL,R5
00A5 8C83              MOV     DPH,R4
00A7 E4                CLR     A
00A8 93                MOVC    A,@A+DPTR
00A9 FE                MOV     R6,A
00AA 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
00AC 2E                ADD     A,R6
00AD F582              MOV     DPL,A
00AF E4                CLR     A
00B0 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
00B2 F583              MOV     DPH,A
00B4 E0                MOVX    A,@DPTR
00B5 FE                MOV     R6,A
00B6 EE                MOV     A,R6
00B7 6F                XRL     A,R7
00B8 7003              JNZ     $ + 5H
00BA 020000      R     LJMP    ?C0102
00BD 900000      R     MOV     DPTR,#pEP
00C0 E0                MOVX    A,@DPTR
00C1 FE                MOV     R6,A
00C2 A3                INC     DPTR
00C3 E0                MOVX    A,@DPTR
00C4 FF                MOV     R7,A
00C5 8F82              MOV     DPL,R7
00C7 8E83              MOV     DPH,R6
00C9 E4                CLR     A
00CA 93                MOVC    A,@A+DPTR
00CB FF                MOV     R7,A
00CC 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
00CE 2F                ADD     A,R7
00CF F582              MOV     DPL,A
00D1 E4                CLR     A
00D2 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
00D4 F583              MOV     DPH,A
00D6 E0                MOVX    A,@DPTR
00D7 FF                MOV     R7,A
00D8 900000      R     MOV     DPTR,#pEP
00DB E0                MOVX    A,@DPTR
00DC FC                MOV     R4,A
00DD A3                INC     DPTR
00DE E0                MOVX    A,@DPTR
00DF FD                MOV     R5,A
00E0 8D82              MOV     DPL,R5
00E2 8C83              MOV     DPH,R4
00E4 7401              MOV     A,#01H
00E6 93                MOVC    A,@A+DPTR
00E7 FE                MOV     R6,A
00E8 EF                MOV     A,R7
00E9 6E                XRL     A,R6
00EA 6003              JZ      $ + 5H
00EC 020000      R     LJMP    ?C0102
00EF 900000      R     MOV     DPTR,#pEP
00F2 E0                MOVX    A,@DPTR
00F3 FE                MOV     R6,A
00F4 A3                INC     DPTR
00F5 E0                MOVX    A,@DPTR
00F6 FF                MOV     R7,A
00F7 8F82              MOV     DPL,R7
00F9 8E83              MOV     DPH,R6
00FB E4                CLR     A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 61  

00FC 93                MOVC    A,@A+DPTR
00FD FF                MOV     R7,A
00FE 906004            MOV     DPTR,#06004H
0101 E0                MOVX    A,@DPTR
0102 FE                MOV     R6,A
0103 EF                MOV     A,R7
0104 6E                XRL     A,R6
0105 6003              JZ      $ + 5H
0107 020000      R     LJMP    ?C0102
                                           ; SOURCE LINE # 753
                                           ; SOURCE LINE # 754
010A 900000      R     MOV     DPTR,#pEP
010D E0                MOVX    A,@DPTR
010E FE                MOV     R6,A
010F A3                INC     DPTR
0110 E0                MOVX    A,@DPTR
0111 FF                MOV     R7,A
0112 8F82              MOV     DPL,R7
0114 8E83              MOV     DPH,R6
0116 7402              MOV     A,#02H
0118 93                MOVC    A,@A+DPTR
0119 FF                MOV     R7,A
011A EF                MOV     A,R7
011B 547F              ANL     A,#07FH
011D FF                MOV     R7,A
011E 900000      R     MOV     DPTR,#cur_ep
0121 EF                MOV     A,R7
0122 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 755
0123 900000      R     MOV     DPTR,#cur_ep
0126 E0                MOVX    A,@DPTR
0127 FF                MOV     R7,A
0128 7E00              MOV     R6,#00H
012A EF                MOV     A,R7
012B 24FF              ADD     A,#0FFH
012D FF                MOV     R7,A
012E EE                MOV     A,R6
012F 34FF              ADDC    A,#0FFH
0131 FE                MOV     R6,A
0132 EF                MOV     A,R7
0133 C4                SWAP    A
0134 F8                MOV     R0,A
0135 540F              ANL     A,#0FH
0137 C8                XCH     A,R0
0138 68                XRL     A,R0
0139 FF                MOV     R7,A
013A EE                MOV     A,R6
013B C4                SWAP    A
013C 54F0              ANL     A,#0F0H
013E 48                ORL     A,R0
013F FE                MOV     R6,A
0140 900000      R     MOV     DPTR,#ri
0143 EF                MOV     A,R7
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 756
0145 900000      R     MOV     DPTR,#pEP
0148 E0                MOVX    A,@DPTR
0149 FE                MOV     R6,A
014A A3                INC     DPTR
014B E0                MOVX    A,@DPTR
014C FF                MOV     R7,A
014D 8F82              MOV     DPL,R7
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 62  

014F 8E83              MOV     DPH,R6
0151 7403              MOV     A,#03H
0153 93                MOVC    A,@A+DPTR
0154 FF                MOV     R7,A
0155 EF                MOV     A,R7
0156 5403              ANL     A,#03H
0158 FF                MOV     R7,A
0159 900000      R     MOV     DPTR,#ep_type
015C EF                MOV     A,R7
015D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 757
015E 900000      R     MOV     DPTR,#pEP
0161 E0                MOVX    A,@DPTR
0162 FE                MOV     R6,A
0163 A3                INC     DPTR
0164 E0                MOVX    A,@DPTR
0165 FF                MOV     R7,A
0166 8F82              MOV     DPL,R7
0168 8E83              MOV     DPH,R6
016A 7402              MOV     A,#02H
016C 93                MOVC    A,@A+DPTR
016D FF                MOV     R7,A
016E EF                MOV     A,R7
016F 5480              ANL     A,#080H
0171 FF                MOV     R7,A
0172 7E00              MOV     R6,#00H
0174 EF                MOV     A,R7
0175 4E                ORL     A,R6
0176 603C              JZ      ?C0103
                                           ; SOURCE LINE # 758
                                           ; SOURCE LINE # 760
0178 900000      R     MOV     DPTR,#cur_ep
017B E0                MOVX    A,@DPTR
017C FF                MOV     R7,A
017D EF                MOV     A,R7
017E 75F00B            MOV     B,#0BH
0181 A4                MUL     AB
0182 2400        E     ADD     A,#LOW USBUART_1_EP+01H
0184 F582              MOV     DPL,A
0186 E4                CLR     A
0187 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
0189 F583              MOV     DPH,A
018B 7401              MOV     A,#01H
018D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 761
018E 900000      R     MOV     DPTR,#ep_type
0191 E0                MOVX    A,@DPTR
0192 FF                MOV     R7,A
0193 EF                MOV     A,R7
0194 B40104            CJNE    A,#01H,?C0104
0197 7F07              MOV     R7,#07H
0199 8002              SJMP    ?C0105
019B         ?C0104:
019B 7F0D              MOV     R7,#0DH
019D         ?C0105:
019D 900000      R     MOV     DPTR,#cur_ep
01A0 E0                MOVX    A,@DPTR
01A1 FE                MOV     R6,A
01A2 EE                MOV     A,R6
01A3 75F00B            MOV     B,#0BH
01A6 A4                MUL     AB
01A7 2400        E     ADD     A,#LOW USBUART_1_EP+05H
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 63  

01A9 F582              MOV     DPL,A
01AB E4                CLR     A
01AC 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
01AE F583              MOV     DPH,A
01B0 EF                MOV     A,R7
01B1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 763
01B2 8039              SJMP    ?C0106
01B4         ?C0103:
                                           ; SOURCE LINE # 765
                                           ; SOURCE LINE # 767
01B4 900000      R     MOV     DPTR,#cur_ep
01B7 E0                MOVX    A,@DPTR
01B8 FF                MOV     R7,A
01B9 EF                MOV     A,R7
01BA 75F00B            MOV     B,#0BH
01BD A4                MUL     AB
01BE 2400        E     ADD     A,#LOW USBUART_1_EP+01H
01C0 F582              MOV     DPL,A
01C2 E4                CLR     A
01C3 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
01C5 F583              MOV     DPH,A
01C7 E4                CLR     A
01C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 768
01C9 900000      R     MOV     DPTR,#ep_type
01CC E0                MOVX    A,@DPTR
01CD FF                MOV     R7,A
01CE EF                MOV     A,R7
01CF B40104            CJNE    A,#01H,?C0107
01D2 7F05              MOV     R7,#05H
01D4 8002              SJMP    ?C0108
01D6         ?C0107:
01D6 7F09              MOV     R7,#09H
01D8         ?C0108:
01D8 900000      R     MOV     DPTR,#cur_ep
01DB E0                MOVX    A,@DPTR
01DC FE                MOV     R6,A
01DD EE                MOV     A,R6
01DE 75F00B            MOV     B,#0BH
01E1 A4                MUL     AB
01E2 2400        E     ADD     A,#LOW USBUART_1_EP+05H
01E4 F582              MOV     DPL,A
01E6 E4                CLR     A
01E7 3400        E     ADDC    A,#HIGH USBUART_1_EP+05H
01E9 F583              MOV     DPH,A
01EB EF                MOV     A,R7
01EC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 770
01ED         ?C0106:
                                           ; SOURCE LINE # 772
01ED 900000      R     MOV     DPTR,#ri
01F0 E0                MOVX    A,@DPTR
01F1 FF                MOV     R7,A
01F2 7E00              MOV     R6,#00H
01F4 EF                MOV     A,R7
01F5 240E              ADD     A,#0EH
01F7 FF                MOV     R7,A
01F8 EE                MOV     A,R6
01F9 3460              ADDC    A,#060H
01FB FE                MOV     R6,A
01FC 8F82              MOV     DPL,R7
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 64  

01FE 8E83              MOV     DPH,R6
0200 7401              MOV     A,#01H
0202 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 773
0203 900000      R     MOV     DPTR,#pEP
0206 E0                MOVX    A,@DPTR
0207 FE                MOV     R6,A
0208 A3                INC     DPTR
0209 E0                MOVX    A,@DPTR
020A FF                MOV     R7,A
020B 8F82              MOV     DPL,R7
020D 8E83              MOV     DPH,R6
020F 7404              MOV     A,#04H
0211 93                MOVC    A,@A+DPTR
0212 FE                MOV     R6,A
0213 7405              MOV     A,#05H
0215 93                MOVC    A,@A+DPTR
0216 FF                MOV     R7,A
0217 900000      R     MOV     DPTR,#cur_ep
021A E0                MOVX    A,@DPTR
021B FD                MOV     R5,A
021C ED                MOV     A,R5
021D 75F00B            MOV     B,#0BH
0220 A4                MUL     AB
0221 2400        E     ADD     A,#LOW USBUART_1_EP+08H
0223 F582              MOV     DPL,A
0225 E4                CLR     A
0226 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
0228 F583              MOV     DPH,A
022A EE                MOV     A,R6
022B F0                MOVX    @DPTR,A
022C A3                INC     DPTR
022D EF                MOV     A,R7
022E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 774
022F 900000      R     MOV     DPTR,#pEP
0232 E0                MOVX    A,@DPTR
0233 FE                MOV     R6,A
0234 A3                INC     DPTR
0235 E0                MOVX    A,@DPTR
0236 FF                MOV     R7,A
0237 8F82              MOV     DPL,R7
0239 8E83              MOV     DPH,R6
023B 7402              MOV     A,#02H
023D 93                MOVC    A,@A+DPTR
023E FF                MOV     R7,A
023F 900000      R     MOV     DPTR,#cur_ep
0242 E0                MOVX    A,@DPTR
0243 FE                MOV     R6,A
0244 EE                MOV     A,R6
0245 75F00B            MOV     B,#0BH
0248 A4                MUL     AB
0249 2400        E     ADD     A,#LOW USBUART_1_EP+04H
024B F582              MOV     DPL,A
024D E4                CLR     A
024E 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
0250 F583              MOV     DPH,A
0252 EF                MOV     A,R7
0253 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 775
0254 900000      R     MOV     DPTR,#pEP
0257 E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 65  

0258 FE                MOV     R6,A
0259 A3                INC     DPTR
025A E0                MOVX    A,@DPTR
025B FF                MOV     R7,A
025C 8F82              MOV     DPL,R7
025E 8E83              MOV     DPH,R6
0260 7403              MOV     A,#03H
0262 93                MOVC    A,@A+DPTR
0263 FF                MOV     R7,A
0264 900000      R     MOV     DPTR,#cur_ep
0267 E0                MOVX    A,@DPTR
0268 FE                MOV     R6,A
0269 EE                MOV     A,R6
026A 75F00B            MOV     B,#0BH
026D A4                MUL     AB
026E 2400        E     ADD     A,#LOW USBUART_1_EP
0270 F582              MOV     DPL,A
0272 E4                CLR     A
0273 3400        E     ADDC    A,#HIGH USBUART_1_EP
0275 F583              MOV     DPH,A
0277 EF                MOV     A,R7
0278 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 778
0279 900000      R     MOV     DPTR,#cur_ep
027C E0                MOVX    A,@DPTR
027D FF                MOV     R7,A
027E EF                MOV     A,R7
027F 75F00B            MOV     B,#0BH
0282 A4                MUL     AB
0283 2400        E     ADD     A,#LOW USBUART_1_EP+03H
0285 F582              MOV     DPL,A
0287 E4                CLR     A
0288 3400        E     ADDC    A,#HIGH USBUART_1_EP+03H
028A F583              MOV     DPH,A
028C E4                CLR     A
028D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 815
028E 900000      R     MOV     DPTR,#cur_ep
0291 E0                MOVX    A,@DPTR
0292 FF                MOV     R7,A
0293 EF                MOV     A,R7
0294 75F00B            MOV     B,#0BH
0297 A4                MUL     AB
0298 2400        E     ADD     A,#LOW USBUART_1_EP+08H
029A F582              MOV     DPL,A
029C E4                CLR     A
029D 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
029F F583              MOV     DPH,A
02A1 E0                MOVX    A,@DPTR
02A2 FE                MOV     R6,A
02A3 A3                INC     DPTR
02A4 E0                MOVX    A,@DPTR
02A5 FF                MOV     R7,A
02A6 EE                MOV     A,R6
02A7 FF                MOV     R7,A
02A8 7E00              MOV     R6,#00H
02AA 900000      R     MOV     DPTR,#ri
02AD E0                MOVX    A,@DPTR
02AE FE                MOV     R6,A
02AF EE                MOV     A,R6
02B0 FD                MOV     R5,A
02B1 7C00              MOV     R4,#00H
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 66  

02B3 ED                MOV     A,R5
02B4 240C              ADD     A,#0CH
02B6 FD                MOV     R5,A
02B7 EC                MOV     A,R4
02B8 3460              ADDC    A,#060H
02BA FC                MOV     R4,A
02BB 8D82              MOV     DPL,R5
02BD 8C83              MOV     DPH,R4
02BF EF                MOV     A,R7
02C0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 817
02C1 900000      R     MOV     DPTR,#cur_ep
02C4 E0                MOVX    A,@DPTR
02C5 FF                MOV     R7,A
02C6 EF                MOV     A,R7
02C7 75F00B            MOV     B,#0BH
02CA A4                MUL     AB
02CB 2400        E     ADD     A,#LOW USBUART_1_EP+08H
02CD F582              MOV     DPL,A
02CF E4                CLR     A
02D0 3400        E     ADDC    A,#HIGH USBUART_1_EP+08H
02D2 F583              MOV     DPH,A
02D4 E0                MOVX    A,@DPTR
02D5 FE                MOV     R6,A
02D6 A3                INC     DPTR
02D7 E0                MOVX    A,@DPTR
02D8 FF                MOV     R7,A
02D9 EF                MOV     A,R7
02DA 54FF              ANL     A,#0FFH
02DC FF                MOV     R7,A
02DD 900000      R     MOV     DPTR,#ri
02E0 E0                MOVX    A,@DPTR
02E1 FE                MOV     R6,A
02E2 EE                MOV     A,R6
02E3 FD                MOV     R5,A
02E4 7C00              MOV     R4,#00H
02E6 ED                MOV     A,R5
02E7 240D              ADD     A,#0DH
02E9 FD                MOV     R5,A
02EA EC                MOV     A,R4
02EB 3460              ADDC    A,#060H
02ED FC                MOV     R4,A
02EE 8D82              MOV     DPL,R5
02F0 8C83              MOV     DPH,R4
02F2 EF                MOV     A,R7
02F3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 819
02F4 900000      R     MOV     DPTR,#cur_ep
02F7 E0                MOVX    A,@DPTR
02F8 FF                MOV     R7,A
02F9 EF                MOV     A,R7
02FA 75F00B            MOV     B,#0BH
02FD A4                MUL     AB
02FE 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0300 F582              MOV     DPL,A
0302 E4                CLR     A
0303 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
0305 F583              MOV     DPH,A
0307 E0                MOVX    A,@DPTR
0308 FE                MOV     R6,A
0309 A3                INC     DPTR
030A E0                MOVX    A,@DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 67  

030B FF                MOV     R7,A
030C EF                MOV     A,R7
030D 54FF              ANL     A,#0FFH
030F FF                MOV     R7,A
0310 900000      R     MOV     DPTR,#ri
0313 E0                MOVX    A,@DPTR
0314 FE                MOV     R6,A
0315 EE                MOV     A,R6
0316 FD                MOV     R5,A
0317 7C00              MOV     R4,#00H
0319 ED                MOV     A,R5
031A 2486              ADD     A,#086H
031C FD                MOV     R5,A
031D EC                MOV     A,R4
031E 3460              ADDC    A,#060H
0320 FC                MOV     R4,A
0321 8D82              MOV     DPL,R5
0323 8C83              MOV     DPH,R4
0325 EF                MOV     A,R7
0326 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 821
0327 900000      R     MOV     DPTR,#cur_ep
032A E0                MOVX    A,@DPTR
032B FF                MOV     R7,A
032C EF                MOV     A,R7
032D 75F00B            MOV     B,#0BH
0330 A4                MUL     AB
0331 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0333 F582              MOV     DPL,A
0335 E4                CLR     A
0336 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
0338 F583              MOV     DPH,A
033A E0                MOVX    A,@DPTR
033B FE                MOV     R6,A
033C A3                INC     DPTR
033D E0                MOVX    A,@DPTR
033E FF                MOV     R7,A
033F EE                MOV     A,R6
0340 FF                MOV     R7,A
0341 7E00              MOV     R6,#00H
0343 900000      R     MOV     DPTR,#ri
0346 E0                MOVX    A,@DPTR
0347 FE                MOV     R6,A
0348 EE                MOV     A,R6
0349 FD                MOV     R5,A
034A 7C00              MOV     R4,#00H
034C ED                MOV     A,R5
034D 2487              ADD     A,#087H
034F FD                MOV     R5,A
0350 EC                MOV     A,R4
0351 3460              ADDC    A,#060H
0353 FC                MOV     R4,A
0354 8D82              MOV     DPL,R5
0356 8C83              MOV     DPH,R4
0358 EF                MOV     A,R7
0359 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 823
035A 900000      R     MOV     DPTR,#cur_ep
035D E0                MOVX    A,@DPTR
035E FF                MOV     R7,A
035F EF                MOV     A,R7
0360 75F00B            MOV     B,#0BH
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 68  

0363 A4                MUL     AB
0364 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0366 F582              MOV     DPL,A
0368 E4                CLR     A
0369 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
036B F583              MOV     DPH,A
036D E0                MOVX    A,@DPTR
036E FE                MOV     R6,A
036F A3                INC     DPTR
0370 E0                MOVX    A,@DPTR
0371 FF                MOV     R7,A
0372 EF                MOV     A,R7
0373 54FF              ANL     A,#0FFH
0375 FF                MOV     R7,A
0376 900000      R     MOV     DPTR,#ri
0379 E0                MOVX    A,@DPTR
037A FE                MOV     R6,A
037B EE                MOV     A,R6
037C FD                MOV     R5,A
037D 7C00              MOV     R4,#00H
037F ED                MOV     A,R5
0380 2484              ADD     A,#084H
0382 FD                MOV     R5,A
0383 EC                MOV     A,R4
0384 3460              ADDC    A,#060H
0386 FC                MOV     R4,A
0387 8D82              MOV     DPL,R5
0389 8C83              MOV     DPH,R4
038B EF                MOV     A,R7
038C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 825
038D 900000      R     MOV     DPTR,#cur_ep
0390 E0                MOVX    A,@DPTR
0391 FF                MOV     R7,A
0392 EF                MOV     A,R7
0393 75F00B            MOV     B,#0BH
0396 A4                MUL     AB
0397 2400        E     ADD     A,#LOW USBUART_1_EP+06H
0399 F582              MOV     DPL,A
039B E4                CLR     A
039C 3400        E     ADDC    A,#HIGH USBUART_1_EP+06H
039E F583              MOV     DPH,A
03A0 E0                MOVX    A,@DPTR
03A1 FE                MOV     R6,A
03A2 A3                INC     DPTR
03A3 E0                MOVX    A,@DPTR
03A4 FF                MOV     R7,A
03A5 EE                MOV     A,R6
03A6 FF                MOV     R7,A
03A7 7E00              MOV     R6,#00H
03A9 900000      R     MOV     DPTR,#ri
03AC E0                MOVX    A,@DPTR
03AD FE                MOV     R6,A
03AE EE                MOV     A,R6
03AF FD                MOV     R5,A
03B0 7C00              MOV     R4,#00H
03B2 ED                MOV     A,R5
03B3 2485              ADD     A,#085H
03B5 FD                MOV     R5,A
03B6 EC                MOV     A,R4
03B7 3460              ADDC    A,#060H
03B9 FC                MOV     R4,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 69  

03BA 8D82              MOV     DPL,R5
03BC 8C83              MOV     DPH,R4
03BE EF                MOV     A,R7
03BF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 827
03C0         ?C0102:
                                           ; SOURCE LINE # 829
03C0 900000      R     MOV     DPTR,#pEP
03C3 E0                MOVX    A,@DPTR
03C4 FE                MOV     R6,A
03C5 A3                INC     DPTR
03C6 E0                MOVX    A,@DPTR
03C7 FF                MOV     R7,A
03C8 EF                MOV     A,R7
03C9 2407              ADD     A,#07H
03CB FF                MOV     R7,A
03CC EE                MOV     A,R6
03CD 3400              ADDC    A,#00H
03CF FE                MOV     R6,A
03D0 900000      R     MOV     DPTR,#pEP
03D3 EE                MOV     A,R6
03D4 F0                MOVX    @DPTR,A
03D5 A3                INC     DPTR
03D6 EF                MOV     A,R7
03D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 830
03D8 900000      R     MOV     DPTR,#i
03DB E0                MOVX    A,@DPTR
03DC 04                INC     A
03DD F0                MOVX    @DPTR,A
03DE 020000      R     LJMP    ?C0099
                                           ; SOURCE LINE # 831
                                           ; SOURCE LINE # 832
03E1         ?C0109:
03E1 22                RET     
             ; FUNCTION USBUART_1_ConfigAltChanged (END)

             ; FUNCTION _USBUART_1_GetConfigTablePtr (BEGIN)
                                           ; SOURCE LINE # 849
0000 900000      R     MOV     DPTR,#c
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 851
                                           ; SOURCE LINE # 855
0005 900000      E     MOV     DPTR,#USBUART_1_device
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 25E0              ADD     A,ACC
000D 25E0              ADD     A,ACC
000F 2400        E     ADD     A,#LOW USBUART_1_TABLE+01H
0011 F582              MOV     DPL,A
0013 E4                CLR     A
0014 3400        E     ADDC    A,#HIGH USBUART_1_TABLE+01H
0016 F583              MOV     DPH,A
0018 120000      E     LCALL   ?C?PLDCODE
001B AE02              MOV     R6,AR2
001D AF01              MOV     R7,AR1
001F 900000      R     MOV     DPTR,#pTmp
0022 EE                MOV     A,R6
0023 F0                MOVX    @DPTR,A
0024 A3                INC     DPTR
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 70  

0025 EF                MOV     A,R7
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 860
0027 900000      R     MOV     DPTR,#pTmp
002A E0                MOVX    A,@DPTR
002B FE                MOV     R6,A
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E FF                MOV     R7,A
002F 8F82              MOV     DPL,R7
0031 8E83              MOV     DPH,R6
0033 C083              PUSH    DPH
0035 C082              PUSH    DPL
0037 900000      R     MOV     DPTR,#c
003A E0                MOVX    A,@DPTR
003B FF                MOV     R7,A
003C D082              POP     DPL
003E D083              POP     DPH
0040 75F004            MOV     B,#04H
0043 EF                MOV     A,R7
0044 120000      E     LCALL   ?C?OFFXADD
0047 E582              MOV     A,DPL
0049 2405              ADD     A,#05H
004B F582              MOV     DPL,A
004D E583              MOV     A,DPH
004F 3400              ADDC    A,#00H
0051 F583              MOV     DPH,A
0053 120000      E     LCALL   ?C?PLDCODE
0056 AE02              MOV     R6,AR2
0058 AF01              MOV     R7,AR1
                                           ; SOURCE LINE # 861
005A         ?C0110:
005A 22                RET     
             ; FUNCTION _USBUART_1_GetConfigTablePtr (END)

             ; FUNCTION USBUART_1_GetDeviceTablePtr (BEGIN)
                                           ; SOURCE LINE # 878
                                           ; SOURCE LINE # 880
                                           ; SOURCE LINE # 882
0000 900000      E     MOV     DPTR,#USBUART_1_device
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 25E0              ADD     A,ACC
0008 25E0              ADD     A,ACC
000A 2400        E     ADD     A,#LOW USBUART_1_TABLE+01H
000C F582              MOV     DPL,A
000E E4                CLR     A
000F 3400        E     ADDC    A,#HIGH USBUART_1_TABLE+01H
0011 F583              MOV     DPH,A
0013 120000      E     LCALL   ?C?PLDCODE
0016 AE02              MOV     R6,AR2
0018 AF01              MOV     R7,AR1
                                           ; SOURCE LINE # 883
001A         ?C0111:
001A 22                RET     
             ; FUNCTION USBUART_1_GetDeviceTablePtr (END)

             ; FUNCTION USBUART_1_GetInterfaceClassTablePtr (BEGIN)
                                           ; SOURCE LINE # 901
                                           ; SOURCE LINE # 903
                                           ; SOURCE LINE # 907
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 71  

0000 900000      E     MOV     DPTR,#USBUART_1_configuration
0003 E0                MOVX    A,@DPTR
0004 FF                MOV     R7,A
0005 EF                MOV     A,R7
0006 14                DEC     A
0007 FF                MOV     R7,A
0008 120000      R     LCALL   _USBUART_1_GetConfigTablePtr
000B 900000      R     MOV     DPTR,#pTmp
000E EE                MOV     A,R6
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 908
0013 900000      R     MOV     DPTR,#pTmp
0016 E0                MOVX    A,@DPTR
0017 FE                MOV     R6,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A FF                MOV     R7,A
001B 8F82              MOV     DPL,R7
001D 8E83              MOV     DPH,R6
001F A3                INC     DPTR
0020 120000      E     LCALL   ?C?PLDCODE
0023 E9                MOV     A,R1
0024 2404              ADD     A,#04H
0026 F9                MOV     R1,A
0027 EA                MOV     A,R2
0028 3400              ADDC    A,#00H
002A FA                MOV     R2,A
002B 120000      E     LCALL   ?C?CLDPTR
002E FF                MOV     R7,A
002F 900000      R     MOV     DPTR,#currentInterfacesNum
0032 EF                MOV     A,R7
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 911
0034 900000      R     MOV     DPTR,#currentInterfacesNum
0037 E0                MOVX    A,@DPTR
0038 FF                MOV     R7,A
0039 7E00              MOV     R6,#00H
003B EF                MOV     A,R7
003C 2402              ADD     A,#02H
003E FF                MOV     R7,A
003F EE                MOV     A,R6
0040 3400              ADDC    A,#00H
0042 FE                MOV     R6,A
0043 EF                MOV     A,R7
0044 7802              MOV     R0,#02H
0046         ?C0135:
0046 C3                CLR     C
0047 33                RLC     A
0048 CE                XCH     A,R6
0049 33                RLC     A
004A CE                XCH     A,R6
004B D8F9              DJNZ    R0,?C0135
004D FF                MOV     R7,A
004E 900000      R     MOV     DPTR,#pTmp
0051 E0                MOVX    A,@DPTR
0052 FC                MOV     R4,A
0053 A3                INC     DPTR
0054 E0                MOVX    A,@DPTR
0055 FD                MOV     R5,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 72  

0056 EF                MOV     A,R7
0057 2D                ADD     A,R5
0058 FF                MOV     R7,A
0059 EE                MOV     A,R6
005A 3C                ADDC    A,R4
005B FE                MOV     R6,A
005C 900000      R     MOV     DPTR,#pTmp
005F EE                MOV     A,R6
0060 F0                MOVX    @DPTR,A
0061 A3                INC     DPTR
0062 EF                MOV     A,R7
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 912
0064 900000      R     MOV     DPTR,#pTmp
0067 E0                MOVX    A,@DPTR
0068 FE                MOV     R6,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B FF                MOV     R7,A
006C 8F82              MOV     DPL,R7
006E 8E83              MOV     DPH,R6
0070 A3                INC     DPTR
0071 120000      E     LCALL   ?C?PLDCODE
0074 AE02              MOV     R6,AR2
0076 AF01              MOV     R7,AR1
                                           ; SOURCE LINE # 913
0078         ?C0112:
0078 22                RET     
             ; FUNCTION USBUART_1_GetInterfaceClassTablePtr (END)

             ; FUNCTION _USBUART_1_TerminateEP (BEGIN)
                                           ; SOURCE LINE # 934
0000 900000      R     MOV     DPTR,#ep
0003 EF                MOV     A,R7
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 935
                                           ; SOURCE LINE # 938
0005 900000      R     MOV     DPTR,#ep
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 547F              ANL     A,#07FH
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#ep
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 939
0013 900000      R     MOV     DPTR,#ep
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 7E00              MOV     R6,#00H
001A EF                MOV     A,R7
001B 24FF              ADD     A,#0FFH
001D FF                MOV     R7,A
001E EE                MOV     A,R6
001F 34FF              ADDC    A,#0FFH
0021 FE                MOV     R6,A
0022 EF                MOV     A,R7
0023 C4                SWAP    A
0024 F8                MOV     R0,A
0025 540F              ANL     A,#0FH
0027 C8                XCH     A,R0
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 73  

0028 68                XRL     A,R0
0029 FF                MOV     R7,A
002A EE                MOV     A,R6
002B C4                SWAP    A
002C 54F0              ANL     A,#0F0H
002E 48                ORL     A,R0
002F FE                MOV     R6,A
0030 900000      R     MOV     DPTR,#ri
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 941
0035 900000      R     MOV     DPTR,#ep
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
003B D3                SETB    C
003C 9400              SUBB    A,#00H
003E 5003              JNC     $ + 5H
0040 020000      R     LJMP    ?C0116
0043 900000      R     MOV     DPTR,#ep
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 EF                MOV     A,R7
0049 C3                CLR     C
004A 9409              SUBB    A,#09H
004C 4003              JC      $ + 5H
004E 020000      R     LJMP    ?C0116
                                           ; SOURCE LINE # 942
                                           ; SOURCE LINE # 944
0051 900000      R     MOV     DPTR,#ep
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 EF                MOV     A,R7
0057 75F00B            MOV     B,#0BH
005A A4                MUL     AB
005B 2400        E     ADD     A,#LOW USBUART_1_EP+02H
005D F582              MOV     DPL,A
005F E4                CLR     A
0060 3400        E     ADDC    A,#HIGH USBUART_1_EP+02H
0062 F583              MOV     DPH,A
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 EF                MOV     A,R7
0067 4401              ORL     A,#01H
0069 FF                MOV     R7,A
006A EF                MOV     A,R7
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 947
006C 900000      R     MOV     DPTR,#ep
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 EF                MOV     A,R7
0072 75F00B            MOV     B,#0BH
0075 A4                MUL     AB
0076 2400        E     ADD     A,#LOW USBUART_1_EP+03H
0078 F582              MOV     DPL,A
007A E4                CLR     A
007B 3400        E     ADDC    A,#HIGH USBUART_1_EP+03H
007D F583              MOV     DPH,A
007F E4                CLR     A
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 948
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 74  

0081 900000      R     MOV     DPTR,#ep
0084 E0                MOVX    A,@DPTR
0085 FF                MOV     R7,A
0086 EF                MOV     A,R7
0087 75F00B            MOV     B,#0BH
008A A4                MUL     AB
008B 2400        E     ADD     A,#LOW USBUART_1_EP+01H
008D F582              MOV     DPL,A
008F E4                CLR     A
0090 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
0092 F583              MOV     DPH,A
0094 7402              MOV     A,#02H
0096 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 950
0097 900000      R     MOV     DPTR,#ep
009A E0                MOVX    A,@DPTR
009B FF                MOV     R7,A
009C EF                MOV     A,R7
009D 75F00B            MOV     B,#0BH
00A0 A4                MUL     AB
00A1 2400        E     ADD     A,#LOW USBUART_1_EP+04H
00A3 F582              MOV     DPL,A
00A5 E4                CLR     A
00A6 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
00A8 F583              MOV     DPH,A
00AA E0                MOVX    A,@DPTR
00AB FF                MOV     R7,A
00AC EF                MOV     A,R7
00AD 5480              ANL     A,#080H
00AF FF                MOV     R7,A
00B0 7E00              MOV     R6,#00H
00B2 EF                MOV     A,R7
00B3 4E                ORL     A,R6
00B4 6017              JZ      ?C0114
                                           ; SOURCE LINE # 951
                                           ; SOURCE LINE # 953
00B6 900000      R     MOV     DPTR,#ri
00B9 E0                MOVX    A,@DPTR
00BA FF                MOV     R7,A
00BB 7E00              MOV     R6,#00H
00BD EF                MOV     A,R7
00BE 240E              ADD     A,#0EH
00C0 FF                MOV     R7,A
00C1 EE                MOV     A,R6
00C2 3460              ADDC    A,#060H
00C4 FE                MOV     R6,A
00C5 8F82              MOV     DPL,R7
00C7 8E83              MOV     DPH,R6
00C9 740C              MOV     A,#0CH
00CB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 954
00CC 22                RET     
00CD         ?C0114:
                                           ; SOURCE LINE # 956
                                           ; SOURCE LINE # 958
00CD 900000      R     MOV     DPTR,#ri
00D0 E0                MOVX    A,@DPTR
00D1 FF                MOV     R7,A
00D2 7E00              MOV     R6,#00H
00D4 EF                MOV     A,R7
00D5 240E              ADD     A,#0EH
00D7 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 75  

00D8 EE                MOV     A,R6
00D9 3460              ADDC    A,#060H
00DB FE                MOV     R6,A
00DC 8F82              MOV     DPL,R7
00DE 8E83              MOV     DPH,R6
00E0 7408              MOV     A,#08H
00E2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 959
                                           ; SOURCE LINE # 960
                                           ; SOURCE LINE # 961
00E3         ?C0116:
00E3 22                RET     
             ; FUNCTION _USBUART_1_TerminateEP (END)

             ; FUNCTION USBUART_1_SetEndpointHalt (BEGIN)
                                           ; SOURCE LINE # 981
                                           ; SOURCE LINE # 982
                                           ; SOURCE LINE # 985
0000 900000      R     MOV     DPTR,#requestHandled
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 988
0005 906004            MOV     DPTR,#06004H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 547F              ANL     A,#07FH
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#ep
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 989
0013 900000      R     MOV     DPTR,#ep
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 7E00              MOV     R6,#00H
001A EF                MOV     A,R7
001B 24FF              ADD     A,#0FFH
001D FF                MOV     R7,A
001E EE                MOV     A,R6
001F 34FF              ADDC    A,#0FFH
0021 FE                MOV     R6,A
0022 EF                MOV     A,R7
0023 C4                SWAP    A
0024 F8                MOV     R0,A
0025 540F              ANL     A,#0FH
0027 C8                XCH     A,R0
0028 68                XRL     A,R0
0029 FF                MOV     R7,A
002A EE                MOV     A,R6
002B C4                SWAP    A
002C 54F0              ANL     A,#0F0H
002E 48                ORL     A,R0
002F FE                MOV     R6,A
0030 900000      R     MOV     DPTR,#ri
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 991
0035 900000      R     MOV     DPTR,#ep
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A EF                MOV     A,R7
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 76  

003B D3                SETB    C
003C 9400              SUBB    A,#00H
003E 5003              JNC     $ + 5H
0040 020000      R     LJMP    ?C0117
0043 900000      R     MOV     DPTR,#ep
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 EF                MOV     A,R7
0049 C3                CLR     C
004A 9409              SUBB    A,#09H
004C 4003              JC      $ + 5H
004E 020000      R     LJMP    ?C0117
                                           ; SOURCE LINE # 992
                                           ; SOURCE LINE # 994
0051 900000      R     MOV     DPTR,#ep
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 EF                MOV     A,R7
0057 75F00B            MOV     B,#0BH
005A A4                MUL     AB
005B 2400        E     ADD     A,#LOW USBUART_1_EP+02H
005D F582              MOV     DPL,A
005F E4                CLR     A
0060 3400        E     ADDC    A,#HIGH USBUART_1_EP+02H
0062 F583              MOV     DPH,A
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 EF                MOV     A,R7
0067 4401              ORL     A,#01H
0069 FF                MOV     R7,A
006A EF                MOV     A,R7
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 997
006C 900000      R     MOV     DPTR,#ep
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 EF                MOV     A,R7
0072 75F00B            MOV     B,#0BH
0075 A4                MUL     AB
0076 2400        E     ADD     A,#LOW USBUART_1_EP+03H
0078 F582              MOV     DPL,A
007A E4                CLR     A
007B 3400        E     ADDC    A,#HIGH USBUART_1_EP+03H
007D F583              MOV     DPH,A
007F E4                CLR     A
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 998
0081 900000      R     MOV     DPTR,#ep
0084 E0                MOVX    A,@DPTR
0085 FF                MOV     R7,A
0086 EF                MOV     A,R7
0087 75F00B            MOV     B,#0BH
008A A4                MUL     AB
008B 2400        E     ADD     A,#LOW USBUART_1_EP+01H
008D F582              MOV     DPL,A
008F E4                CLR     A
0090 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
0092 F583              MOV     DPH,A
0094 E0                MOVX    A,@DPTR
0095 FF                MOV     R7,A
0096 EF                MOV     A,R7
0097 4402              ORL     A,#02H
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 77  

0099 FF                MOV     R7,A
009A EF                MOV     A,R7
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1000
009C 900000      R     MOV     DPTR,#ep
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 EF                MOV     A,R7
00A2 75F00B            MOV     B,#0BH
00A5 A4                MUL     AB
00A6 2400        E     ADD     A,#LOW USBUART_1_EP+04H
00A8 F582              MOV     DPL,A
00AA E4                CLR     A
00AB 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
00AD F583              MOV     DPH,A
00AF E0                MOVX    A,@DPTR
00B0 FF                MOV     R7,A
00B1 EF                MOV     A,R7
00B2 5480              ANL     A,#080H
00B4 FF                MOV     R7,A
00B5 7E00              MOV     R6,#00H
00B7 EF                MOV     A,R7
00B8 4E                ORL     A,R6
00B9 6018              JZ      ?C0118
                                           ; SOURCE LINE # 1001
                                           ; SOURCE LINE # 1004
00BB 900000      R     MOV     DPTR,#ri
00BE E0                MOVX    A,@DPTR
00BF FF                MOV     R7,A
00C0 7E00              MOV     R6,#00H
00C2 EF                MOV     A,R7
00C3 240E              ADD     A,#0EH
00C5 FF                MOV     R7,A
00C6 EE                MOV     A,R6
00C7 3460              ADDC    A,#060H
00C9 FE                MOV     R6,A
00CA 8F82              MOV     DPL,R7
00CC 8E83              MOV     DPH,R6
00CE 748D              MOV     A,#08DH
00D0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1005
00D1 8016              SJMP    ?C0119
00D3         ?C0118:
                                           ; SOURCE LINE # 1007
                                           ; SOURCE LINE # 1010
00D3 900000      R     MOV     DPTR,#ri
00D6 E0                MOVX    A,@DPTR
00D7 FF                MOV     R7,A
00D8 7E00              MOV     R6,#00H
00DA EF                MOV     A,R7
00DB 240E              ADD     A,#0EH
00DD FF                MOV     R7,A
00DE EE                MOV     A,R6
00DF 3460              ADDC    A,#060H
00E1 FE                MOV     R6,A
00E2 8F82              MOV     DPL,R7
00E4 8E83              MOV     DPH,R6
00E6 7489              MOV     A,#089H
00E8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1011
00E9         ?C0119:
                                           ; SOURCE LINE # 1012
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 78  

00E9 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
00EC 900000      R     MOV     DPTR,#requestHandled
00EF EF                MOV     A,R7
00F0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1013
00F1         ?C0117:
                                           ; SOURCE LINE # 1015
00F1 900000      R     MOV     DPTR,#requestHandled
00F4 E0                MOVX    A,@DPTR
00F5 FF                MOV     R7,A
                                           ; SOURCE LINE # 1016
00F6         ?C0120:
00F6 22                RET     
             ; FUNCTION USBUART_1_SetEndpointHalt (END)

             ; FUNCTION USBUART_1_ClearEndpointHalt (BEGIN)
                                           ; SOURCE LINE # 1036
                                           ; SOURCE LINE # 1037
                                           ; SOURCE LINE # 1040
0000 900000      R     MOV     DPTR,#requestHandled
0003 E4                CLR     A
0004 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1043
0005 906004            MOV     DPTR,#06004H
0008 E0                MOVX    A,@DPTR
0009 FF                MOV     R7,A
000A EF                MOV     A,R7
000B 547F              ANL     A,#07FH
000D FF                MOV     R7,A
000E 900000      R     MOV     DPTR,#ep
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1044
0013 900000      R     MOV     DPTR,#ep
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 7E00              MOV     R6,#00H
001A EF                MOV     A,R7
001B 24FF              ADD     A,#0FFH
001D FF                MOV     R7,A
001E EE                MOV     A,R6
001F 34FF              ADDC    A,#0FFH
0021 FE                MOV     R6,A
0022 EF                MOV     A,R7
0023 C4                SWAP    A
0024 F8                MOV     R0,A
0025 540F              ANL     A,#0FH
0027 C8                XCH     A,R0
0028 68                XRL     A,R0
0029 FF                MOV     R7,A
002A EE                MOV     A,R6
002B C4                SWAP    A
002C 54F0              ANL     A,#0F0H
002E 48                ORL     A,R0
002F FE                MOV     R6,A
0030 900000      R     MOV     DPTR,#ri
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1046
0035 900000      R     MOV     DPTR,#ep
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 79  

003A EF                MOV     A,R7
003B D3                SETB    C
003C 9400              SUBB    A,#00H
003E 5003              JNC     $ + 5H
0040 020000      R     LJMP    ?C0121
0043 900000      R     MOV     DPTR,#ep
0046 E0                MOVX    A,@DPTR
0047 FF                MOV     R7,A
0048 EF                MOV     A,R7
0049 C3                CLR     C
004A 9409              SUBB    A,#09H
004C 4003              JC      $ + 5H
004E 020000      R     LJMP    ?C0121
                                           ; SOURCE LINE # 1047
                                           ; SOURCE LINE # 1049
0051 900000      R     MOV     DPTR,#ep
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 EF                MOV     A,R7
0057 75F00B            MOV     B,#0BH
005A A4                MUL     AB
005B 2400        E     ADD     A,#LOW USBUART_1_EP+02H
005D F582              MOV     DPL,A
005F E4                CLR     A
0060 3400        E     ADDC    A,#HIGH USBUART_1_EP+02H
0062 F583              MOV     DPH,A
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 EF                MOV     A,R7
0067 54FE              ANL     A,#0FEH
0069 FF                MOV     R7,A
006A EF                MOV     A,R7
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1052
006C 900000      R     MOV     DPTR,#ep
006F E0                MOVX    A,@DPTR
0070 FF                MOV     R7,A
0071 EF                MOV     A,R7
0072 75F00B            MOV     B,#0BH
0075 A4                MUL     AB
0076 2400        E     ADD     A,#LOW USBUART_1_EP+03H
0078 F582              MOV     DPL,A
007A E4                CLR     A
007B 3400        E     ADDC    A,#HIGH USBUART_1_EP+03H
007D F583              MOV     DPH,A
007F E4                CLR     A
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1055
0081 900000      R     MOV     DPTR,#ri
0084 E0                MOVX    A,@DPTR
0085 FF                MOV     R7,A
0086 7E00              MOV     R6,#00H
0088 EF                MOV     A,R7
0089 240C              ADD     A,#0CH
008B FF                MOV     R7,A
008C EE                MOV     A,R6
008D 3460              ADDC    A,#060H
008F FE                MOV     R6,A
0090 8F82              MOV     DPL,R7
0092 8E83              MOV     DPH,R6
0094 E0                MOVX    A,@DPTR
0095 FF                MOV     R7,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 80  

0096 EF                MOV     A,R7
0097 547F              ANL     A,#07FH
0099 FF                MOV     R7,A
009A EF                MOV     A,R7
009B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1057
009C 900000      R     MOV     DPTR,#ep
009F E0                MOVX    A,@DPTR
00A0 FF                MOV     R7,A
00A1 EF                MOV     A,R7
00A2 75F00B            MOV     B,#0BH
00A5 A4                MUL     AB
00A6 2400        E     ADD     A,#LOW USBUART_1_EP+01H
00A8 F582              MOV     DPL,A
00AA E4                CLR     A
00AB 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
00AD F583              MOV     DPH,A
00AF E0                MOVX    A,@DPTR
00B0 FF                MOV     R7,A
00B1 EF                MOV     A,R7
00B2 54FD              ANL     A,#0FDH
00B4 FF                MOV     R7,A
00B5 EF                MOV     A,R7
00B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1059
00B7 900000      R     MOV     DPTR,#ep
00BA E0                MOVX    A,@DPTR
00BB FF                MOV     R7,A
00BC EF                MOV     A,R7
00BD 75F00B            MOV     B,#0BH
00C0 A4                MUL     AB
00C1 2400        E     ADD     A,#LOW USBUART_1_EP+04H
00C3 F582              MOV     DPL,A
00C5 E4                CLR     A
00C6 3400        E     ADDC    A,#HIGH USBUART_1_EP+04H
00C8 F583              MOV     DPH,A
00CA E0                MOVX    A,@DPTR
00CB FF                MOV     R7,A
00CC EF                MOV     A,R7
00CD 5480              ANL     A,#080H
00CF FF                MOV     R7,A
00D0 7E00              MOV     R6,#00H
00D2 EF                MOV     A,R7
00D3 4E                ORL     A,R6
00D4 6049              JZ      ?C0122
                                           ; SOURCE LINE # 1060
                                           ; SOURCE LINE # 1062
00D6 900000      R     MOV     DPTR,#ep
00D9 E0                MOVX    A,@DPTR
00DA FF                MOV     R7,A
00DB EF                MOV     A,R7
00DC 75F00B            MOV     B,#0BH
00DF A4                MUL     AB
00E0 2400        E     ADD     A,#LOW USBUART_1_EP+01H
00E2 F582              MOV     DPL,A
00E4 E4                CLR     A
00E5 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
00E7 F583              MOV     DPH,A
00E9 E0                MOVX    A,@DPTR
00EA FF                MOV     R7,A
00EB EF                MOV     A,R7
00EC B40118            CJNE    A,#01H,?C0123
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 81  

                                           ; SOURCE LINE # 1063
                                           ; SOURCE LINE # 1064
00EF 900000      R     MOV     DPTR,#ri
00F2 E0                MOVX    A,@DPTR
00F3 FF                MOV     R7,A
00F4 7E00              MOV     R6,#00H
00F6 EF                MOV     A,R7
00F7 240E              ADD     A,#0EH
00F9 FF                MOV     R7,A
00FA EE                MOV     A,R6
00FB 3460              ADDC    A,#060H
00FD FE                MOV     R6,A
00FE 8F82              MOV     DPL,R7
0100 8E83              MOV     DPH,R6
0102 740C              MOV     A,#0CH
0104 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1065
0105 805F              SJMP    ?C0125
0107         ?C0123:
                                           ; SOURCE LINE # 1067
                                           ; SOURCE LINE # 1068
0107 900000      R     MOV     DPTR,#ri
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C 7E00              MOV     R6,#00H
010E EF                MOV     A,R7
010F 240E              ADD     A,#0EH
0111 FF                MOV     R7,A
0112 EE                MOV     A,R6
0113 3460              ADDC    A,#060H
0115 FE                MOV     R6,A
0116 8F82              MOV     DPL,R7
0118 8E83              MOV     DPH,R6
011A 740D              MOV     A,#0DH
011C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1069
                                           ; SOURCE LINE # 1070
011D 8047              SJMP    ?C0125
011F         ?C0122:
                                           ; SOURCE LINE # 1072
                                           ; SOURCE LINE # 1074
011F 900000      R     MOV     DPTR,#ep
0122 E0                MOVX    A,@DPTR
0123 FF                MOV     R7,A
0124 EF                MOV     A,R7
0125 75F00B            MOV     B,#0BH
0128 A4                MUL     AB
0129 2400        E     ADD     A,#LOW USBUART_1_EP+01H
012B F582              MOV     DPL,A
012D E4                CLR     A
012E 3400        E     ADDC    A,#HIGH USBUART_1_EP+01H
0130 F583              MOV     DPH,A
0132 E0                MOVX    A,@DPTR
0133 FF                MOV     R7,A
0134 EF                MOV     A,R7
0135 B40118            CJNE    A,#01H,?C0126
                                           ; SOURCE LINE # 1075
                                           ; SOURCE LINE # 1076
0138 900000      R     MOV     DPTR,#ri
013B E0                MOVX    A,@DPTR
013C FF                MOV     R7,A
013D 7E00              MOV     R6,#00H
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 82  

013F EF                MOV     A,R7
0140 240E              ADD     A,#0EH
0142 FF                MOV     R7,A
0143 EE                MOV     A,R6
0144 3460              ADDC    A,#060H
0146 FE                MOV     R6,A
0147 8F82              MOV     DPL,R7
0149 8E83              MOV     DPH,R6
014B 7408              MOV     A,#08H
014D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1077
014E 8016              SJMP    ?C0125
0150         ?C0126:
                                           ; SOURCE LINE # 1079
                                           ; SOURCE LINE # 1080
0150 900000      R     MOV     DPTR,#ri
0153 E0                MOVX    A,@DPTR
0154 FF                MOV     R7,A
0155 7E00              MOV     R6,#00H
0157 EF                MOV     A,R7
0158 240E              ADD     A,#0EH
015A FF                MOV     R7,A
015B EE                MOV     A,R6
015C 3460              ADDC    A,#060H
015E FE                MOV     R6,A
015F 8F82              MOV     DPL,R7
0161 8E83              MOV     DPH,R6
0163 7409              MOV     A,#09H
0165 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1081
                                           ; SOURCE LINE # 1082
0166         ?C0125:
                                           ; SOURCE LINE # 1083
0166 120000      E     LCALL   USBUART_1_InitNoDataControlTransfer
0169 900000      R     MOV     DPTR,#requestHandled
016C EF                MOV     A,R7
016D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1084
016E         ?C0121:
                                           ; SOURCE LINE # 1086
016E 900000      R     MOV     DPTR,#requestHandled
0171 E0                MOVX    A,@DPTR
0172 FF                MOV     R7,A
                                           ; SOURCE LINE # 1087
0173         ?C0128:
0173 22                RET     
             ; FUNCTION USBUART_1_ClearEndpointHalt (END)

             ; FUNCTION USBUART_1_ValidateAlternateSetting (BEGIN)
                                           ; SOURCE LINE # 1107
                                           ; SOURCE LINE # 1108
                                           ; SOURCE LINE # 1109
0000 900000      R     MOV     DPTR,#requestHandled
0003 7401              MOV     A,#01H
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1114
0006 906004            MOV     DPTR,#06004H
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B 900000      R     MOV     DPTR,#interfaceNum
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 83  

                                           ; SOURCE LINE # 1116
0010 900000      E     MOV     DPTR,#USBUART_1_configuration
0013 E0                MOVX    A,@DPTR
0014 FF                MOV     R7,A
0015 EF                MOV     A,R7
0016 14                DEC     A
0017 FF                MOV     R7,A
0018 120000      R     LCALL   _USBUART_1_GetConfigTablePtr
001B 900000      R     MOV     DPTR,#pTmp
001E EE                MOV     A,R6
001F F0                MOVX    @DPTR,A
0020 A3                INC     DPTR
0021 EF                MOV     A,R7
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1117
0023 900000      R     MOV     DPTR,#pTmp
0026 E0                MOVX    A,@DPTR
0027 FE                MOV     R6,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B 8F82              MOV     DPL,R7
002D 8E83              MOV     DPH,R6
002F A3                INC     DPTR
0030 120000      E     LCALL   ?C?PLDCODE
0033 E9                MOV     A,R1
0034 2404              ADD     A,#04H
0036 F9                MOV     R1,A
0037 EA                MOV     A,R2
0038 3400              ADDC    A,#00H
003A FA                MOV     R2,A
003B 120000      E     LCALL   ?C?CLDPTR
003E FF                MOV     R7,A
003F 900000      R     MOV     DPTR,#currentInterfacesNum
0042 EF                MOV     A,R7
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1119
0044 900000      R     MOV     DPTR,#currentInterfacesNum
0047 E0                MOVX    A,@DPTR
0048 FF                MOV     R7,A
0049 900000      R     MOV     DPTR,#interfaceNum
004C E0                MOVX    A,@DPTR
004D FE                MOV     R6,A
004E EE                MOV     A,R6
004F C3                CLR     C
0050 9F                SUBB    A,R7
0051 500B              JNC     ?C0130
0053 900000      R     MOV     DPTR,#interfaceNum
0056 E0                MOVX    A,@DPTR
0057 FF                MOV     R7,A
0058 EF                MOV     A,R7
0059 C3                CLR     C
005A 9402              SUBB    A,#02H
005C 4007              JC      ?C0129
005E         ?C0130:
                                           ; SOURCE LINE # 1120
                                           ; SOURCE LINE # 1121
005E 900000      R     MOV     DPTR,#requestHandled
0061 E4                CLR     A
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1122
0063 8038              SJMP    ?C0131
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 84  

0065         ?C0129:
                                           ; SOURCE LINE # 1124
                                           ; SOURCE LINE # 1126
0065 900000      R     MOV     DPTR,#interfaceNum
0068 E0                MOVX    A,@DPTR
0069 FF                MOV     R7,A
006A 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
006C 2F                ADD     A,R7
006D F582              MOV     DPL,A
006F E4                CLR     A
0070 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
0072 F583              MOV     DPH,A
0074 E0                MOVX    A,@DPTR
0075 FF                MOV     R7,A
0076 900000      R     MOV     DPTR,#interfaceNum
0079 E0                MOVX    A,@DPTR
007A FE                MOV     R6,A
007B 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting_last
007D 2E                ADD     A,R6
007E F582              MOV     DPL,A
0080 E4                CLR     A
0081 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting_last
0083 F583              MOV     DPH,A
0085 EF                MOV     A,R7
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1127
0087 906002            MOV     DPTR,#06002H
008A E0                MOVX    A,@DPTR
008B FF                MOV     R7,A
008C 900000      R     MOV     DPTR,#interfaceNum
008F E0                MOVX    A,@DPTR
0090 FE                MOV     R6,A
0091 7400        E     MOV     A,#LOW USBUART_1_interfaceSetting
0093 2E                ADD     A,R6
0094 F582              MOV     DPL,A
0096 E4                CLR     A
0097 3400        E     ADDC    A,#HIGH USBUART_1_interfaceSetting
0099 F583              MOV     DPH,A
009B EF                MOV     A,R7
009C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1128
009D         ?C0131:
                                           ; SOURCE LINE # 1130
009D 900000      R     MOV     DPTR,#requestHandled
00A0 E0                MOVX    A,@DPTR
00A1 FF                MOV     R7,A
                                           ; SOURCE LINE # 1131
00A2         ?C0132:
00A2 22                RET     
             ; FUNCTION USBUART_1_ValidateAlternateSetting (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   5483    ----
   CONSTANT SIZE    =     16    ----
   XDATA SIZE       =      2      59
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
C51 COMPILER V9.51   USBUART_1_STD                                                         03/25/2014 11:27:02 PAGE 85  

   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
